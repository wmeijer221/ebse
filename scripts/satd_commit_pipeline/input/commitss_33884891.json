[
    {
        "satd_id": 21650338,
        "satd_repo": 33884891,
        "satd_sha": "8801a0cc3b39cf3d2a3e5ef6af004d763bdb0b93",
        "satd_text": " JSON.parse is faster for large payloads than an object literal",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/tree.js",
        "lines": [
            52
        ],
        "matched_text": "  // JSON.parse is faster for large payloads than an object literal"
    },
    {
        "satd_id": 21650345,
        "satd_repo": 33884891,
        "satd_sha": "a9314dd63bc62d61ab7b625367f02650274ac99f",
        "satd_text": " Taken from\n https://github.com/benjaminoakes/moment-strftime/blob/1886cabc4b07d13e3046ae075d357e7aad92ea93/lib/moment-strftime.js\n but I couldn't work out how to make webpack not include moment again.\n TODO: revisit our webpack config\n\n -- Begin moment-strftime\n Copyright (c) 2012 Benjamin Oakes, MIT Licensed",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/gantt.js",
        "lines": [
            25,
            26,
            27,
            28,
            29,
            30,
            31
        ],
        "matched_text": "// Taken from"
    },
    {
        "satd_id": 21650348,
        "satd_repo": 33884891,
        "satd_sha": "a9314dd63bc62d61ab7b625367f02650274ac99f",
        "satd_text": " Escape non-token strings to avoid accidental formatting",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/gantt.js",
        "lines": [
            84
        ],
        "matched_text": "    // Escape non-token strings to avoid accidental formatting"
    },
    {
        "satd_id": 21650348,
        "satd_repo": 33884891,
        "satd_sha": "a9314dd63bc62d61ab7b625367f02650274ac99f",
        "satd_text": " Escape non-token strings to avoid accidental formatting",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/gantt_chart_d3v2.js",
        "lines": [
            81
        ],
        "matched_text": "    // Escape non-token strings to avoid accidental formatting"
    },
    {
        "satd_id": 21650378,
        "satd_repo": 33884891,
        "satd_sha": "e273366ff873ed6d97095dce7ca1eab67fab1c3e",
        "satd_text": " Checks if it is possible to connect to the host using netcat.\n\n We want to avoid misleading messages and perform only forward lookup of the service IP address.\n Netcat when run without -n performs both forward and reverse lookup and fails if the reverse\n lookup name does not match the original name even if the host is reachable via IP. This happens\n randomly with docker-compose in GitHub Actions.\n Since we are not using reverse lookup elsewhere, we can perform forward lookup in python\n And use the IP in NC and add '-n' switch to disable any DNS use.\n Even if this message might be harmless, it might hide the real reason for the problem\n Which is the long time needed to start some services, seeing this message might be totally misleading\n when you try to analyse the problem, that's why it's best to avoid it,",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/prod/entrypoint_prod.sh",
        "lines": [
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71
        ],
        "matched_text": "    # Checks if it is possible to connect to the host using netcat."
    },
    {
        "satd_id": 21650399,
        "satd_text": " Starts group for GitHub Actions - makes logs much more readable\n Ends group for GitHub Actions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21650400,
        "satd_text": " Starts group for GitHub Actions - makes logs much more readable\n Ends group for GitHub Actions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21650416,
        "satd_repo": 33884891,
        "satd_sha": "50a1504c524257e53eff06589b71973cfab5bf54",
        "satd_text": " Test that the get_pandas_df method is executed on the Snowflake hook with the pre-rendered sql and",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/snowflake/transfers/test_snowflake_to_slack.py",
        "lines": [
            72
        ],
        "matched_text": "        # Test that the get_pandas_df method is executed on the Snowflake hook with the pre-rendered sql and"
    },
    {
        "satd_id": 21650423,
        "satd_repo": 33884891,
        "satd_sha": "33214d9326bb0bb52f06e230895f4f68fc952664",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/qubole/operators/test_qubole_check.py",
        "lines": [
            39
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21650428,
        "satd_repo": 33884891,
        "satd_sha": "11d03d2f63d88a284d6aaded5f9ab6642a60561b",
        "satd_text": " pylint: disable=redefined-outer-name,unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/microsoft/azure/hooks/test_azure_data_factory.py",
        "lines": [
            18
        ],
        "matched_text": "# pylint: disable=redefined-outer-name,unused-argument"
    },
    {
        "satd_id": 21650475,
        "satd_repo": 33884891,
        "satd_sha": "a48bedf26d0f04901555187aed83296190604813",
        "satd_text": " because some dependencies should never be ignorable in their contexts.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/ti_deps/deps/base_ti_dep.py",
        "lines": [
            33
        ],
        "matched_text": "    # because some dependencies should never be ignorable in their contexts."
    },
    {
        "satd_id": 21650538,
        "satd_repo": 33884891,
        "satd_sha": "59e33c1ec098f16eccc1c76c8c3fe1c86d53b1d2",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/hooks/test_subprocess.py",
        "lines": [
            40
        ],
        "matched_text": "    )  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21650595,
        "satd_repo": 33884891,
        "satd_sha": "6a0b8b208b5faed516ea2b0107fcf568e304c390",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_retries.py",
        "lines": [
            88
        ],
        "matched_text": "            def test_function():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21650724,
        "satd_repo": 33884891,
        "satd_sha": "ac2f72c98dc0821b33721054588adbf2bb53bb0b",
        "satd_text": " install extra packages missing in devel_ci\n TODO: remove it when devel_all == devel_ci",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/run_prepare_provider_documentation.sh",
        "lines": [
            100,
            101
        ],
        "matched_text": "# install extra packages missing in devel_ci"
    },
    {
        "satd_id": 21650726,
        "satd_repo": 33884891,
        "satd_sha": "ac2f72c98dc0821b33721054588adbf2bb53bb0b",
        "satd_text": "error_documentation[@]} != \"0\" ]]; then",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "scripts/in_container/run_prepare_provider_documentation.sh",
        "lines": [
            82
        ],
        "matched_text": "    if [[ ${#error_documentation[@]} != \"0\" ]]; then"
    },
    {
        "satd_id": 21650810,
        "satd_repo": 33884891,
        "satd_sha": "31b956c6c22476d109c45c99d8a325c5c1e0fd45",
        "satd_text": " Remove files from `docker-context-files` if the directory is not used\n This causes that Docker cache is consistent across different\n people who might have some files present in the docker-context files from previous builds",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            84,
            85,
            86
        ],
        "matched_text": "# Remove files from `docker-context-files` if the directory is not used"
    },
    {
        "satd_id": 21651056,
        "satd_repo": 33884891,
        "satd_sha": "2c6c7fdb2308de98e142618836bdf414df9768c8",
        "satd_text": " For now ghcr.io can only authenticate using Personal Access Token with package access scope.\n There are plans to implement GITHUB_TOKEN authentication but this is not implemented yet",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            461,
            462
        ],
        "matched_text": "            # For now ghcr.io can only authenticate using Personal Access Token with package access scope."
    },
    {
        "satd_id": 21651078,
        "satd_text": " Set state correctly and figure out how to log it and decide whether\n to email\n Note, callback invocation needs to be handled by caller of\n _run_raw_task to avoid race conditions which could lead to duplicate\n invocations or miss invocation.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/local_task_job.py",
        "lines": [
            74
        ],
        "matched_text": "        # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            742
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame) -> None:  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            749
        ],
        "matched_text": "    def _debug_dump(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/taskinstance.py",
        "lines": [
            1237
        ],
        "matched_text": "        def signal_handler(signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core/test_core.py",
        "lines": [
            193
        ],
        "matched_text": "        def check_failure(context, test_case=self):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_local_task_job.py",
        "lines": [
            451
        ],
        "matched_text": "            # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            2250
        ],
        "matched_text": "    ):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651081,
        "satd_repo": 33884891,
        "satd_sha": "f1d4f54b3479cd7549ce79efadd25cc6859dd420",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            83
        ],
        "matched_text": "    def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651245,
        "satd_repo": 33884891,
        "satd_sha": "ae625b44839c42ace4ffa5c83a9b057ab01918dc",
        "satd_text": " We want to avoid misleading messages and perform only forward lookup of the service IP address.\n Netcat when run without -n performs both forward and reverse lookup and fails if the reverse\n lookup name does not match the original name even if the host is reachable via IP. This happens\n randomly with docker-compose in Github Actions.\n Since we are not using reverse lookup elsewhere, we can perform forward lookup in python\n And use the IP in NC and add '-n' switch to disable any DNS use.\n Even if this message might be harmless, it might hide the real reason for the problem\n Which is the long time needed to start some services, seeing this message might be totally misleading\n when you try to analyse the problem, that's why it's best to avoid it,",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/check_environment.sh",
        "lines": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# We want to avoid misleading messages and perform only forward lookup of the service IP address."
    },
    {
        "satd_id": 21651245,
        "satd_repo": 33884891,
        "satd_sha": "ae625b44839c42ace4ffa5c83a9b057ab01918dc",
        "satd_text": " We want to avoid misleading messages and perform only forward lookup of the service IP address.\n Netcat when run without -n performs both forward and reverse lookup and fails if the reverse\n lookup name does not match the original name even if the host is reachable via IP. This happens\n randomly with docker-compose in Github Actions.\n Since we are not using reverse lookup elsewhere, we can perform forward lookup in python\n And use the IP in NC and add '-n' switch to disable any DNS use.\n Even if this message might be harmless, it might hide the real reason for the problem\n Which is the long time needed to start some services, seeing this message might be totally misleading\n when you try to analyse the problem, that's why it's best to avoid it,",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/prod/entrypoint_prod.sh",
        "lines": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# We want to avoid misleading messages and perform only forward lookup of the service IP address."
    },
    {
        "satd_id": 21651246,
        "satd_repo": 33884891,
        "satd_sha": "ae625b44839c42ace4ffa5c83a9b057ab01918dc",
        "satd_text": " We want to avoid misleading messages and perform only forward lookup of the service IP address.\n Netcat when run without -n performs both forward and reverse lookup and fails if the reverse\n lookup name does not match the original name even if the host is reachable via IP. This happens\n randomly with docker-compose in Github Actions.\n Since we are not using reverse lookup elsewhere, we can perform forward lookup in python\n And use the IP in NC and add '-n' switch to disable any DNS use.\n Even if this message might be harmless, it might hide the real reason for the problem\n Which is the long time needed to start some services, seeing this message might be totally misleading\n when you try to analyse the problem, that's why it's best to avoid it,",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/check_environment.sh",
        "lines": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# We want to avoid misleading messages and perform only forward lookup of the service IP address."
    },
    {
        "satd_id": 21651246,
        "satd_repo": 33884891,
        "satd_sha": "ae625b44839c42ace4ffa5c83a9b057ab01918dc",
        "satd_text": " We want to avoid misleading messages and perform only forward lookup of the service IP address.\n Netcat when run without -n performs both forward and reverse lookup and fails if the reverse\n lookup name does not match the original name even if the host is reachable via IP. This happens\n randomly with docker-compose in Github Actions.\n Since we are not using reverse lookup elsewhere, we can perform forward lookup in python\n And use the IP in NC and add '-n' switch to disable any DNS use.\n Even if this message might be harmless, it might hide the real reason for the problem\n Which is the long time needed to start some services, seeing this message might be totally misleading\n when you try to analyse the problem, that's why it's best to avoid it,",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/prod/entrypoint_prod.sh",
        "lines": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# We want to avoid misleading messages and perform only forward lookup of the service IP address."
    },
    {
        "satd_id": 21651248,
        "satd_repo": 33884891,
        "satd_sha": "9de71270838ad3cc59043f1ab0bb6ca97af13622",
        "satd_text": " HACK: TransferConfig.to_dict returns invalid representation\n See: https://github.com/googleapis/python-bigquery-datatransfer/issues/90",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/bigquery_dts.py",
        "lines": [
            82,
            83
        ],
        "matched_text": "        # HACK: TransferConfig.to_dict returns invalid representation"
    },
    {
        "satd_id": 21651259,
        "satd_repo": 33884891,
        "satd_sha": "98f097e54249ce14db2ba21a5b0aac9662df32f0",
        "satd_text": " HACK: Moto is not compatible with newer versions\n See: https://github.com/spulec/moto/issues/3535",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            466,
            467
        ],
        "matched_text": "    # HACK: Moto is not compatible with newer versions"
    },
    {
        "satd_id": 21651269,
        "satd_repo": 33884891,
        "satd_sha": "d41c6a46b176a80e1cdb0bcc592f5a8baec21c41",
        "satd_text": " Starts group for Github Actions - makes logs much more readable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_start_end.sh",
        "lines": [
            19
        ],
        "matched_text": "# Starts group for Github Actions - makes logs much more readable"
    },
    {
        "satd_id": 21651269,
        "satd_repo": 33884891,
        "satd_sha": "d41c6a46b176a80e1cdb0bcc592f5a8baec21c41",
        "satd_text": " Starts group for Github Actions - makes logs much more readable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/_in_container_utils.sh",
        "lines": [
            532
        ],
        "matched_text": "# Starts group for Github Actions - makes logs much more readable"
    },
    {
        "satd_id": 21651273,
        "satd_repo": 33884891,
        "satd_sha": "d41c6a46b176a80e1cdb0bcc592f5a8baec21c41",
        "satd_text": " Starts group for Github Actions - makes logs much more readable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_start_end.sh",
        "lines": [
            19
        ],
        "matched_text": "# Starts group for Github Actions - makes logs much more readable"
    },
    {
        "satd_id": 21651273,
        "satd_repo": 33884891,
        "satd_sha": "d41c6a46b176a80e1cdb0bcc592f5a8baec21c41",
        "satd_text": " Starts group for Github Actions - makes logs much more readable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/_in_container_utils.sh",
        "lines": [
            532
        ],
        "matched_text": "# Starts group for Github Actions - makes logs much more readable"
    },
    {
        "satd_id": 21651284,
        "satd_repo": 33884891,
        "satd_sha": "e7aeacf335d373007a32ac65680ba6b5b19f5c9f",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/transfers/test_oracle_to_gcs.py",
        "lines": [
            130
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651306,
        "satd_repo": 33884891,
        "satd_sha": "8529cb1c7d4a5eeaa59c330382deba0e936ef44b",
        "satd_text": " JSON.parse is faster for large payloads than an object literal (because the JSON grammar is simpler!)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/tree.html",
        "lines": [
            146
        ],
        "matched_text": "    // JSON.parse is faster for large payloads than an object literal (because the JSON grammar is simpler!)"
    },
    {
        "satd_id": 21651307,
        "satd_repo": 33884891,
        "satd_sha": "8529cb1c7d4a5eeaa59c330382deba0e936ef44b",
        "satd_text": " answered in the first pre-commit check (build) and then used in another (pylint/mypy/flake8 etc).",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            144
        ],
        "matched_text": "        # answered in the first pre-commit check (build) and then used in another (pylint/mypy/flake8 etc)."
    },
    {
        "satd_id": 21651311,
        "satd_repo": 33884891,
        "satd_sha": "bcf77586eff9907fa057cf2633115d5ab3e4142b",
        "satd_text": " HACK: google-cloud-datacatalog has a problem with dictionaries for update methods.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/datacatalog.py",
        "lines": [
            1024
        ],
        "matched_text": "        # HACK: google-cloud-datacatalog has a problem with dictionaries for update methods."
    },
    {
        "satd_id": 21651311,
        "satd_repo": 33884891,
        "satd_sha": "bcf77586eff9907fa057cf2633115d5ab3e4142b",
        "satd_text": " HACK: google-cloud-datacatalog has a problem with dictionaries for update methods.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/datacatalog.py",
        "lines": [
            1101
        ],
        "matched_text": "        # HACK: google-cloud-datacatalog has a problem with dictionaries for update methods."
    },
    {
        "satd_id": 21651311,
        "satd_repo": 33884891,
        "satd_sha": "bcf77586eff9907fa057cf2633115d5ab3e4142b",
        "satd_text": " HACK: google-cloud-datacatalog has a problem with dictionaries for update methods.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/datacatalog.py",
        "lines": [
            1178
        ],
        "matched_text": "        # HACK: google-cloud-datacatalog has a problem with dictionaries for update methods."
    },
    {
        "satd_id": 21651323,
        "satd_repo": 33884891,
        "satd_sha": "ab5f770bfcd8c690cbe4d0825896325aca0beeca",
        "satd_text": " pylint: disable=redefined-builtin,unused-argument,too-many-arguments",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/cli_parser.py",
        "lines": [
            92
        ],
        "matched_text": "    # pylint: disable=redefined-builtin,unused-argument,too-many-arguments"
    },
    {
        "satd_id": 21651324,
        "satd_text": " pylint: enable=redefined-builtin,unused-argument,too-many-arguments\n tasks_run\n This is a hidden option -- not meant for users to set or know about",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21651375,
        "satd_repo": 33884891,
        "satd_sha": "e595d35bf4b57865f930938df12a673c3792e35e",
        "satd_text": " turn warnings into errors\n show full traceback on exception\n builder to use",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docs_build/docs_builder.py",
        "lines": [
            106,
            107,
            108
        ],
        "matched_text": "                \"-W\",  # turn warnings into errors"
    },
    {
        "satd_id": 21651402,
        "satd_text": " Those are requirements that each provider package has\n Those are requirements that each extra has. For extras that match the providers\n the requirements are identical as in the list above, but we have still a few aliases\n that have different set of requirements.\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n Those are airflow providers added for the extras in many cases extra = provider\n But for aliases and some special aliases (like all_dbs) the list might be longer.\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0\n TODO: remove this in Airflow 3.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21651437,
        "satd_repo": 33884891,
        "satd_sha": "ed1825c0264d1f77c4754b722fb3721cbcd779d7",
        "satd_text": " Cleanup dist and docker-context-files folders",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/images/ci_prepare_prod_image_on_ci.sh",
        "lines": [
            63
        ],
        "matched_text": "        # Cleanup dist and docker-context-files folders"
    },
    {
        "satd_id": 21651451,
        "satd_repo": 33884891,
        "satd_sha": "82dfa5f74bfa39bedf127763dde4d08678202445",
        "satd_text": " Columns is to force it wider, so it doesn't wrap at 80 characters",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/run_install_and_test_provider_packages.sh",
        "lines": [
            82
        ],
        "matched_text": "    # Columns is to force it wider, so it doesn't wrap at 80 characters"
    },
    {
        "satd_id": 21651524,
        "satd_repo": 33884891,
        "satd_sha": "cba8d625532b030b2b1d1f5393df809fd49c24a4",
        "satd_text": " TODO: Check if tests needs side effects - locally there's missing DAG",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/cli/commands/test_dag_command.py",
        "lines": [
            50
        ],
        "matched_text": "# TODO: Check if tests needs side effects - locally there's missing DAG"
    },
    {
        "satd_id": 21651524,
        "satd_repo": 33884891,
        "satd_sha": "cba8d625532b030b2b1d1f5393df809fd49c24a4",
        "satd_text": " TODO: Check if tests needs side effects - locally there's missing DAG",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/cli/commands/test_task_command.py",
        "lines": [
            58
        ],
        "matched_text": "# TODO: Check if tests needs side effects - locally there's missing DAG"
    },
    {
        "satd_id": 21651530,
        "satd_repo": 33884891,
        "satd_sha": "e4cb0ef192eecfa68929bf213e7f28d2672b9e94",
        "satd_text": " TODO: remove it when devel_all == devel_ci",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/run_prepare_provider_readme.sh",
        "lines": [
            30
        ],
        "matched_text": "# TODO: remove it when devel_all == devel_ci"
    },
    {
        "satd_id": 21651550,
        "satd_repo": 33884891,
        "satd_sha": "08bc62b64d478c7ac4164e5d1e44ada1dae85fcb",
        "satd_text": " Slow patch",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/pre_commit/pre_commit_json_schema.py",
        "lines": [
            76
        ],
        "matched_text": "    # Slow patch"
    },
    {
        "satd_id": 21651557,
        "satd_repo": 33884891,
        "satd_sha": "6b3c6add9ea245b43ee367491bf9193d59bd248c",
        "satd_text": " TODO: remove the | true after we fixed pip check for prod image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/images/ci_wait_for_ci_image.sh",
        "lines": [
            29
        ],
        "matched_text": "    # TODO: remove the | true after we fixed pip check for prod image"
    },
    {
        "satd_id": 21651557,
        "satd_repo": 33884891,
        "satd_sha": "6b3c6add9ea245b43ee367491bf9193d59bd248c",
        "satd_text": " TODO: remove the | true after we fixed pip check for prod image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/images/ci_wait_for_prod_image.sh",
        "lines": [
            29
        ],
        "matched_text": "    # TODO: remove the | true after we fixed pip check for prod image"
    },
    {
        "satd_id": 21651559,
        "satd_repo": 33884891,
        "satd_sha": "6b3c6add9ea245b43ee367491bf9193d59bd248c",
        "satd_text": " TODO: remove the | true after we fixed pip check for prod image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/images/ci_wait_for_ci_image.sh",
        "lines": [
            29
        ],
        "matched_text": "    # TODO: remove the | true after we fixed pip check for prod image"
    },
    {
        "satd_id": 21651559,
        "satd_repo": 33884891,
        "satd_sha": "6b3c6add9ea245b43ee367491bf9193d59bd248c",
        "satd_text": " TODO: remove the | true after we fixed pip check for prod image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/images/ci_wait_for_prod_image.sh",
        "lines": [
            29
        ],
        "matched_text": "    # TODO: remove the | true after we fixed pip check for prod image"
    },
    {
        "satd_id": 21651571,
        "satd_repo": 33884891,
        "satd_sha": "41a699a7bd1819b22ca59b0f6ee1baa8152a0d13",
        "satd_text": " clean-up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/build_airflow/ci_build_airflow_package.sh",
        "lines": [
            28
        ],
        "matched_text": "# clean-up"
    },
    {
        "satd_id": 21651577,
        "satd_repo": 33884891,
        "satd_sha": "41a699a7bd1819b22ca59b0f6ee1baa8152a0d13",
        "satd_text": " clean-up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/build_airflow/ci_build_airflow_package.sh",
        "lines": [
            28
        ],
        "matched_text": "# clean-up"
    },
    {
        "satd_id": 21651602,
        "satd_repo": 33884891,
        "satd_sha": "a66d29f44da3db8e5c6f243aedb01a70a810585a",
        "satd_text": " TODO(mik-laj): TODO: Add again on production version of documentation\n 'version-selector.html',",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            246,
            247
        ],
        "matched_text": "        # TODO(mik-laj): TODO: Add again on production version of documentation"
    },
    {
        "satd_id": 21651669,
        "satd_repo": 33884891,
        "satd_sha": "c34ef853c890e08f5468183c03dc8f3f3ce84af2",
        "satd_text": " TODO: We should also check the guides  in the provider documentations.\n     For now, we are only checking the core documentation.\n     This is easiest to do after the content has been fully migrated.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/exts/docs_build/lint_checks.py",
        "lines": [
            80,
            81,
            82
        ],
        "matched_text": "    # TODO: We should also check the guides  in the provider documentations."
    },
    {
        "satd_id": 21651678,
        "satd_repo": 33884891,
        "satd_sha": "c34ef853c890e08f5468183c03dc8f3f3ce84af2",
        "satd_text": " HACK:\n Sphinx-autoapi doesn't like imports to excluded packages in the main module.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/__init__.py",
        "lines": [
            20,
            21
        ],
        "matched_text": "# HACK:"
    },
    {
        "satd_id": 21651831,
        "satd_repo": 33884891,
        "satd_sha": "cab86d80d48227849906319917126f6d558b2e00",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator_backcompat.py",
        "lines": [
            1
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651831,
        "satd_repo": 33884891,
        "satd_sha": "cab86d80d48227849906319917126f6d558b2e00",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator_backcompat.py",
        "lines": [
            162
        ],
        "matched_text": "    ):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651831,
        "satd_repo": 33884891,
        "satd_sha": "cab86d80d48227849906319917126f6d558b2e00",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator_backcompat.py",
        "lines": [
            656
        ],
        "matched_text": "    ):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21651838,
        "satd_repo": 33884891,
        "satd_sha": "cab86d80d48227849906319917126f6d558b2e00",
        "satd_text": " pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator_backcompat.py",
        "lines": [
            697
        ],
        "matched_text": "# pylint: enable=unused-argument"
    },
    {
        "satd_id": 21652247,
        "satd_repo": 33884891,
        "satd_sha": "917e6c4424985271c53dd8c413b211896ee55726",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/gcs.py",
        "lines": [
            297
        ],
        "matched_text": "        object_url: Optional[str] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652247,
        "satd_repo": 33884891,
        "satd_sha": "917e6c4424985271c53dd8c413b211896ee55726",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/gcs.py",
        "lines": [
            327
        ],
        "matched_text": "        object_url: Optional[str] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652247,
        "satd_repo": 33884891,
        "satd_sha": "917e6c4424985271c53dd8c413b211896ee55726",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_gcs.py",
        "lines": [
            596
        ],
        "matched_text": "    def test_compose_with_empty_source_objects(self, mock_service):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652247,
        "satd_repo": 33884891,
        "satd_sha": "917e6c4424985271c53dd8c413b211896ee55726",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_gcs.py",
        "lines": [
            611
        ],
        "matched_text": "    def test_compose_without_bucket(self, mock_service):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652247,
        "satd_repo": 33884891,
        "satd_sha": "917e6c4424985271c53dd8c413b211896ee55726",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_gcs.py",
        "lines": [
            626
        ],
        "matched_text": "    def test_compose_without_destination_object(self, mock_service):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652261,
        "satd_repo": 33884891,
        "satd_sha": "6889a333cff001727eb0a66e375544a28c9a5f03",
        "satd_text": " TODO: Delete after splitting the documentation for each provider.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "scripts/ci/pre_commit/pre_commit_check_provider_yaml_files.py",
        "lines": [
            224
        ],
        "matched_text": "# TODO: Delete after splitting the documentation for each provider."
    },
    {
        "satd_id": 21652278,
        "satd_repo": 33884891,
        "satd_sha": "1222ebd4e1eb6fdefa886759c43d4d4db691697a",
        "satd_text": " TODO: Remove once deprecated",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            380
        ],
        "matched_text": "        # TODO: Remove once deprecated"
    },
    {
        "satd_id": 21652286,
        "satd_text": " turn warnings into errors\n show full traceback on exception\n show full traceback on exception\n do emit colored output\n write warnings (and errors) to given file",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            575
        ],
        "matched_text": "    'atlas': atlas,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            576
        ],
        "matched_text": "    'aws': amazon,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            577
        ],
        "matched_text": "    'azure': azure,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            578
        ],
        "matched_text": "    'cassandra': cassandra,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            590
        ],
        "matched_text": "    'druid': druid,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            594
        ],
        "matched_text": "    'gcp': google,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            595
        ],
        "matched_text": "    'gcp_api': google,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            601
        ],
        "matched_text": "    'hdfs': hdfs,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            602
        ],
        "matched_text": "    'hive': hive,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            606
        ],
        "matched_text": "    'kubernetes': kubernetes,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            612
        ],
        "matched_text": "    'mssql': mssql,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            619
        ],
        "matched_text": "    'pinot': pinot,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            623
        ],
        "matched_text": "    'qds': qubole,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            641
        ],
        "matched_text": "    'webhdfs': webhdfs,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            642
        ],
        "matched_text": "    'winrm': winrm,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            643
        ],
        "matched_text": "    'yandex': yandexcloud,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            679
        ],
        "matched_text": "    'atlas': [],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            680
        ],
        "matched_text": "    'aws': [\"amazon\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            681
        ],
        "matched_text": "    'azure': [\"microsoft.azure\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            682
        ],
        "matched_text": "    'cassandra': [\"apache.cassandra\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            694
        ],
        "matched_text": "    'druid': [\"apache.druid\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            698
        ],
        "matched_text": "    'gcp': [\"google\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            699
        ],
        "matched_text": "    'gcp_api': [\"google\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            705
        ],
        "matched_text": "    'hdfs': [\"apache.hdfs\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            706
        ],
        "matched_text": "    'hive': [\"apache.hive\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            710
        ],
        "matched_text": "    'kubernetes': [\"cncf.kubernetes\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            716
        ],
        "matched_text": "    'mssql': [\"microsoft.mssql\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            723
        ],
        "matched_text": "    'pinot': [\"apache.pinot\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            727
        ],
        "matched_text": "    'qds': [\"qubole\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            745
        ],
        "matched_text": "    'webhdfs': [\"apache.hdfs\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            746
        ],
        "matched_text": "    'winrm': [\"microsoft.winrm\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652290,
        "satd_repo": 33884891,
        "satd_sha": "dd9ac785c4807aea4a1fb88a56d445d462c42b40",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            747
        ],
        "matched_text": "    'yandexcloud': [\"yandex\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            575
        ],
        "matched_text": "    'atlas': atlas,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            576
        ],
        "matched_text": "    'aws': amazon,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            577
        ],
        "matched_text": "    'azure': azure,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            578
        ],
        "matched_text": "    'cassandra': cassandra,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            590
        ],
        "matched_text": "    'druid': druid,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            594
        ],
        "matched_text": "    'gcp': google,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            595
        ],
        "matched_text": "    'gcp_api': google,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            601
        ],
        "matched_text": "    'hdfs': hdfs,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            602
        ],
        "matched_text": "    'hive': hive,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            606
        ],
        "matched_text": "    'kubernetes': kubernetes,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            612
        ],
        "matched_text": "    'mssql': mssql,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            619
        ],
        "matched_text": "    'pinot': pinot,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            623
        ],
        "matched_text": "    'qds': qubole,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            641
        ],
        "matched_text": "    'webhdfs': webhdfs,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            642
        ],
        "matched_text": "    'winrm': winrm,  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            678
        ],
        "matched_text": "    'atlas': [],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            679
        ],
        "matched_text": "    'aws': [\"amazon\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            680
        ],
        "matched_text": "    'azure': [\"microsoft.azure\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            681
        ],
        "matched_text": "    'cassandra': [\"apache.cassandra\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            693
        ],
        "matched_text": "    'druid': [\"apache.druid\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            697
        ],
        "matched_text": "    'gcp': [\"google\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            698
        ],
        "matched_text": "    'gcp_api': [\"google\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            704
        ],
        "matched_text": "    'hdfs': [\"apache.hdfs\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            705
        ],
        "matched_text": "    'hive': [\"apache.hive\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            709
        ],
        "matched_text": "    'kubernetes': [\"cncf.kubernetes\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            715
        ],
        "matched_text": "    'mssql': [\"microsoft.mssql\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            722
        ],
        "matched_text": "    'pinot': [\"apache.pinot\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            726
        ],
        "matched_text": "    'qds': [\"qubole\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            744
        ],
        "matched_text": "    'webhdfs': [\"apache.hdfs\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            745
        ],
        "matched_text": "    'winrm': [\"microsoft.winrm\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652298,
        "satd_repo": 33884891,
        "satd_sha": "348510f86b8ee6b7d89c1355258e61095a6a29e9",
        "satd_text": " TODO: remove this in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            746
        ],
        "matched_text": "    'yandexcloud': [\"yandex\"],  # TODO: remove this in Airflow 2.1"
    },
    {
        "satd_id": 21652345,
        "satd_repo": 33884891,
        "satd_sha": "90a147813a8608cb194d13c3a8570c8aa69b868b",
        "satd_text": " CleanUp",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1813
        ],
        "matched_text": "        # CleanUp"
    },
    {
        "satd_id": 21652345,
        "satd_repo": 33884891,
        "satd_sha": "90a147813a8608cb194d13c3a8570c8aa69b868b",
        "satd_text": " CleanUp",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1876
        ],
        "matched_text": "        # CleanUp"
    },
    {
        "satd_id": 21652346,
        "satd_repo": 33884891,
        "satd_sha": "ac45621df2aeda94ddd15cea990040be8ff09957",
        "satd_text": " TODO(potiuk) fix me for both backport/provider package check",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "dev/provider_packages/prepare_provider_packages.py",
        "lines": [
            1203
        ],
        "matched_text": "            # TODO(potiuk) fix me for both backport/provider package check"
    },
    {
        "satd_id": 21652360,
        "satd_repo": 33884891,
        "satd_sha": "92e405e72922cc569a2e41281df9d055c3a7855d",
        "satd_text": " This poll interval is large, bug the scheduler doesn't sleep that\n long, instead we hit the clean_tis_without_dagrun interval instead",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1922,
            1923
        ],
        "matched_text": "        # This poll interval is large, bug the scheduler doesn't sleep that"
    },
    {
        "satd_id": 21652369,
        "satd_repo": 33884891,
        "satd_sha": "0cd7a0aa6efa730511abfce682c7a02e9a573db7",
        "satd_text": " no doc_md",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "tests/api_connexion/endpoints/test_dag_endpoint.py",
        "lines": [
            75
        ],
        "matched_text": "        with DAG(cls.dag2_id, start_date=datetime(2020, 6, 15)) as dag2:  # no doc_md"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            219
        ],
        "matched_text": "        # pylint: disable=unused-argument # pragma: no cover"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            294
        ],
        "matched_text": "            queue: Optional[str] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            295
        ],
        "matched_text": "            executor_config: Optional[Any] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            751
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame) -> None:  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            758
        ],
        "matched_text": "    def _debug_dump(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652378,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dag_processing.py",
        "lines": [
            569
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21652380,
        "satd_repo": 33884891,
        "satd_sha": "5d9703718a47b537f86b5390795217c8777f9d8a",
        "satd_text": " So that we ignore the debug dump signal, making it easier to send",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dag_processing.py",
        "lines": [
            566
        ],
        "matched_text": "        # So that we ignore the debug dump signal, making it easier to send"
    },
    {
        "satd_id": 21652381,
        "satd_repo": 33884891,
        "satd_sha": "31dc6cf82734690bf95ade4554e7ebb183055311",
        "satd_text": "## TaskFlow API Tutorial Documentation",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_taskflow_api_etl.py",
        "lines": [
            21
        ],
        "matched_text": "### TaskFlow API Tutorial Documentation"
    },
    {
        "satd_id": 21652382,
        "satd_repo": 33884891,
        "satd_sha": "31dc6cf82734690bf95ade4554e7ebb183055311",
        "satd_text": "## TaskFlow API Tutorial Documentation",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_taskflow_api_etl.py",
        "lines": [
            21
        ],
        "matched_text": "### TaskFlow API Tutorial Documentation"
    },
    {
        "satd_id": 21652399,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21652400,
        "satd_repo": 33884891,
        "satd_sha": "980c7252c0f28c251e9f87d736cd88d6027f3da3",
        "satd_text": " kubernetes cleanup-pods",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/cli_parser.py",
        "lines": [
            759
        ],
        "matched_text": "# kubernetes cleanup-pods"
    },
    {
        "satd_id": 21652419,
        "satd_repo": 33884891,
        "satd_sha": "0314a3a218f864f78ec260cc66134e7acae34bc5",
        "satd_text": " Mypy doesn't cope very well with namespace packages when give filenames (it gets confused about the lack of __init__.py in airflow.providers, and thinks airflow.providers.docker is the same as a \"docker\" top level module).\n\n So we instead need to convert the file names in to module names to check",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/run_mypy.sh",
        "lines": [
            25,
            26,
            27
        ],
        "matched_text": "# Mypy doesn't cope very well with namespace packages when give filenames (it gets confused about the lack of __init__.py in airflow.providers, and thinks airflow.providers.docker is the same as a \"docker\" top level module)."
    },
    {
        "satd_id": 21652467,
        "satd_text": " pylint: disable=invalid-name\n pylint: disable=invalid-name\n pylint: disable=invalid-name\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21652500,
        "satd_repo": 33884891,
        "satd_sha": "a5d3176878699c39b4dd5a909e1e3cdad3fbed32",
        "satd_text": " Set DAG documentation from function documentation.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/models/dag.py",
        "lines": [
            2238
        ],
        "matched_text": "                # Set DAG documentation from function documentation."
    },
    {
        "satd_id": 21652695,
        "satd_repo": 33884891,
        "satd_sha": "4c8e033c0ee7d28963d504a9216205155f20f58f",
        "satd_text": " we don't need to test the paginator that's covered by boto tests",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/hooks/test_s3.py",
        "lines": [
            120
        ],
        "matched_text": "        # we don't need to test the paginator that's covered by boto tests"
    },
    {
        "satd_id": 21652697,
        "satd_repo": 33884891,
        "satd_sha": "0218bcf838404e527d1a7d5d8734aaa19e8ebecb",
        "satd_text": " Use LocalExecutor if not set and if backend is not sqlite as it gives\n better performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/in_container/run_tmux.sh",
        "lines": [
            25,
            26
        ],
        "matched_text": "    # Use LocalExecutor if not set and if backend is not sqlite as it gives"
    },
    {
        "satd_id": 21652949,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [START documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_decorated_etl_dag.py",
        "lines": [
            58
        ],
        "matched_text": "    # [START documentation]"
    },
    {
        "satd_id": 21652949,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [START documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            57
        ],
        "matched_text": "    # [START documentation]"
    },
    {
        "satd_id": 21652951,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_decorated_etl_dag.py",
        "lines": [
            60
        ],
        "matched_text": "    # [END documentation]"
    },
    {
        "satd_id": 21652951,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            59
        ],
        "matched_text": "    # [END documentation]"
    },
    {
        "satd_id": 21652952,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_decorated_etl_dag.py",
        "lines": [
            111
        ],
        "matched_text": "# [END tutorial]"
    },
    {
        "satd_id": 21652952,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            129
        ],
        "matched_text": "# [END tutorial]"
    },
    {
        "satd_id": 21652952,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/tutorial_decorated_flows.rst",
        "lines": [
            40
        ],
        "matched_text": "    :end-before: [END tutorial]"
    },
    {
        "satd_id": 21652952,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/tutorial_decorated_flows.rst",
        "lines": [
            101
        ],
        "matched_text": "    :end-before: [END tutorial]"
    },
    {
        "satd_id": 21652968,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_decorated_etl_dag.py",
        "lines": [
            60
        ],
        "matched_text": "    # [END documentation]"
    },
    {
        "satd_id": 21652968,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            59
        ],
        "matched_text": "    # [END documentation]"
    },
    {
        "satd_id": 21652969,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END instantiate_dag]\n [START documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            56,
            57
        ],
        "matched_text": "    # [END instantiate_dag]"
    },
    {
        "satd_id": 21652970,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_decorated_etl_dag.py",
        "lines": [
            111
        ],
        "matched_text": "# [END tutorial]"
    },
    {
        "satd_id": 21652970,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial_etl_dag.py",
        "lines": [
            129
        ],
        "matched_text": "# [END tutorial]"
    },
    {
        "satd_id": 21652970,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/tutorial_decorated_flows.rst",
        "lines": [
            40
        ],
        "matched_text": "    :end-before: [END tutorial]"
    },
    {
        "satd_id": 21652970,
        "satd_repo": 33884891,
        "satd_sha": "095756c6e8298801dd0b59096f8c555b7daefec7",
        "satd_text": " [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/tutorial_decorated_flows.rst",
        "lines": [
            101
        ],
        "matched_text": "    :end-before: [END tutorial]"
    },
    {
        "satd_id": 21653030,
        "satd_repo": 33884891,
        "satd_sha": "b78632704124930eaf883142a0045a1ed348911c",
        "satd_text": " TODO: If there was an actual Relationship between TI and Job",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_dag_processing.py",
        "lines": [
            250
        ],
        "matched_text": "                # TODO: If there was an actual Relationship between TI and Job"
    },
    {
        "satd_id": 21653032,
        "satd_repo": 33884891,
        "satd_sha": "5bc5994c2c1a8f73a644e29e98d3d132c6097ab2",
        "satd_text": " check if parameter set for the variable is allowed (should be on the _breeze_allowed list)\n and if it is, it saves it to .build cache file. In case the parameter is wrong, the\n saved variable is removed (so that bad value is not used again in case it comes from there)\n and exits with an error",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_parameters.sh",
        "lines": [
            57,
            58,
            59,
            60
        ],
        "matched_text": "# check if parameter set for the variable is allowed (should be on the _breeze_allowed list)"
    },
    {
        "satd_id": 21653048,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " Set it to true here as it makes us take the slow/more complete path, and when it's next parsed by the\n DagParser it will get set to correct value.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/migrations/versions/98271e7606e2_add_scheduling_decision_to_dagrun_and_.py",
        "lines": [
            64,
            65
        ],
        "matched_text": "    # Set it to true here as it makes us take the slow/more complete path, and when it's next parsed by the"
    },
    {
        "satd_id": 21653053,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " TODO: Bake this query, it is run _A lot_",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/dagrun.py",
        "lines": [
            176
        ],
        "matched_text": "        # TODO: Bake this query, it is run _A lot_"
    },
    {
        "satd_id": 21653054,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " TODO[HA]: We probably need to savepoint this so we can keep the transaction alive.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/dagrun.py",
        "lines": [
            590
        ],
        "matched_text": "            # TODO[HA]: We probably need to savepoint this so we can keep the transaction alive."
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            798
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame) -> None:  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/taskinstance.py",
        "lines": [
            1163
        ],
        "matched_text": "        def signal_handler(signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            94
        ],
        "matched_text": "def policy(task):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            113
        ],
        "matched_text": "def task_instance_mutation_hook(task_instance):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            125
        ],
        "matched_text": "def pod_mutation_hook(pod):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/stats.py",
        "lines": [
            87
        ],
        "matched_text": "    def stop(self, send=True):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/stats.py",
        "lines": [
            249
        ],
        "matched_text": "    def gauge(self, stat, value, rate=1, delta=False, tags=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dag_processing.py",
        "lines": [
            594
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            312
        ],
        "matched_text": "def circles(error):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            321
        ],
        "matched_text": "def show_traceback(error):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            2656
        ],
        "matched_text": "    def prefill_form(self, form, request_id):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            2778
        ],
        "matched_text": "    def action_muldelete(self, items, session=None):  # noqa # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            2195
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            66
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67
        ],
        "matched_text": "                              statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            68
        ],
        "matched_text": "                              parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            69
        ],
        "matched_text": "                              context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            70
        ],
        "matched_text": "                              executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            88
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            91
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            92
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            184
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            185
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            186
        ],
        "matched_text": "                             statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187
        ],
        "matched_text": "                             parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            189
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653060,
        "satd_repo": 33884891,
        "satd_sha": "73b9163a8f55ce3d5bf6aec0a558952c27dd1b55",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/www/test_views.py",
        "lines": [
            175
        ],
        "matched_text": "        def record(sender, template, context, **extra):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653330,
        "satd_repo": 33884891,
        "satd_sha": "49c193fb872856500d8919facf45b9ab5207a093",
        "satd_text": " This is the join node used to reduce the number of edges between two TaskGroup.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            183
        ],
        "matched_text": "        # This is the join node used to reduce the number of edges between two TaskGroup."
    },
    {
        "satd_id": 21653442,
        "satd_repo": 33884891,
        "satd_sha": "ac943c9e18f75259d531dbda8c51e650f57faa4c",
        "satd_text": " TODO: whether we need sensing here or not (in sensor and task_instance state machine)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/taskinstance.py",
        "lines": [
            285
        ],
        "matched_text": "        # TODO: whether we need sensing here or not (in sensor and task_instance state machine)"
    },
    {
        "satd_id": 21653457,
        "satd_repo": 33884891,
        "satd_sha": "3c3342f1fd0662401c09bdc2f7de277b53ac1d43",
        "satd_text": " Indicate document returned",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "tests/providers/microsoft/azure/sensors/test_azure_cosmos.py",
        "lines": [
            32
        ],
        "matched_text": "        mock_instance.get_document.return_value = True  # Indicate document returned"
    },
    {
        "satd_id": 21653459,
        "satd_repo": 33884891,
        "satd_sha": "3c3342f1fd0662401c09bdc2f7de277b53ac1d43",
        "satd_text": " Indicate document not returned",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "tests/providers/microsoft/azure/sensors/test_azure_cosmos.py",
        "lines": [
            46
        ],
        "matched_text": "        mock_instance.get_document.return_value = None  # Indicate document not returned"
    },
    {
        "satd_id": 21653460,
        "satd_repo": 33884891,
        "satd_sha": "3c3342f1fd0662401c09bdc2f7de277b53ac1d43",
        "satd_text": " add missing test files in providers package here.",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/test_project_structure.py",
        "lines": [
            31
        ],
        "matched_text": "MISSING_TEST_FILES: Set[str] = set()  # add missing test files in providers package here."
    },
    {
        "satd_id": 21653488,
        "satd_repo": 33884891,
        "satd_sha": "9ac882e6cc845f7492bcf0e522d7bd2c914eb98a",
        "satd_text": " TODO: Remove after Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dag_processing.py",
        "lines": [
            1201
        ],
        "matched_text": "                # TODO: Remove after Airflow 2.0"
    },
    {
        "satd_id": 21653544,
        "satd_repo": 33884891,
        "satd_sha": "338b412c04abc3fef8126f9724b448d1a9fd0bbc",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator.py",
        "lines": [
            1
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653544,
        "satd_repo": 33884891,
        "satd_sha": "338b412c04abc3fef8126f9724b448d1a9fd0bbc",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator.py",
        "lines": [
            773
        ],
        "matched_text": "            start_mock):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653544,
        "satd_repo": 33884891,
        "satd_sha": "338b412c04abc3fef8126f9724b448d1a9fd0bbc",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator.py",
        "lines": [
            838
        ],
        "matched_text": "            start_mock):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653544,
        "satd_repo": 33884891,
        "satd_sha": "338b412c04abc3fef8126f9724b448d1a9fd0bbc",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "kubernetes_tests/test_kubernetes_pod_operator.py",
        "lines": [
            882
        ],
        "matched_text": "                     monitor_mock):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653657,
        "satd_text": " noqa\n noqa pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21653666,
        "satd_repo": 33884891,
        "satd_sha": "3a53039fd10543f01d7d619bf3cbbf69f5896cbe",
        "satd_text": " Github Registry names must be lowercase :(",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            340
        ],
        "matched_text": "        # Github Registry names must be lowercase :("
    },
    {
        "satd_id": 21653666,
        "satd_repo": 33884891,
        "satd_sha": "3a53039fd10543f01d7d619bf3cbbf69f5896cbe",
        "satd_text": " Github Registry names must be lowercase :(",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            618
        ],
        "matched_text": "        # Github Registry names must be lowercase :("
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            2390
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            68
        ],
        "matched_text": "                              statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            69
        ],
        "matched_text": "                              parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            70
        ],
        "matched_text": "                              context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            71
        ],
        "matched_text": "                              executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            89
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            92
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            93
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            189
        ],
        "matched_text": "                             statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            190
        ],
        "matched_text": "                             parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            191
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653667,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            192
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653670,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67,
            68,
            69,
            70,
            71
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653670,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188,
            189,
            190,
            191
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653670,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188,
            189,
            190,
            191,
            192
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67,
            68
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            68,
            69
        ],
        "matched_text": "                              statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            69,
            70
        ],
        "matched_text": "                              parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            70,
            71
        ],
        "matched_text": "                              context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            92,
            93
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188,
            189
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            189,
            190
        ],
        "matched_text": "                             statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            190,
            191
        ],
        "matched_text": "                             parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653671,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            191,
            192
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653672,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188,
            189,
            190,
            191,
            192
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            2390
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            68
        ],
        "matched_text": "                              statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            69
        ],
        "matched_text": "                              parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            70
        ],
        "matched_text": "                              context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            71
        ],
        "matched_text": "                              executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            89
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            92
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            93
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            189
        ],
        "matched_text": "                             statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            190
        ],
        "matched_text": "                             parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            191
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653673,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            192
        ],
        "matched_text": "                             executemany):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653676,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67,
            68,
            69,
            70,
            71
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653676,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188,
            189,
            190,
            191
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653676,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188,
            189,
            190,
            191,
            192
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            67,
            68
        ],
        "matched_text": "                              cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            68,
            69
        ],
        "matched_text": "                              statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            69,
            70
        ],
        "matched_text": "                              parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            70,
            71
        ],
        "matched_text": "                              context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            92,
            93
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            188,
            189
        ],
        "matched_text": "                             cursor,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            189,
            190
        ],
        "matched_text": "                             statement,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            190,
            191
        ],
        "matched_text": "                             parameters,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653677,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            191,
            192
        ],
        "matched_text": "                             context,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653678,
        "satd_repo": 33884891,
        "satd_sha": "7ee7d7cf3f276e578463f0213b6c832027dbb9c3",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/perf/perf_kit/sqlalchemy.py",
        "lines": [
            187,
            188,
            189,
            190,
            191,
            192
        ],
        "matched_text": "                             conn,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21653813,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/docker.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653813,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/helm.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653813,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kind.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653813,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kubectl.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653815,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/docker.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653815,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/helm.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653815,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kind.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653815,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kubectl.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653817,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/docker.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653817,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/helm.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653817,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kind.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653817,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kubectl.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653819,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/docker.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653819,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/helm.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653819,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kind.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653819,
        "satd_repo": 33884891,
        "satd_sha": "db446f267748c1c44229f03990b3aeb519c112f8",
        "satd_text": " Noop for now, but we can use it in the future to mock more tests of bash scripts",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/bats/mocks/kubectl.sh",
        "lines": [
            19
        ],
        "matched_text": "# Noop for now, but we can use it in the future to mock more tests of bash scripts"
    },
    {
        "satd_id": 21653832,
        "satd_repo": 33884891,
        "satd_sha": "77a635eb45099227d8d708bcc22c1e19ad13a451",
        "satd_text": " whether the output from script should be printed at all",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            104
        ],
        "matched_text": "    # whether the output from script should be printed at all"
    },
    {
        "satd_id": 21653936,
        "satd_repo": 33884891,
        "satd_sha": "a74a7da2c4cd668357ac5e16f052e05b77064add",
        "satd_text": " TODO: we should migrate to 1.0 likely and add <2.0.0 then",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            270
        ],
        "matched_text": "    'google-cloud-datacatalog>=0.5.0, <0.8',  # TODO: we should migrate to 1.0 likely and add <2.0.0 then"
    },
    {
        "satd_id": 21654108,
        "satd_text": " whether verbose output should be produced\n whether verbose commands output (set -x) should be used",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21654158,
        "satd_repo": 33884891,
        "satd_sha": "1508c43ec9594e801b415dd82472fa017791b759",
        "satd_text": " TODO use typing.Literal for this in Python 3.8",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/operators/sagemaker_processing.py",
        "lines": [
            62
        ],
        "matched_text": "                 action_if_job_exists: str = \"increment\",  # TODO use typing.Literal for this in Python 3.8"
    },
    {
        "satd_id": 21654163,
        "satd_repo": 33884891,
        "satd_sha": "2e0d91d8eb9bcae1886358791917b953330a957f",
        "satd_text": " FIXME: pylint complaining for pytest.mark.* on v6.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            465
        ],
        "matched_text": "    'pytest<6.0.0',  # FIXME: pylint complaining for pytest.mark.* on v6.0"
    },
    {
        "satd_id": 21654226,
        "satd_repo": 33884891,
        "satd_sha": "9c518fe937f8dc5e35908be96bd075c4ff666755",
        "satd_text": " UTC+08:00",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/sensors/test_time_sensor.py",
        "lines": [
            29
        ],
        "matched_text": "DEFAULT_TIMEZONE = \"Asia/Singapore\"  # UTC+08:00"
    },
    {
        "satd_id": 21654248,
        "satd_repo": 33884891,
        "satd_sha": "84b85d8acc181edfe1fdd21b82c1773c19c47044",
        "satd_text": " Fetching serialized DAG can not be faster than a minimum interval to reduce database\n read rate. This config controls when your DAGs are updated in the Webserver",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/config.yml",
        "lines": [
            335,
            336
        ],
        "matched_text": "        Fetching serialized DAG can not be faster than a minimum interval to reduce database"
    },
    {
        "satd_id": 21654248,
        "satd_repo": 33884891,
        "satd_sha": "84b85d8acc181edfe1fdd21b82c1773c19c47044",
        "satd_text": " Fetching serialized DAG can not be faster than a minimum interval to reduce database\n read rate. This config controls when your DAGs are updated in the Webserver",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow.cfg",
        "lines": [
            194,
            195
        ],
        "matched_text": "# Fetching serialized DAG can not be faster than a minimum interval to reduce database"
    },
    {
        "satd_id": 21654248,
        "satd_repo": 33884891,
        "satd_sha": "84b85d8acc181edfe1fdd21b82c1773c19c47044",
        "satd_text": " Fetching serialized DAG can not be faster than a minimum interval to reduce database\n read rate. This config controls when your DAGs are updated in the Webserver",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            353,
            354
        ],
        "matched_text": "# Fetching serialized DAG can not be faster than a minimum interval to reduce database"
    },
    {
        "satd_id": 21654367,
        "satd_repo": 33884891,
        "satd_sha": "9f017951b94d9bf52b5ee66d72aa8dd822f07269",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_gdm.py",
        "lines": [
            26
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21654374,
        "satd_repo": 33884891,
        "satd_sha": "4a547ee1092e87c1af1cdfd5afadb7d1a8654c5e",
        "satd_text": " Slow patch",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/sphinx_script_update.py",
        "lines": [
            77
        ],
        "matched_text": "    # Slow patch"
    },
    {
        "satd_id": 21654387,
        "satd_repo": 33884891,
        "satd_sha": "a2c5389a60f68482a60eb40c67b1542d827c187e",
        "satd_text": " pylint: disable=too-many-arguments,inconsistent-return-statements",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/apache/kylin/operators/kylin_cube.py",
        "lines": [
            97
        ],
        "matched_text": "    # pylint: disable=too-many-arguments,inconsistent-return-statements"
    },
    {
        "satd_id": 21654394,
        "satd_repo": 33884891,
        "satd_sha": "4636fc6ededbf604daa175a7cd9cff850aba40bb",
        "satd_text": " Temporary fix for Python 3.8.4 failing our tests\n TODO: Remove after it gets fixed",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_initialization.sh",
        "lines": [
            26,
            27
        ],
        "matched_text": "        # Temporary fix for Python 3.8.4 failing our tests"
    },
    {
        "satd_id": 21654447,
        "satd_repo": 33884891,
        "satd_sha": "2f31b3060ed8274d5d1b1db7349ce607640b9199",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/secrets/base_secrets.py",
        "lines": [
            79
        ],
        "matched_text": "    def get_config(self, key: str) -> Optional[str]:    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21654478,
        "satd_repo": 33884891,
        "satd_sha": "6c158853ae4ae47c65a6fe1d830f47b2ad08eb5d",
        "satd_text": " create openapi ignore file to keep generated code clean",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "clients/gen/go.sh",
        "lines": [
            42
        ],
        "matched_text": "# create openapi ignore file to keep generated code clean"
    },
    {
        "satd_id": 21654506,
        "satd_repo": 33884891,
        "satd_sha": "78d0287ca7c838e2b29b832566874b468c8be615",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/logging_config.py",
        "lines": [
            76
        ],
        "matched_text": "def validate_logging_config(logging_config):    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21654538,
        "satd_repo": 33884891,
        "satd_sha": "8bd15ef634cca40f3cf6ca3442262f3e05144512",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            32
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21654538,
        "satd_repo": 33884891,
        "satd_sha": "8bd15ef634cca40f3cf6ca3442262f3e05144512",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            42
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21654538,
        "satd_repo": 33884891,
        "satd_sha": "8bd15ef634cca40f3cf6ca3442262f3e05144512",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            52
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21654538,
        "satd_repo": 33884891,
        "satd_sha": "8bd15ef634cca40f3cf6ca3442262f3e05144512",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            62
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21654538,
        "satd_repo": 33884891,
        "satd_sha": "8bd15ef634cca40f3cf6ca3442262f3e05144512",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            73
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21654945,
        "satd_repo": 33884891,
        "satd_sha": "22fbd0f32d840c576d123561e68808ad52106582",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/api_connexion/schemas/pool_schema.py",
        "lines": [
            71
        ],
        "matched_text": "    def check_unknown_fields(self, data, original_data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21654951,
        "satd_repo": 33884891,
        "satd_sha": "bb2f3fed28754570c03d26614921179fb7d5e878",
        "satd_text": " Remove trailing whitespace on empty string",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/pre_commit_yaml_to_cfg.py",
        "lines": [
            132
        ],
        "matched_text": "        # Remove trailing whitespace on empty string"
    },
    {
        "satd_id": 21654960,
        "satd_repo": 33884891,
        "satd_sha": "1c48ffbe25c3e304660b7e75a49e88bd114dde46",
        "satd_text": " When the files have not changed, the result should be constant",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/commands/test_webserver_command.py",
        "lines": [
            143
        ],
        "matched_text": "            # When the files have not changed, the result should be constant"
    },
    {
        "satd_id": 21654966,
        "satd_repo": 33884891,
        "satd_sha": "6b18ed4edf4a222e11ad82d6e480e750255b1cbd",
        "satd_text": " Using if statement allows us to create a developer-friendly message only when we need it.\n Otherwise, it wouldn't always be possible - KeyError",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_core_to_contrib.py",
        "lines": [
            119,
            120
        ],
        "matched_text": "            # Using if statement allows us to create a developer-friendly message only when we need it."
    },
    {
        "satd_id": 21654988,
        "satd_repo": 33884891,
        "satd_sha": "c420dbd6e13e17867eb4ccc4271b37966310ac0f",
        "satd_text": " pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            178
        ],
        "matched_text": "        # pylint: enable=unused-argument # pragma: no cover"
    },
    {
        "satd_id": 21654988,
        "satd_repo": 33884891,
        "satd_sha": "c420dbd6e13e17867eb4ccc4271b37966310ac0f",
        "satd_text": " pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/local_task_job.py",
        "lines": [
            83
        ],
        "matched_text": "        # pylint: enable=unused-argument"
    },
    {
        "satd_id": 21654988,
        "satd_repo": 33884891,
        "satd_sha": "c420dbd6e13e17867eb4ccc4271b37966310ac0f",
        "satd_text": " pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/orm_event_handlers.py",
        "lines": [
            81
        ],
        "matched_text": "    # pylint: enable=unused-argument, unused-variable"
    },
    {
        "satd_id": 21654990,
        "satd_text": " pylint: disable=unused-argument, unused-variable\n pylint: enable=unused-argument, unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21654992,
        "satd_repo": 33884891,
        "satd_sha": "c420dbd6e13e17867eb4ccc4271b37966310ac0f",
        "satd_text": " pylint: disable=invalid-bool-returned, bad-option-value",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_core.py",
        "lines": [
            275
        ],
        "matched_text": "            def __bool__(self):  # pylint: disable=invalid-bool-returned, bad-option-value"
    },
    {
        "satd_id": 21655012,
        "satd_repo": 33884891,
        "satd_sha": "61f4e9e82a0ac0680971eb6298f089a16c32ceb9",
        "satd_text": " Remove all handlers from Root Logger to avoid duplicate logs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/task_command.py",
        "lines": [
            198
        ],
        "matched_text": "            # Remove all handlers from Root Logger to avoid duplicate logs"
    },
    {
        "satd_id": 21655015,
        "satd_repo": 33884891,
        "satd_sha": "61f4e9e82a0ac0680971eb6298f089a16c32ceb9",
        "satd_text": " Logs from print statement still show with logging_mixing as filename\n Example: [2020-06-24 17:07:00,482] {logging_mixin.py:91} INFO - Log from Print statement",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/commands/test_task_command.py",
        "lines": [
            288,
            289
        ],
        "matched_text": "            # Logs from print statement still show with logging_mixing as filename"
    },
    {
        "satd_id": 21655060,
        "satd_repo": 33884891,
        "satd_sha": "04a857d1d817dd497b56c6792aed7725cf553090",
        "satd_text": " extras not a known field e.g typo",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "tests/api_connexion/endpoints/test_connection_endpoint.py",
        "lines": [
            363
        ],
        "matched_text": "                    \"extras\": \"{}\",  # extras not a known field e.g typo"
    },
    {
        "satd_id": 21655151,
        "satd_repo": 33884891,
        "satd_sha": "416334e2ecd21d8a532af6102f1cfa9ac921a97a",
        "satd_text": " Here we check that the trace points to the place\n where the deprecated class was used",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_baseoperator.py",
        "lines": [
            357,
            358
        ],
        "matched_text": "            # Here we check that the trace points to the place"
    },
    {
        "satd_id": 21655159,
        "satd_repo": 33884891,
        "satd_sha": "b6f4837fb12fc96b2bf0570d3380fb5d66ea2100",
        "satd_text": " python uses +00:00 instead of Z",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/api_connexion/test_utils.py",
        "lines": [
            41
        ],
        "matched_text": "        assert datetime.isoformat() == self.default_time  # python uses +00:00 instead of Z"
    },
    {
        "satd_id": 21655199,
        "satd_repo": 33884891,
        "satd_sha": "d47e070a79b574cca043ca9c06f91d47eecb3040",
        "satd_text": " Schema is really path in the Connection definition. This is pretty confusing because of URL schema",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/hashicorp/hooks/vault.py",
        "lines": [
            139
        ],
        "matched_text": "        # Schema is really path in the Connection definition. This is pretty confusing because of URL schema"
    },
    {
        "satd_id": 21655242,
        "satd_repo": 33884891,
        "satd_sha": "7c12a9d4e0b6c1e01fee6ab227a6e25b5aa5b157",
        "satd_text": " we never pull the main segment of production image - we always build it locally = this is\n usually very fast this way and it is much nicer for rebuilds and development",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_push_pull_remove_images.sh",
        "lines": [
            115,
            116
        ],
        "matched_text": "        # we never pull the main segment of production image - we always build it locally = this is"
    },
    {
        "satd_id": 21655245,
        "satd_repo": 33884891,
        "satd_sha": "7c12a9d4e0b6c1e01fee6ab227a6e25b5aa5b157",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            32
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21655245,
        "satd_repo": 33884891,
        "satd_sha": "7c12a9d4e0b6c1e01fee6ab227a6e25b5aa5b157",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            42
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21655296,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=no-member",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655297,
        "satd_text": " pylint: disable=unused-import\n pylint: disable=broad-except\n pylint: disable=self-assigning-variable\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=global-statement",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655302,
        "satd_repo": 33884891,
        "satd_sha": "99c534e9fafb947b5949b5f3ba66e3dd090be22d",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/executors/test_kubernetes_executor.py",
        "lines": [
            43
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21655302,
        "satd_repo": 33884891,
        "satd_sha": "99c534e9fafb947b5949b5f3ba66e3dd090be22d",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/executors/test_local_executor.py",
        "lines": [
            36
        ],
        "matched_text": "        def fake_execute_command(command, close_fds=True):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21655322,
        "satd_repo": 33884891,
        "satd_sha": "f17a02d33047ebbfd9f92d3d1d54d6d810f596c1",
        "satd_text": " TODO: Should we add other credentials?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/run_cli_tool.sh",
        "lines": [
            125
        ],
        "matched_text": "        # TODO: Should we add other credentials?"
    },
    {
        "satd_id": 21655352,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " must be first to initialize arrays TODO: For sure?\n shellcheck source=scripts/ci/libraries/_initialization.sh",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_all_libs.sh",
        "lines": [
            21,
            22
        ],
        "matched_text": "# must be first to initialize arrays TODO: For sure?"
    },
    {
        "satd_id": 21655380,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " Retrieves CI environment variables needed - depending on the CI system we run it in.\n We try to be CI - agnostic and our scripts should run the same way on different CI systems\n (This makes it easy to move between different CI systems)\n This function maps CI-specific variables into a generic ones (prefixed with CI_) that\n we used in other scripts",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            1028,
            1029,
            1030,
            1031,
            1032
        ],
        "matched_text": "# Retrieves CI environment variables needed - depending on the CI system we run it in."
    },
    {
        "satd_id": 21655380,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " Retrieves CI environment variables needed - depending on the CI system we run it in.\n We try to be CI - agnostic and our scripts should run the same way on different CI systems\n (This makes it easy to move between different CI systems)\n This function maps CI-specific variables into a generic ones (prefixed with CI_) that\n we used in other scripts",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_build_images.sh",
        "lines": [
            312,
            313,
            314,
            315,
            316
        ],
        "matched_text": "# Retrieves CI environment variables needed - depending on the CI system we run it in."
    },
    {
        "satd_id": 21655447,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " files that should be cleaned up when the script exits\n shellcheck disable=SC2034",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_initialization.sh",
        "lines": [
            32,
            33
        ],
        "matched_text": "    # files that should be cleaned up when the script exits"
    },
    {
        "satd_id": 21655448,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " We use pulled docker image cache by default to speed up the builds\n but we can also set different docker caching strategy (for example we can use local cache\n to build the images in case we iterate with the image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            173,
            174,
            175
        ],
        "matched_text": "    # We use pulled docker image cache by default to speed up the builds"
    },
    {
        "satd_id": 21655448,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " We use pulled docker image cache by default to speed up the builds\n but we can also set different docker caching strategy (for example we can use local cache\n to build the images in case we iterate with the image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_initialization.sh",
        "lines": [
            151,
            152,
            153
        ],
        "matched_text": "    # We use pulled docker image cache by default to speed up the builds"
    },
    {
        "satd_id": 21655473,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " check if parameter set for the variable is allowed (should be on the _BREEZE_ALLOWED list)\n and if it is, it saves it to .build cache file. In case the parameter is wrong, the\n saved variable is removed (so that bad value is not used again in case it comes from there)\n and exits with an error",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            1152,
            1153,
            1154,
            1155
        ],
        "matched_text": "# check if parameter set for the variable is allowed (should be on the _BREEZE_ALLOWED list)"
    },
    {
        "satd_id": 21655473,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " check if parameter set for the variable is allowed (should be on the _BREEZE_ALLOWED list)\n and if it is, it saves it to .build cache file. In case the parameter is wrong, the\n saved variable is removed (so that bad value is not used again in case it comes from there)\n and exits with an error",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_parameters.sh",
        "lines": [
            30,
            31,
            32,
            33
        ],
        "matched_text": "# check if parameter set for the variable is allowed (should be on the _BREEZE_ALLOWED list)"
    },
    {
        "satd_id": 21655496,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " In case of the pylint checks we filter out some files which are still in pylint_todo.txt list",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            949
        ],
        "matched_text": "# In case of the pylint checks we filter out some files which are still in pylint_todo.txt list"
    },
    {
        "satd_id": 21655496,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " In case of the pylint checks we filter out some files which are still in pylint_todo.txt list",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "scripts/ci/libraries/_pylint.sh",
        "lines": [
            19
        ],
        "matched_text": "# In case of the pylint checks we filter out some files which are still in pylint_todo.txt list"
    },
    {
        "satd_id": 21655515,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": "\n Trap function executed always at the end of the script. In case of verbose output it also\n Prints the exit code that the script exits with. Removes verbosity of commands in case it was run with\n command verbosity and in case the script was not run from Breeze (so via ci scripts) it displays\n total time spent in the script so that we can easily see it.\n",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            895,
            896,
            897,
            898,
            899
        ],
        "matched_text": "#"
    },
    {
        "satd_id": 21655515,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": "\n Trap function executed always at the end of the script. In case of verbose output it also\n Prints the exit code that the script exits with. Removes verbosity of commands in case it was run with\n command verbosity and in case the script was not run from Breeze (so via ci scripts) it displays\n total time spent in the script so that we can easily see it.\n",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_start_end.sh",
        "lines": [
            47,
            48,
            49,
            50,
            51
        ],
        "matched_text": "#"
    },
    {
        "satd_id": 21655518,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": "FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            913
        ],
        "matched_text": "    if [[ ${#FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then"
    },
    {
        "satd_id": 21655518,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": "FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_start_end.sh",
        "lines": [
            65
        ],
        "matched_text": "    if [[ ${#FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then"
    },
    {
        "satd_id": 21655521,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " Prints verbose information in case VERBOSE variable is set",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            245
        ],
        "matched_text": "# Prints verbose information in case VERBOSE variable is set"
    },
    {
        "satd_id": 21655521,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " Prints verbose information in case VERBOSE variable is set",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            38
        ],
        "matched_text": "# Prints verbose information in case VERBOSE variable is set"
    },
    {
        "satd_id": 21655522,
        "satd_repo": 33884891,
        "satd_sha": "92d68807f34bf208d7c75472163d0028874772e7",
        "satd_text": " do not print echo if VERBOSE_COMMAND is set (set -x does it already)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/libraries/_verbosity.sh",
        "lines": [
            32
        ],
        "matched_text": "       # do not print echo if VERBOSE_COMMAND is set (set -x does it already)"
    },
    {
        "satd_id": 21655532,
        "satd_repo": 33884891,
        "satd_sha": "bb67a87fa4a2893976fbdb8f0a95ba50653a15df",
        "satd_text": "FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            915
        ],
        "matched_text": "    if [[ ${#FILES_TO_CLEANUP_ON_EXIT[@]} -gt 0 ]]; then"
    },
    {
        "satd_id": 21655543,
        "satd_text": " pylint: disable=unused-argument\n noinspection DuplicatedCode",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655552,
        "satd_text": " pylint: disable=unused-argument\n noinspection DuplicatedCode",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655569,
        "satd_repo": 33884891,
        "satd_sha": "ff5dcccbbd49e7a4632f93fa915565ac31730110",
        "satd_text": "TODO FIXME",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            153
        ],
        "matched_text": "#TODO FIXME"
    },
    {
        "satd_id": 21655571,
        "satd_repo": 33884891,
        "satd_sha": "ff5dcccbbd49e7a4632f93fa915565ac31730110",
        "satd_text": " Note the command is there twice (!) because it is passed via bash -c\n and bash -c starts passing parameters from $0. TODO: fixme",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            34,
            35
        ],
        "matched_text": "         # Note the command is there twice (!) because it is passed via bash -c"
    },
    {
        "satd_id": 21655571,
        "satd_repo": 33884891,
        "satd_sha": "ff5dcccbbd49e7a4632f93fa915565ac31730110",
        "satd_text": " Note the command is there twice (!) because it is passed via bash -c\n and bash -c starts passing parameters from $0. TODO: fixme",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            48,
            49
        ],
        "matched_text": "         # Note the command is there twice (!) because it is passed via bash -c"
    },
    {
        "satd_id": 21655571,
        "satd_repo": 33884891,
        "satd_sha": "ff5dcccbbd49e7a4632f93fa915565ac31730110",
        "satd_text": " Note the command is there twice (!) because it is passed via bash -c\n and bash -c starts passing parameters from $0. TODO: fixme",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            180,
            181
        ],
        "matched_text": "     # Note the command is there twice (!) because it is passed via bash -c"
    },
    {
        "satd_id": 21655591,
        "satd_repo": 33884891,
        "satd_sha": "11d726dcf13d7eecdd51fc25e930b3e13d81a1e4",
        "satd_text": " pylint: disable=bad-whitespace\n expected, dag_count, task_count\n One DAG with one task per DAG file\n noqa\n One DAG with five tasks per DAG  file\n noqa\n 10 DAGs with 10 tasks per DAG file\n noqa",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            3396,
            3397,
            3398,
            3399,
            3400,
            3401,
            3402,
            3403
        ],
        "matched_text": "            # pylint: disable=bad-whitespace"
    },
    {
        "satd_id": 21655591,
        "satd_repo": 33884891,
        "satd_sha": "11d726dcf13d7eecdd51fc25e930b3e13d81a1e4",
        "satd_text": " pylint: disable=bad-whitespace\n expected, dag_count, task_count\n One DAG with one task per DAG file\n noqa\n One DAG with five tasks per DAG  file\n noqa\n 10 DAGs with 10 tasks per DAG file\n noqa",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            3437,
            3438,
            3439,
            3440,
            3441,
            3442,
            3443,
            3444
        ],
        "matched_text": "            # pylint: disable=bad-whitespace"
    },
    {
        "satd_id": 21655623,
        "satd_repo": 33884891,
        "satd_sha": "67379d1d9e0f19fa10020e37d12e407fb07f21bc",
        "satd_text": " TODO(mik-laj): We have to implement it.\n     Do you want to help? Please look at: sshttps://github.com/apache/airflow/issues/8134",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/api_connexion/endpoints/xcom_endpoint.py",
        "lines": [
            18,
            19
        ],
        "matched_text": "# TODO(mik-laj): We have to implement it."
    },
    {
        "satd_id": 21655687,
        "satd_repo": 33884891,
        "satd_sha": "e9ecf0ae10dffcd9ccaf22cc9f19f140fbc5ee55",
        "satd_text": " Clean up before leaving",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/commands/test_dag_command.py",
        "lines": [
            296
        ],
        "matched_text": "        # Clean up before leaving"
    },
    {
        "satd_id": 21655757,
        "satd_repo": 33884891,
        "satd_sha": "499493c5c5cf324ab8452ead80a10b71ce0c3b14",
        "satd_text": " flake8: noqa: F811\n Monkey patch hook to get good function headers while building docs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/base_sensor_operator.py",
        "lines": [
            215,
            216
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21655762,
        "satd_repo": 33884891,
        "satd_sha": "a546a10b13b1f7a119071d8d2001cb17ccdcbbf7",
        "satd_text": " TODO: should be able to rely on connection's schema, but currently param required by S3ToSnowflakeTransfer",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/snowflake/example_dags/example_snowflake.py",
        "lines": [
            29
        ],
        "matched_text": "# TODO: should be able to rely on connection's schema, but currently param required by S3ToSnowflakeTransfer"
    },
    {
        "satd_id": 21655766,
        "satd_repo": 33884891,
        "satd_sha": "a546a10b13b1f7a119071d8d2001cb17ccdcbbf7",
        "satd_text": " TODO: shouldn't be required, rely on session/user defaults",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/snowflake/operators/s3_to_snowflake.py",
        "lines": [
            54
        ],
        "matched_text": "                 schema,  # TODO: shouldn't be required, rely on session/user defaults"
    },
    {
        "satd_id": 21655789,
        "satd_repo": 33884891,
        "satd_sha": "fe4219112a63d6debf84bcfd644e1681854db85c",
        "satd_text": " TODO: If there was an actual Relationshop between TI and Job\n we wouldn't need this extra commit",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_dag_processing.py",
        "lines": [
            214,
            215
        ],
        "matched_text": "                # TODO: If there was an actual Relationshop between TI and Job"
    },
    {
        "satd_id": 21655868,
        "satd_text": " Creates cache directory where we will keep temporary files needed for the docker build\n Removes the cache temporary directory\n Removes the \"Forced answer\" (yes/no/quit) given previously, unles you specifically want to remember it.\n\n This is the default behaviour of all rebuild scripts to ask independently whether you want to\n rebuild the image or not. Sometimes however we want to remember answer previously given. For\n example if you answered \"no\" to rebuild the image, the assumption is that you do not\n want to rebuild image also for other rebuilds in the same pre-commit execution.\n\n All the pre-commit checks therefore have `export REMEMBER_LAST_ANSWER=\"true\"` set\n So that in case they are run in a sequence of commits they will not rebuild. Similarly if your most\n recent answer was \"no\" and you run `pre-commit run mypy` (for example) it will also reuse the\n \"no\" answer given previously. This happens until you run any of the breeze commands or run all\n precommits `pre-commit run` - then the \"LAST_FORCE_ANSWER_FILE\" will be removed and you will\n be asked again.\n Confirms if hte image should be rebuild and interactively checks it with the user.\n In case iit needs to be rebuild. It only ask the user if it determines that the rebuild\n is needed and that the rebuild is not already forced. It asks the user using available terminals\n So that the script works also from within pre-commit run via git hooks - where stdin is not\n available - it tries to find usable terminal and ask the user via this terminal.\n answered in teh first pre-commit check (build) and then used in another (pylint/mypy/flake8 etc).\n It contains only one .json file - result of docker inspect - describing the image\n Retrieves information about layers in the local IMAGE\n it stores list of SHAs of image layers in the file pointed at by TMP_MANIFEST_LOCAL_SHA\n Retrieves information about layers in the remote IMAGE\n it stores list of SHAs of image layers in the file pointed at by TMP_MANIFEST_REMOTE_SHA\n The Number determines the cut-off between local building time and pull + build time.\n if there are at least NN changed layers in your docker file, you should pull the image.\n Only rebuilds CI image if needed. It checks if the docker image build is needed\n because any of the important source files (from common/_files_for_rebuild_check.sh) has\n changed or in any of the edge cases (docker image removed, .build cache removed etc.\n In case rebuild is needed, it determines (by comparing layers in local and remote image)\n Whether pull is needed before rebuild.\n Starts the script.\n If VERBOSE_COMMANDS variable is set to true, it enables verbose output of commands executed\n Trap function executed always at the end of the script. In case of verbose output it also\n Prints the exit code that the script exits with. Removes verbosity of commands in case it was run with\n command verbosity and in case the script was not run from Breeze (so via ci scripts) it displays\n total time spent in the script so that we can easily see it.\n Changes directory to local sources\n In case of the pylint checks we filter out some files which are still in pylint_todo.txt list\n Interactive version of confirming the ci image that is used in pre-commits\n it displays additional information - what the user should do in order to bring the local images\n back to state that pre-commit will be happy with",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655870,
        "satd_text": " Determines if airflow should be installed from a specified reference in GitHub\n Prints verbose information in case VERBOSE variable is set\n Those are files that are mounted locally when mounting local sources is requested\n By default not the whole airflow sources directory is mounted because there are often\n artifacts created there (for example .egg-info files) that are breaking the capability\n of running different python versions in Breeze. So we only mount what is needed by default.\n Converts the local mounts that we defined above to the right set of -v\n volume mappings in docker-compose file. This is needed so that we only\n maintain the volumes in one place (above)\n Fixes a file that is expected to be a file. If - for whatever reason - the local file is not created\n When mounting it to container, docker assumes it is a missing directory and creates it. Such mistakenly\n Created directories should be removed and replaced with files",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21655871,
        "satd_repo": 33884891,
        "satd_sha": "e1cc17e84856bd121724c634cb1809581c9c97db",
        "satd_text": " Copied from `logging.shutdown`.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_logging_config.py",
        "lines": [
            111
        ],
        "matched_text": "                # Copied from `logging.shutdown`."
    },
    {
        "satd_id": 21655891,
        "satd_repo": 33884891,
        "satd_sha": "ff5b70149bf51012156378c8fc8b072c7c280d9d",
        "satd_text": " [END howto_operator_google_api_to_s3_transfer_advanced_task_1_2]\n pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/example_dags/example_google_api_to_s3_transfer_advanced.py",
        "lines": [
            69,
            70
        ],
        "matched_text": "# [END howto_operator_google_api_to_s3_transfer_advanced_task_1_2]"
    },
    {
        "satd_id": 21655898,
        "satd_repo": 33884891,
        "satd_sha": "ff5b70149bf51012156378c8fc8b072c7c280d9d",
        "satd_text": " pylint: disable=unused-argument\n [START howto_operator_google_api_to_s3_transfer_advanced_task_1_2]",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/example_dags/example_google_api_to_s3_transfer_advanced.py",
        "lines": [
            57,
            58
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21655908,
        "satd_repo": 33884891,
        "satd_sha": "ff5b70149bf51012156378c8fc8b072c7c280d9d",
        "satd_text": " TODO: Implement more authentication methods",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/test_utils/amazon_system_helpers.py",
        "lines": [
            40
        ],
        "matched_text": "    # TODO: Implement more authentication methods"
    },
    {
        "satd_id": 21655914,
        "satd_repo": 33884891,
        "satd_sha": "d923b5b32d65676b3385826456fd53b48c270001",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/www/test_views.py",
        "lines": [
            153
        ],
        "matched_text": "        def record(sender, template, context, **extra):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656044,
        "satd_repo": 33884891,
        "satd_sha": "e8d0f8feab0ec08e248cd381359112ad6a832f5b",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_cloud_storage_transfer_service.py",
        "lines": [
            115
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656044,
        "satd_repo": 33884891,
        "satd_sha": "e8d0f8feab0ec08e248cd381359112ad6a832f5b",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_cloud_storage_transfer_service.py",
        "lines": [
            418
        ],
        "matched_text": "    ):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656044,
        "satd_repo": 33884891,
        "satd_sha": "e8d0f8feab0ec08e248cd381359112ad6a832f5b",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_cloud_storage_transfer_service.py",
        "lines": [
            853
        ],
        "matched_text": "    def test_delete_transfer_job(self, get_conn, mock_project_id):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656064,
        "satd_repo": 33884891,
        "satd_sha": "4799d5dfbbe8b58057b47c0f72949ae1219627b3",
        "satd_text": " Cleanup docker containers and images to make sure everything is retried from scratch",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            144
        ],
        "matched_text": "        # Cleanup docker containers and images to make sure everything is retried from scratch"
    },
    {
        "satd_id": 21656066,
        "satd_repo": 33884891,
        "satd_sha": "7ea66a1a9594704869e82513d3a06fe35b6109b2",
        "satd_text": " generate dag documentation",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/providers/amazon/aws/example_dags/example_ecs_fargate.py",
        "lines": [
            46
        ],
        "matched_text": "# generate dag documentation"
    },
    {
        "satd_id": 21656079,
        "satd_repo": 33884891,
        "satd_sha": "14b22e6ffeb3af1f68e8362a1d0061b41364019c",
        "satd_text": " Note, according to documentation always either response or error is\n set when \"done\" == True",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/providers/google/cloud/hooks/life_sciences.py",
        "lines": [
            145,
            146
        ],
        "matched_text": "                # Note, according to documentation always either response or error is"
    },
    {
        "satd_id": 21656086,
        "satd_repo": 33884891,
        "satd_sha": "14b22e6ffeb3af1f68e8362a1d0061b41364019c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_life_sciences.py",
        "lines": [
            292
        ],
        "matched_text": "    def test_run_pipeline(self, get_conn_mock, mock_project_id):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656105,
        "satd_repo": 33884891,
        "satd_sha": "e11a838ee1e76dfac45c0f6464f18c0816ab034e",
        "satd_text": " TODO: Remove after https://github.com/dpgaspar/Flask-AppBuilder/issues/1356 is fixed and released.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            556
        ],
        "matched_text": "    # TODO: Remove after https://github.com/dpgaspar/Flask-AppBuilder/issues/1356 is fixed and released."
    },
    {
        "satd_id": 21656117,
        "satd_repo": 33884891,
        "satd_sha": "1dc14d503c5b58deab195f82e0f7357a0fda7f20",
        "satd_text": " TODO: Remove after https://github.com/dpgaspar/Flask-AppBuilder/issues/1356 is fixed and released.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "setup.py",
        "lines": [
            601
        ],
        "matched_text": "    'WTforms<2.3.0',  # TODO: Remove after https://github.com/dpgaspar/Flask-AppBuilder/issues/1356 is fixed and released."
    },
    {
        "satd_id": 21656142,
        "satd_repo": 33884891,
        "satd_sha": "37473d2dad584e2156c2a9804f4f3539d23d0a9a",
        "satd_text": " pylint: disable=redefined-builtin,unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/cli_parser.py",
        "lines": [
            83
        ],
        "matched_text": "    # pylint: disable=redefined-builtin,unused-argument"
    },
    {
        "satd_id": 21656143,
        "satd_repo": 33884891,
        "satd_sha": "37473d2dad584e2156c2a9804f4f3539d23d0a9a",
        "satd_text": " pylint: enable=redefined-builtin,unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/cli_parser.py",
        "lines": [
            95
        ],
        "matched_text": "    # pylint: enable=redefined-builtin,unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/mypy/plugin/decorators.py",
        "lines": [
            77
        ],
        "matched_text": "def plugin(version: str):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/dataproc.py",
        "lines": [
            825
        ],
        "matched_text": "        job_error_states: Optional[Iterable[str]] = None  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_cloud_storage_transfer_service.py",
        "lines": [
            331
        ],
        "matched_text": "    ):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_cloud_storage_transfer_service.py",
        "lines": [
            765
        ],
        "matched_text": "    def test_delete_transfer_job(self, get_conn, mock_project_id):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_dataflow.py",
        "lines": [
            141
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656205,
        "satd_repo": 33884891,
        "satd_sha": "1fd9ed3840361afa1e9456ccb0dfd5a60fba4e85",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_datastore.py",
        "lines": [
            31
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656261,
        "satd_repo": 33884891,
        "satd_sha": "d99833c9b5be9eafc0c7851343ee86b6c20aed40",
        "satd_text": " Clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/microsoft/azure/operators/azure_batch.py",
        "lines": [
            294
        ],
        "matched_text": "        # Clean up"
    },
    {
        "satd_id": 21656268,
        "satd_repo": 33884891,
        "satd_sha": "d99833c9b5be9eafc0c7851343ee86b6c20aed40",
        "satd_text": " TODO: Add test",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/microsoft/azure/hooks/test_azure_batch.py",
        "lines": [
            133
        ],
        "matched_text": "        # TODO: Add test"
    },
    {
        "satd_id": 21656268,
        "satd_repo": 33884891,
        "satd_sha": "d99833c9b5be9eafc0c7851343ee86b6c20aed40",
        "satd_text": " TODO: Add test",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/microsoft/azure/hooks/test_azure_batch.py",
        "lines": [
            159
        ],
        "matched_text": "        # TODO: Add test"
    },
    {
        "satd_id": 21656290,
        "satd_repo": 33884891,
        "satd_sha": "14db3732b53acd223c5a53dc404a051839f91d3a",
        "satd_text": " Taken from\nhttps://github.com/benjaminoakes/moment-strftime/blob/1886cabc4b07d13e3046ae075d357e7aad92ea93/lib/moment-strftime.js\n but I couldn't work out how to make webpack not include moment again.\n TODO: revisit our webpack config\n\n -- Begin moment-strftime\n Copyright (c) 2012 Benjamin Oakes, MIT Licensed",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/gantt-chart-d3v2.js",
        "lines": [
            25,
            26,
            27,
            28,
            29,
            30,
            31
        ],
        "matched_text": "// Taken from"
    },
    {
        "satd_id": 21656291,
        "satd_repo": 33884891,
        "satd_sha": "14db3732b53acd223c5a53dc404a051839f91d3a",
        "satd_text": " Escape non-token strings to avoid accidental formatting",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/js/gantt-chart-d3v2.js",
        "lines": [
            81
        ],
        "matched_text": "    // Escape non-token strings to avoid accidental formatting"
    },
    {
        "satd_id": 21656298,
        "satd_repo": 33884891,
        "satd_sha": "7ef75d2393f30d155de550e6d1ee8c055e2abfee",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_mysql_to_gcs.py",
        "lines": [
            285
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656298,
        "satd_repo": 33884891,
        "satd_sha": "7ef75d2393f30d155de550e6d1ee8c055e2abfee",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_mysql_to_gcs.py",
        "lines": [
            314
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656318,
        "satd_repo": 33884891,
        "satd_sha": "cc9b1bc78df1e82da37b885d2a8aaf5779c6209d",
        "satd_text": " Go and fix up the SQLAInterface used from the stock one to our subclass.\n This is needed to support the \"hack\" where we had to edit\n FieldConverter.conversion_table in place in airflow.www.utils",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/security.py",
        "lines": [
            185,
            186,
            187
        ],
        "matched_text": "        # Go and fix up the SQLAInterface used from the stock one to our subclass."
    },
    {
        "satd_id": 21656334,
        "satd_repo": 33884891,
        "satd_sha": "cc9b1bc78df1e82da37b885d2a8aaf5779c6209d",
        "satd_text": " This class is used directly (i.e. we cant tell Fab to use a different\n subclass) so we have no other option than to edit the converstion table in\n place",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/utils.py",
        "lines": [
            435,
            436,
            437
        ],
        "matched_text": "# This class is used directly (i.e. we cant tell Fab to use a different"
    },
    {
        "satd_id": 21656385,
        "satd_repo": 33884891,
        "satd_sha": "07fd0d71c8fab4ad0fe73c16e3568914f6512507",
        "satd_text": " TODO We should change it to 1.10.10 after release to make the image build repeatable",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            1418
        ],
        "matched_text": "                # TODO We should change it to 1.10.10 after release to make the image build repeatable"
    },
    {
        "satd_id": 21656385,
        "satd_repo": 33884891,
        "satd_sha": "07fd0d71c8fab4ad0fe73c16e3568914f6512507",
        "satd_text": " TODO We should change it to 1.10.10 after release to make the image build repeatable",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            1427
        ],
        "matched_text": "                # TODO We should change it to 1.10.10 after release to make the image build repeatable"
    },
    {
        "satd_id": 21656392,
        "satd_repo": 33884891,
        "satd_sha": "0d5ecde61bc080d2c53c9021af252973b497fb7d",
        "satd_text": " This is a hack to import create_session from old destination and\n fool the pre-commit check that looks for old imports...\n TODO remove this once we don't need to test this on 1.10",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_presto_to_gcs_system.py",
        "lines": [
            31,
            32,
            33
        ],
        "matched_text": "    # This is a hack to import create_session from old destination and"
    },
    {
        "satd_id": 21656533,
        "satd_repo": 33884891,
        "satd_sha": "779023968f983c91701f687bc823dc338934cdad",
        "satd_text": " TODO: future improvement check file size before downloading,\n  to check for local space availability",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/gcs.py",
        "lines": [
            189,
            190
        ],
        "matched_text": "        # TODO: future improvement check file size before downloading,"
    },
    {
        "satd_id": 21656601,
        "satd_repo": 33884891,
        "satd_sha": "77bc48061dcc629017daeb3e0f9ef67c17eaf97d",
        "satd_text": " If process is dead remove the pidfile",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/process_utils.py",
        "lines": [
            235
        ],
        "matched_text": "            # If process is dead remove the pidfile"
    },
    {
        "satd_id": 21656623,
        "satd_repo": 33884891,
        "satd_sha": "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/oracle/operators/oracle_to_oracle_transfer.py",
        "lines": [
            67
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656623,
        "satd_repo": 33884891,
        "satd_sha": "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/qubole/hooks/qubole_check.py",
        "lines": [
            110
        ],
        "matched_text": "    def get_first(self, sql):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656625,
        "satd_repo": 33884891,
        "satd_sha": "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/oracle/operators/oracle_to_oracle_transfer.py",
        "lines": [
            67
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656625,
        "satd_repo": 33884891,
        "satd_sha": "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/qubole/hooks/qubole_check.py",
        "lines": [
            110
        ],
        "matched_text": "    def get_first(self, sql):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656717,
        "satd_repo": 33884891,
        "satd_sha": "759ce2a80c95832fe4773c9f4fde23e1b03cbc6f",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/operators/pubsub.py",
        "lines": [
            772
        ],
        "matched_text": "            context: Dict[str, Any],  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656717,
        "satd_repo": 33884891,
        "satd_sha": "759ce2a80c95832fe4773c9f4fde23e1b03cbc6f",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/sensors/pubsub.py",
        "lines": [
            175
        ],
        "matched_text": "            context: Dict[str, Any],  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656717,
        "satd_repo": 33884891,
        "satd_sha": "759ce2a80c95832fe4773c9f4fde23e1b03cbc6f",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_pubsub.py",
        "lines": [
            54
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656717,
        "satd_repo": 33884891,
        "satd_sha": "759ce2a80c95832fe4773c9f4fde23e1b03cbc6f",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/hooks/test_pubsub.py",
        "lines": [
            256
        ],
        "matched_text": "                                                           mock_service):  # noqa  # pylint: disable=unused-argument,line-too-long"
    },
    {
        "satd_id": 21656749,
        "satd_repo": 33884891,
        "satd_sha": "749fc473e490bdec859469cd604e038f531f6601",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/dbapi_hook.py",
        "lines": [
            284
        ],
        "matched_text": "    def _serialize_cell(cell, conn=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656891,
        "satd_repo": 33884891,
        "satd_sha": "029c84e5527b6db6bdbdbe026f455da325bedef3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_presto_to_gcs.py",
        "lines": [
            150
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656891,
        "satd_repo": 33884891,
        "satd_sha": "029c84e5527b6db6bdbdbe026f455da325bedef3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_presto_to_gcs.py",
        "lines": [
            281
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656909,
        "satd_repo": 33884891,
        "satd_sha": "63a3102ede8fb8f764d251b20cad5ee5bef84f50",
        "satd_text": " Note, according to documentation always either response or error is\n set when \"done\" == True",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/providers/google/firebase/hooks/firestore.py",
        "lines": [
            137,
            138
        ],
        "matched_text": "                # Note, according to documentation always either response or error is"
    },
    {
        "satd_id": 21656936,
        "satd_repo": 33884891,
        "satd_sha": "8bf6a9093db5a051cc891bb8eda035d41c69239d",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_stats.py",
        "lines": [
            37
        ],
        "matched_text": "    def incr(self, stat, count=1, rate=1):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656936,
        "satd_repo": 33884891,
        "satd_sha": "8bf6a9093db5a051cc891bb8eda035d41c69239d",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_stats.py",
        "lines": [
            55
        ],
        "matched_text": "    def incr(self, stat, count=1, rate=1):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21656941,
        "satd_repo": 33884891,
        "satd_sha": "6fc5148bf1137782d675739e0d298119eed467dd",
        "satd_text": " There used to be some slowness caused by calling count() inside DAG.clear().\n That has since been fixed. It should take no more than a few seconds to call\n dag.clear() here.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/sensors/test_external_task_sensor.py",
        "lines": [
            543,
            544,
            545
        ],
        "matched_text": "    # There used to be some slowness caused by calling count() inside DAG.clear()."
    },
    {
        "satd_id": 21657010,
        "satd_repo": 33884891,
        "satd_sha": "78e48ba46a7f721384417ebf8a798dd320632fa8",
        "satd_text": " CleanUp",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1554
        ],
        "matched_text": "        # CleanUp"
    },
    {
        "satd_id": 21657168,
        "satd_repo": 33884891,
        "satd_sha": "42eef38217e709bc7a7f71bf0286e9e61293a43e",
        "satd_text": " List of warnings generated",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/build_provider_packages_dependencies.py",
        "lines": [
            36
        ],
        "matched_text": "# List of warnings generated"
    },
    {
        "satd_id": 21657203,
        "satd_repo": 33884891,
        "satd_sha": "a110cf0eab32a4c041de3abc5e2167d171534c22",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            988
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657203,
        "satd_repo": 33884891,
        "satd_sha": "a110cf0eab32a4c041de3abc5e2167d171534c22",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dag_processing.py",
        "lines": [
            616
        ],
        "matched_text": "    def _exit_gracefully(self, signum, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657203,
        "satd_repo": 33884891,
        "satd_sha": "a110cf0eab32a4c041de3abc5e2167d171534c22",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/dags/test_on_failure_callback.py",
        "lines": [
            34
        ],
        "matched_text": "def write_data_to_callback(*arg, **kwargs):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657203,
        "satd_repo": 33884891,
        "satd_sha": "a110cf0eab32a4c041de3abc5e2167d171534c22",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            2044
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657228,
        "satd_repo": 33884891,
        "satd_sha": "c1c2d6a1a13350672de52b01a9456103a8dc9b2e",
        "satd_text": " JSON.parse is faster for large payloads than an object literal (because the JSON grammer is simpler!)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/tree.html",
        "lines": [
            139
        ],
        "matched_text": "// JSON.parse is faster for large payloads than an object literal (because the JSON grammer is simpler!)"
    },
    {
        "satd_id": 21657256,
        "satd_text": " noqa: F401 # pylint: disable=unused-import\n TODO: remove create_session once we decide to break backward compatibility\n noqa: F401 # pylint: disable=unused-import",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21657288,
        "satd_repo": 33884891,
        "satd_sha": "20b6b34392248e57f793e3383bb3ff1760de2443",
        "satd_text": " whethere verbose commadns output (set-x) should be used",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            42
        ],
        "matched_text": "# whethere verbose commadns output (set-x) should be used"
    },
    {
        "satd_id": 21657342,
        "satd_repo": 33884891,
        "satd_sha": "a9ad0a929851b6912e0bb8551f1ff80b50281944",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/salesforce/hooks/test_tableau.py",
        "lines": [
            87
        ],
        "matched_text": "        mock_tableau_auth  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657542,
        "satd_repo": 33884891,
        "satd_sha": "fb00c687b69999108a6ac621d603589490edbdda",
        "satd_text": " TODO: query all instead of refresh from db",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/backfill_job.py",
        "lines": [
            256
        ],
        "matched_text": "        # TODO: query all instead of refresh from db"
    },
    {
        "satd_id": 21657550,
        "satd_repo": 33884891,
        "satd_sha": "fb00c687b69999108a6ac621d603589490edbdda",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            42
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657551,
        "satd_repo": 33884891,
        "satd_sha": "fb00c687b69999108a6ac621d603589490edbdda",
        "satd_text": " pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            89
        ],
        "matched_text": "# pylint: enable=unused-argument"
    },
    {
        "satd_id": 21657560,
        "satd_repo": 33884891,
        "satd_sha": "58c3542ed25061320ce61dbe0adf451a44c738dd",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/hooks/test_s3_hook.py",
        "lines": [
            310
        ],
        "matched_text": "            # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657560,
        "satd_repo": 33884891,
        "satd_sha": "58c3542ed25061320ce61dbe0adf451a44c738dd",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/hooks/test_s3_hook.py",
        "lines": [
            315
        ],
        "matched_text": "            # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657560,
        "satd_repo": 33884891,
        "satd_sha": "58c3542ed25061320ce61dbe0adf451a44c738dd",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/hooks/test_s3.py",
        "lines": [
            255
        ],
        "matched_text": "            # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657560,
        "satd_repo": 33884891,
        "satd_sha": "58c3542ed25061320ce61dbe0adf451a44c738dd",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/hooks/test_s3.py",
        "lines": [
            260
        ],
        "matched_text": "            # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21657563,
        "satd_repo": 33884891,
        "satd_sha": "58c3542ed25061320ce61dbe0adf451a44c738dd",
        "satd_text": " we dont need to test the paginator that's covered by boto tests",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/hooks/test_s3.py",
        "lines": [
            118
        ],
        "matched_text": "        # we dont need to test the paginator that's covered by boto tests"
    },
    {
        "satd_id": 21657588,
        "satd_repo": 33884891,
        "satd_sha": "50f01db6df12373f3279605605523af068dc1ae6",
        "satd_text": " we remove the Tables here so that if resetdb is run metadata does not keep the old tables.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/db.py",
        "lines": [
            522
        ],
        "matched_text": "    # we remove the Tables here so that if resetdb is run metadata does not keep the old tables."
    },
    {
        "satd_id": 21657657,
        "satd_repo": 33884891,
        "satd_sha": "92c72f40df24aa9bec8a5bf5159bcd29c85698cf",
        "satd_text": " TODO: Should we extend this test to cover other directories?",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/test_project_structure.py",
        "lines": [
            92
        ],
        "matched_text": "        # TODO: Should we extend this test to cover other directories?"
    },
    {
        "satd_id": 21658067,
        "satd_repo": 33884891,
        "satd_sha": "d5386794948f6fd9a07cb8969f05ecbc194b8170",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/celery_command.py",
        "lines": [
            162
        ],
        "matched_text": "def stop_worker(args):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21658075,
        "satd_repo": 33884891,
        "satd_sha": "d5386794948f6fd9a07cb8969f05ecbc194b8170",
        "satd_text": " Calling stop_worker should delete the temporary pid file",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/commands/test_celery_command.py",
        "lines": [
            112
        ],
        "matched_text": "        # Calling stop_worker should delete the temporary pid file"
    },
    {
        "satd_id": 21658418,
        "satd_repo": 33884891,
        "satd_sha": "c27f7e234b007073698cbc39b5a81fbc90b15e5d",
        "satd_text": " TODO: this backend should be removed once a fixing solution is found later",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/api/common/experimental/test_mark_tasks.py",
        "lines": [
            254
        ],
        "matched_text": "    # TODO: this backend should be removed once a fixing solution is found later"
    },
    {
        "satd_id": 21658527,
        "satd_repo": 33884891,
        "satd_sha": "73403cc8f430b540db492afc5ca3d0664c0ca98b",
        "satd_text": " Script to run flake8 on all code. Can be started from any working directory",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "scripts/ci/in_container/deploy_airflow_to_kubernetes.sh",
        "lines": [
            19
        ],
        "matched_text": "# Script to run flake8 on all code. Can be started from any working directory"
    },
    {
        "satd_id": 21658531,
        "satd_repo": 33884891,
        "satd_sha": "73403cc8f430b540db492afc5ca3d0664c0ca98b",
        "satd_text": " Note the command is there twice (!) because it is passed via bash -c\n and bash -c starts passing parameters from $0. TODO: fixme",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            83,
            84
        ],
        "matched_text": "         # Note the command is there twice (!) because it is passed via bash -c"
    },
    {
        "satd_id": 21658531,
        "satd_repo": 33884891,
        "satd_sha": "73403cc8f430b540db492afc5ca3d0664c0ca98b",
        "satd_text": " Note the command is there twice (!) because it is passed via bash -c\n and bash -c starts passing parameters from $0. TODO: fixme",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            96,
            97
        ],
        "matched_text": "         # Note the command is there twice (!) because it is passed via bash -c"
    },
    {
        "satd_id": 21658532,
        "satd_repo": 33884891,
        "satd_sha": "73403cc8f430b540db492afc5ca3d0664c0ca98b",
        "satd_text": " Script to run flake8 on all code. Can be started from any working directory",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "scripts/ci/in_container/deploy_airflow_to_kubernetes.sh",
        "lines": [
            19
        ],
        "matched_text": "# Script to run flake8 on all code. Can be started from any working directory"
    },
    {
        "satd_id": 21658569,
        "satd_repo": 33884891,
        "satd_sha": "78d8fe6944b689b9b0af99255286e34e06eedec3",
        "satd_text": " Note that the use of invalid-name parameters should be restricted to the boto3 mappings only;\n all the Airflow wrappers of boto3 clients should not adopt invalid-names to match boto3.\n pylint: enable=invalid-name, unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/hooks/batch_client.py",
        "lines": [
            152,
            153,
            154
        ],
        "matched_text": "# Note that the use of invalid-name parameters should be restricted to the boto3 mappings only;"
    },
    {
        "satd_id": 21658573,
        "satd_repo": 33884891,
        "satd_sha": "78d8fe6944b689b9b0af99255286e34e06eedec3",
        "satd_text": " Add exceptions to pylint for the boto3 protocol only; ideally the boto3 library could provide\n protocols for all their dynamically generated classes (try to migrate this to a PR on botocore).\n Note that the use of invalid-name parameters should be restricted to the boto3 mappings only;\n all the Airflow wrappers of boto3 clients should not adopt invalid-names to match boto3.\n pylint: disable=invalid-name, unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/hooks/batch_client.py",
        "lines": [
            42,
            43,
            44,
            45,
            46
        ],
        "matched_text": "# Add exceptions to pylint for the boto3 protocol only; ideally the boto3 library could provide"
    },
    {
        "satd_id": 21658610,
        "satd_repo": 33884891,
        "satd_sha": "78d8fe6944b689b9b0af99255286e34e06eedec3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/operators/batch.py",
        "lines": [
            152
        ],
        "matched_text": "    def submit_job(self, context: Dict):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21658610,
        "satd_repo": 33884891,
        "satd_sha": "78d8fe6944b689b9b0af99255286e34e06eedec3",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/operators/batch.py",
        "lines": [
            182
        ],
        "matched_text": "    def monitor_job(self, context: Dict):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21658643,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21658674,
        "satd_repo": 33884891,
        "satd_sha": "5e100ab753635521d33f287bdffd3d9bd4c6ae0f",
        "satd_text": " todo clear command only accepts a single dag_id. no reason for get_dags with 's' except regex?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/task_command.py",
        "lines": [
            287
        ],
        "matched_text": "        # todo clear command only accepts a single dag_id. no reason for get_dags with 's' except regex?"
    },
    {
        "satd_id": 21658687,
        "satd_repo": 33884891,
        "satd_sha": "4fd3b899dce0397b045c7311a75d50341c7ccf65",
        "satd_text": " TODO: This should be written to a log",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/task_command.py",
        "lines": [
            66
        ],
        "matched_text": "                # TODO: This should be written to a log"
    },
    {
        "satd_id": 21658717,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " flake8: noqa: F811",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/hooks/test_datasync.py",
        "lines": [
            41
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21658717,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " flake8: noqa: F811",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/operators/test_datasync.py",
        "lines": [
            43
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21658718,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " ToDo: Remove after the moto>1.3.14 is released and contains following commit:\n https://github.com/spulec/moto/commit/5cfbe2bb3d24886f2b33bb4480c60b26961226fc",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/hooks/test_datasync.py",
        "lines": [
            36,
            37
        ],
        "matched_text": "    # ToDo: Remove after the moto>1.3.14 is released and contains following commit:"
    },
    {
        "satd_id": 21658718,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " ToDo: Remove after the moto>1.3.14 is released and contains following commit:\n https://github.com/spulec/moto/commit/5cfbe2bb3d24886f2b33bb4480c60b26961226fc",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/operators/test_datasync.py",
        "lines": [
            38,
            39
        ],
        "matched_text": "    # ToDo: Remove after the moto>1.3.14 is released and contains following commit:"
    },
    {
        "satd_id": 21658719,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " flake8: noqa: F811",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/hooks/test_datasync.py",
        "lines": [
            41
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21658719,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " flake8: noqa: F811",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/providers/amazon/aws/operators/test_datasync.py",
        "lines": [
            43
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21658720,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " ToDo: Remove after the moto>1.3.14 is released and contains following commit:\n https://github.com/spulec/moto/commit/5cfbe2bb3d24886f2b33bb4480c60b26961226fc",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/hooks/test_datasync.py",
        "lines": [
            36,
            37
        ],
        "matched_text": "    # ToDo: Remove after the moto>1.3.14 is released and contains following commit:"
    },
    {
        "satd_id": 21658720,
        "satd_repo": 33884891,
        "satd_sha": "e0c6d86b0ba3a259fefbd58f0f7cb08b7bec087d",
        "satd_text": " ToDo: Remove after the moto>1.3.14 is released and contains following commit:\n https://github.com/spulec/moto/commit/5cfbe2bb3d24886f2b33bb4480c60b26961226fc",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/amazon/aws/operators/test_datasync.py",
        "lines": [
            38,
            39
        ],
        "matched_text": "    # ToDo: Remove after the moto>1.3.14 is released and contains following commit:"
    },
    {
        "satd_id": 21658721,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/base_executor.py",
        "lines": [
            160
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658721,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/celery_executor.py",
        "lines": [
            244
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658721,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/debug_executor.py",
        "lines": [
            125
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658722,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/base_executor.py",
        "lines": [
            160
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658722,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/celery_executor.py",
        "lines": [
            244
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658722,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/debug_executor.py",
        "lines": [
            125
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658723,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/base_executor.py",
        "lines": [
            160
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658723,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/celery_executor.py",
        "lines": [
            244
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658723,
        "satd_repo": 33884891,
        "satd_sha": "57da45685457520d51a0967e2aeb5e5ff162dfa7",
        "satd_text": " pylint: disable=unnecessary-comprehension",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/debug_executor.py",
        "lines": [
            125
        ],
        "matched_text": "            [(k, v) for k, v in self.queued_tasks.items()],  # pylint: disable=unnecessary-comprehension"
    },
    {
        "satd_id": 21658729,
        "satd_text": " [END documentation]\n [START jinja_template]\n [END jinja_template]\n [END tutorial]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21658731,
        "satd_repo": 33884891,
        "satd_sha": "072dab62c480fc04587e92db1174f319444d2bb6",
        "satd_text": " [START documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial.py",
        "lines": [
            91
        ],
        "matched_text": "# [START documentation]"
    },
    {
        "satd_id": 21658731,
        "satd_repo": 33884891,
        "satd_sha": "072dab62c480fc04587e92db1174f319444d2bb6",
        "satd_text": " [START documentation]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/tutorial.rst",
        "lines": [
            186
        ],
        "matched_text": "    :start-after: [START documentation]"
    },
    {
        "satd_id": 21658735,
        "satd_repo": 33884891,
        "satd_sha": "0f1de0b67d7dbc8ab86dff2e0daebd21fedc2a6e",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/serve_logs.py",
        "lines": [
            32
        ],
        "matched_text": "    def serve_logs_view(filename):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21658986,
        "satd_repo": 33884891,
        "satd_sha": "7502cad2844139d57e4276d971c0706a361d9dbe",
        "satd_text": " pylint: disable=invalid-name, unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/amazon/aws/operators/batch.py",
        "lines": [
            41
        ],
        "matched_text": "# pylint: disable=invalid-name, unused-argument"
    },
    {
        "satd_id": 21659046,
        "satd_repo": 33884891,
        "satd_sha": "fe2334fb0acbf1cfd5a8fb6986d1a573855f800a",
        "satd_text": " Just for better logging, it's not used anywhere",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/debug_executor.py",
        "lines": [
            107
        ],
        "matched_text": "            [str(task_instance)],  # Just for better logging, it's not used anywhere"
    },
    {
        "satd_id": 21659214,
        "satd_repo": 33884891,
        "satd_sha": "f69aa14a021a6160ecdb75678fd40cf00a404525",
        "satd_text": " This runs extra processes, so that we can be sure that we correctly\n tidy up all processes launched by a task when killing",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/dags/test_on_kill.py",
        "lines": [
            29,
            30
        ],
        "matched_text": "        # This runs extra processes, so that we can be sure that we correctly"
    },
    {
        "satd_id": 21659270,
        "satd_repo": 33884891,
        "satd_sha": "e61025e1aca0ecf7f51dc15eb2a1be3464f96429",
        "satd_text": " fixme: this should use some other env variable ex. RUNNING_ON_K8S",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/conftest.py",
        "lines": [
            70
        ],
        "matched_text": "    # fixme: this should use some other env variable ex. RUNNING_ON_K8S"
    },
    {
        "satd_id": 21659288,
        "satd_repo": 33884891,
        "satd_sha": "0abefe9243388e45d676508b9f1cb84d1c8d3d8b",
        "satd_text": " Extra Operator Links",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialized_baseoperator.py",
        "lines": [
            83
        ],
        "matched_text": "        # Extra Operator Links"
    },
    {
        "satd_id": 21659288,
        "satd_repo": 33884891,
        "satd_sha": "0abefe9243388e45d676508b9f1cb84d1c8d3d8b",
        "satd_text": " Extra Operator Links",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialized_objects.py",
        "lines": [
            308
        ],
        "matched_text": "        # Extra Operator Links"
    },
    {
        "satd_id": 21659300,
        "satd_repo": 33884891,
        "satd_sha": "0abefe9243388e45d676508b9f1cb84d1c8d3d8b",
        "satd_text": " Extra Operator Links",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialized_baseoperator.py",
        "lines": [
            83
        ],
        "matched_text": "        # Extra Operator Links"
    },
    {
        "satd_id": 21659300,
        "satd_repo": 33884891,
        "satd_sha": "0abefe9243388e45d676508b9f1cb84d1c8d3d8b",
        "satd_text": " Extra Operator Links",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialized_objects.py",
        "lines": [
            308
        ],
        "matched_text": "        # Extra Operator Links"
    },
    {
        "satd_id": 21659309,
        "satd_repo": 33884891,
        "satd_sha": "a36cfe049a2c5948b24fde7a878fe19cabede5f7",
        "satd_text": " Load plugins here for executors as at that time the plugins might not have been initialized yet\n TODO: verify the above and remove two lines below in case plugins are always initialized first",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/executors/executor_loader.py",
        "lines": [
            76,
            77
        ],
        "matched_text": "            # Load plugins here for executors as at that time the plugins might not have been initialized yet"
    },
    {
        "satd_id": 21659342,
        "satd_repo": 33884891,
        "satd_sha": "2f2f89c148e2b694aee9402707f68065ee7320f8",
        "satd_text": " pylint: disable=unused-variable  # noqa",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_automl.py",
        "lines": [
            81
        ],
        "matched_text": "        client = self.hook.prediction_client  # pylint: disable=unused-variable  # noqa"
    },
    {
        "satd_id": 21659343,
        "satd_text": " pylint: disable=no-method-argument,unused-argument\n pylint: disable=attribute-defined-outside-init\n pylint: disable=unused-argument,no-method-argument\n pylint: disable=attribute-defined-outside-init\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21659346,
        "satd_text": " pylint: disable=redefined-builtin,unused-argument\n pylint: disable=redefined-builtin,unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21659347,
        "satd_text": " pylint: disable=no-value-for-parameter\n pylint: disable=no-value-for-parameter\n pylint: disable=no-value-for-parameter\n pylint: disable=no-value-for-parameter\n pylint: disable=no-value-for-parameter\n pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21659358,
        "satd_repo": 33884891,
        "satd_sha": "e82008d96c8aa78a08fd5f832615feed427d8ea6",
        "satd_text": "#################\n Remote logging #\n#################",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/airflow_local_settings.py",
        "lines": [
            148,
            149,
            150
        ],
        "matched_text": "##################"
    },
    {
        "satd_id": 21659361,
        "satd_repo": 33884891,
        "satd_sha": "1ef56df74a219d8bdda33a508e914d13de2fd0bc",
        "satd_text": " this is a temporary hack to satisfy mypy. Once\n https://github.com/python/mypy/issues/6136 is resolved, use\n `attr.converters.default_if_none(default=False)`\n pylint: disable=missing-docstring",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/lineage/entities.py",
        "lines": [
            84,
            85,
            86,
            87
        ],
        "matched_text": "# this is a temporary hack to satisfy mypy. Once"
    },
    {
        "satd_id": 21659371,
        "satd_repo": 33884891,
        "satd_sha": "03c870a6172ab232af6319a30ad8d46622359b10",
        "satd_text": " pylint: disable=too-many-arguments,too-many-locals, too-many-statements",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/baseoperator.py",
        "lines": [
            280
        ],
        "matched_text": "    # pylint: disable=too-many-arguments,too-many-locals, too-many-statements"
    },
    {
        "satd_id": 21659384,
        "satd_repo": 33884891,
        "satd_sha": "63fcc73ee17c031bf0c7973cef70e521602e78f5",
        "satd_text": " Sphinx airflow theme has its own styles.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/exampleinclude.py",
        "lines": [
            255
        ],
        "matched_text": "        # Sphinx airflow theme has its own styles."
    },
    {
        "satd_id": 21659429,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-variable, redefined-outer-name",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/serve_logs_command.py",
        "lines": [
            33
        ],
        "matched_text": "    def serve_logs(filename):  # pylint: disable=unused-variable, redefined-outer-name"
    },
    {
        "satd_id": 21659432,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " TODO: This should be written to a log",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/task_command.py",
        "lines": [
            63
        ],
        "matched_text": "                    # TODO: This should be written to a log"
    },
    {
        "satd_id": 21659437,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " TODO, Do we want to print or log this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/task_command.py",
        "lines": [
            157
        ],
        "matched_text": "    # TODO, Do we want to print or log this"
    },
    {
        "satd_id": 21659449,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/webserver_command.py",
        "lines": [
            249
        ],
        "matched_text": "        def kill_proc(dummy_signum, dummy_frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659449,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/cli.py",
        "lines": [
            188
        ],
        "matched_text": "def sigint_handler(sig, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659449,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/cli.py",
        "lines": [
            196
        ],
        "matched_text": "def sigquit_handler(sig, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659477,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " TODO: We should not delete the entire database, but only reset the contents of the Connection table.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/commands/test_connection_command.py",
        "lines": [
            70
        ],
        "matched_text": "        # TODO: We should not delete the entire database, but only reset the contents of the Connection table."
    },
    {
        "satd_id": 21659477,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " TODO: We should not delete the entire database, but only reset the contents of the Connection table.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/test_cli.py",
        "lines": [
            1332
        ],
        "matched_text": "        # TODO: We should not delete the entire database, but only reset the contents of the Connection table."
    },
    {
        "satd_id": 21659531,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " Shorten timeout so that this test doesn't take too long time",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/cli/commands/test_webserver_command.py",
        "lines": [
            170
        ],
        "matched_text": "        # Shorten timeout so that this test doesn't take too long time"
    },
    {
        "satd_id": 21659531,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " Shorten timeout so that this test doesn't take too long time",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/cli/test_cli.py",
        "lines": [
            1268
        ],
        "matched_text": "        # Shorten timeout so that this test doesn't take too long time"
    },
    {
        "satd_id": 21659536,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/cli/commands/webserver_command.py",
        "lines": [
            249
        ],
        "matched_text": "        def kill_proc(dummy_signum, dummy_frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659536,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/cli.py",
        "lines": [
            188
        ],
        "matched_text": "def sigint_handler(sig, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659536,
        "satd_repo": 33884891,
        "satd_sha": "4a344f13d26ecbb627bb9968895b290bfd86e4da",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/cli.py",
        "lines": [
            196
        ],
        "matched_text": "def sigquit_handler(sig, frame):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659541,
        "satd_repo": 33884891,
        "satd_sha": "0acb0341f1bcebb8e30bee84e62fd9e87aa7b6f9",
        "satd_text": " TODO: We should not delete the entire database, but only reset the contents of the Connection table.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/cli/test_cli.py",
        "lines": [
            1332
        ],
        "matched_text": "        # TODO: We should not delete the entire database, but only reset the contents of the Connection table."
    },
    {
        "satd_id": 21659573,
        "satd_repo": 33884891,
        "satd_sha": "5c4cfea8c0f488496c1cbcc4c6c5db13d8210979",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/providers/google/cloud/operators/test_sftp_to_gcs.py",
        "lines": [
            53
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21659585,
        "satd_repo": 33884891,
        "satd_sha": "d633d3ac44c395e6c43cd388f98fba1ce1c435a3",
        "satd_text": " TODO: Remover one day",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/dataproc.py",
        "lines": [
            840
        ],
        "matched_text": "        # TODO: Remover one day"
    },
    {
        "satd_id": 21659586,
        "satd_repo": 33884891,
        "satd_sha": "d633d3ac44c395e6c43cd388f98fba1ce1c435a3",
        "satd_text": " pylint:disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/providers/google/cloud/hooks/dataproc.py",
        "lines": [
            826
        ],
        "matched_text": "        job_error_states: Optional[Iterable[str]] = None  # pylint:disable=unused-argument"
    },
    {
        "satd_id": 21659680,
        "satd_repo": 33884891,
        "satd_sha": "66ab028a76129137ba8512924ab8ce3e95aa85ee",
        "satd_text": " TODO(plypaul) Monitoring the control file in the cgroup fs is better than",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/task/task_runner/cgroup_task_runner.py",
        "lines": [
            182
        ],
        "matched_text": "        # TODO(plypaul) Monitoring the control file in the cgroup fs is better than"
    },
    {
        "satd_id": 21659686,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/dag.py",
        "lines": [
            665
        ],
        "matched_text": "        # .count() is inefficient"
    },
    {
        "satd_id": 21659686,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/taskinstance.py",
        "lines": [
            1394
        ],
        "matched_text": "        # .count() is inefficient"
    },
    {
        "satd_id": 21659686,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/external_task_sensor.py",
        "lines": [
            147
        ],
        "matched_text": "            # .count() is inefficient"
    },
    {
        "satd_id": 21659686,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/external_task_sensor.py",
        "lines": [
            155
        ],
        "matched_text": "            # .count() is inefficient"
    },
    {
        "satd_id": 21659687,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/dag.py",
        "lines": [
            665
        ],
        "matched_text": "        # .count() is inefficient"
    },
    {
        "satd_id": 21659687,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/taskinstance.py",
        "lines": [
            1394
        ],
        "matched_text": "        # .count() is inefficient"
    },
    {
        "satd_id": 21659687,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/external_task_sensor.py",
        "lines": [
            147
        ],
        "matched_text": "            # .count() is inefficient"
    },
    {
        "satd_id": 21659687,
        "satd_repo": 33884891,
        "satd_sha": "084d5f8487e3719df4bb2cc8a60e57e62bbcf966",
        "satd_text": " .count() is inefficient",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/external_task_sensor.py",
        "lines": [
            155
        ],
        "matched_text": "            # .count() is inefficient"
    },
    {
        "satd_id": 21660059,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " hashing is needed because the length of fileloc is 2000 as an Airflow convention,\n which is over the limit of indexing. If we can reduce the length of fileloc, then\n hashing is not needed.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/serialized_dag.py",
        "lines": [
            89,
            90,
            91
        ],
        "matched_text": "        # hashing is needed because the length of fileloc is 2000 as an Airflow convention,"
    },
    {
        "satd_id": 21660069,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/baseoperator.py",
        "lines": [
            303
        ],
        "matched_text": "        default_args: Optional[Dict] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660069,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/json_schema.py",
        "lines": [
            39
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660069,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialization.py",
        "lines": [
            119
        ],
        "matched_text": "        # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660071,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/baseoperator.py",
        "lines": [
            303
        ],
        "matched_text": "        default_args: Optional[Dict] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660071,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/json_schema.py",
        "lines": [
            39
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660071,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialization.py",
        "lines": [
            119
        ],
        "matched_text": "        # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660072,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " Object types that are always excluded in serialization.\n FIXME: not needed if _included_fields of DAG and operator are customized.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/dag/serialization/serialization.py",
        "lines": [
            58,
            59
        ],
        "matched_text": "    # Object types that are always excluded in serialization."
    },
    {
        "satd_id": 21660072,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " Object types that are always excluded in serialization.\n FIXME: not needed if _included_fields of DAG and operator are customized.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialization.py",
        "lines": [
            56,
            57
        ],
        "matched_text": "    # Object types that are always excluded in serialization."
    },
    {
        "satd_id": 21660075,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " FIXME: casts tuple to list in customized serialization in future.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialization.py",
        "lines": [
            176
        ],
        "matched_text": "                # FIXME: casts tuple to list in customized serialization in future."
    },
    {
        "satd_id": 21660084,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " FIXME: casts set to list in customized serialization in future.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialization.py",
        "lines": [
            172
        ],
        "matched_text": "                # FIXME: casts set to list in customized serialization in future."
    },
    {
        "satd_id": 21660093,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " Extra Operator Links",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/serialization/serialized_baseoperator.py",
        "lines": [
            101
        ],
        "matched_text": "        # Extra Operator Links"
    },
    {
        "satd_id": 21660102,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " TODO: Why?",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/serialization/serialized_dag.py",
        "lines": [
            78
        ],
        "matched_text": "                # TODO: Why?"
    },
    {
        "satd_id": 21660135,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " Updating serialized DAG can not be faster than a minimum interval to reduce database\n write rate.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            320,
            321
        ],
        "matched_text": "# Updating serialized DAG can not be faster than a minimum interval to reduce database"
    },
    {
        "satd_id": 21660137,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " FIXME: LoggingMixin should have a default _log field.\n type: ignore",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/logging_mixin.py",
        "lines": [
            47,
            48
        ],
        "matched_text": "            # FIXME: LoggingMixin should have a default _log field."
    },
    {
        "satd_id": 21660138,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " TODO: Make max_active_runs a column so we can query for it directly",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            1034
        ],
        "matched_text": "                    # TODO: Make max_active_runs a column so we can query for it directly"
    },
    {
        "satd_id": 21660141,
        "satd_repo": 33884891,
        "satd_sha": "66b2a47d9e6dbef551e31d41d23ee4fc2eae3636",
        "satd_text": " CleanUp",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_dag.py",
        "lines": [
            865
        ],
        "matched_text": "        # CleanUp"
    },
    {
        "satd_id": 21660147,
        "satd_repo": 33884891,
        "satd_sha": "4311c1f0749788816c0e0a3295bcff470088c555",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/operators/test_gcs_to_sftp.py",
        "lines": [
            47
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660388,
        "satd_repo": 33884891,
        "satd_sha": "d719e1fd6705a93a0dfefef4b46478ade5e006ea",
        "satd_text": " pylint: disable=unused-import,line-too-long\n noqa isort:skip",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/s3_to_gcs_transfer_operator.py",
        "lines": [
            24,
            25
        ],
        "matched_text": "# pylint: disable=unused-import,line-too-long"
    },
    {
        "satd_id": 21660457,
        "satd_repo": 33884891,
        "satd_sha": "5f9ab7a1d5cd4540e953005d43898be08ed56d60",
        "satd_text": " TODO: Remove for Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/dagbag.py",
        "lines": [
            403
        ],
        "matched_text": "            # TODO: Remove for Airflow 2.0"
    },
    {
        "satd_id": 21660478,
        "satd_repo": 33884891,
        "satd_sha": "1815ef32d86ed49d991faddb531d1b8408a11b0d",
        "satd_text": " Temporary force python version 3.5 for static checks",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            495
        ],
        "matched_text": "    # Temporary force python version 3.5 for static checks"
    },
    {
        "satd_id": 21660478,
        "satd_repo": 33884891,
        "satd_sha": "1815ef32d86ed49d991faddb531d1b8408a11b0d",
        "satd_text": " Temporary force python version 3.5 for static checks",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            855
        ],
        "matched_text": "            # Temporary force python version 3.5 for static checks"
    },
    {
        "satd_id": 21660489,
        "satd_repo": 33884891,
        "satd_sha": "0a505b613650efd1cdd7590443db8b9d52de4c88",
        "satd_text": " TODO: We might come up with just one airflow CI image not the SLIM/CI versions. That would simplify a lot.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/docker_build/ci_build_install_deps.sh",
        "lines": [
            23
        ],
        "matched_text": "# TODO: We might come up with just one airflow CI image not the SLIM/CI versions. That would simplify a lot."
    },
    {
        "satd_id": 21660491,
        "satd_repo": 33884891,
        "satd_sha": "7e4330cce0b4f333b1658cdc315b06505cf9dd76",
        "satd_text": " To preserve backward compatibility\n TODO: remove one day",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/gcp/hooks/bigquery.py",
        "lines": [
            59,
            60
        ],
        "matched_text": "        # To preserve backward compatibility"
    },
    {
        "satd_id": 21660491,
        "satd_repo": 33884891,
        "satd_sha": "7e4330cce0b4f333b1658cdc315b06505cf9dd76",
        "satd_text": " To preserve backward compatibility\n TODO: remove one day",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/gcp/hooks/gcs.py",
        "lines": [
            53,
            54
        ],
        "matched_text": "        # To preserve backward compatibility"
    },
    {
        "satd_id": 21660492,
        "satd_repo": 33884891,
        "satd_sha": "7e4330cce0b4f333b1658cdc315b06505cf9dd76",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_datastore.py",
        "lines": [
            32
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660503,
        "satd_repo": 33884891,
        "satd_sha": "857788e305bbefe4566a1988e2072a21c7aab319",
        "satd_text": " Removes the \"Force answer\" (yes/no/quit) given previously, unles you specifically want to use it.\n\n This is the default behaviour of all rebuild scripts to ask independently whether you want to\n rebuild the image or not. Sometimes however we want to reuse answer previously given. For\n example if you answered \"no\" to rebuild the image, the assumption is that you do not\n want to rebuild image for other rebuilds in the same pre-commit execution.\n\n All the pre-commit checks therefore have `export SKIP_CLEANUP_OF_LAST_ANSWER=\"true\"` set\n So that in case they are run in a sequence of commits they will not rebuild. Similarly if your most\n recent answer was \"no\" and you run `pre-commit run mypy` (for example) it will also reuse the\n \"no\" answer given previously. This happens until you run any of the breeze commands or run all\n precommits `pre-commit run` - then the \"LAST_FORCE_ANSWER_FILE\" will be removed and you will\n be asked again.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359
        ],
        "matched_text": "    # Removes the \"Force answer\" (yes/no/quit) given previously, unles you specifically want to use it."
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/qubole_hook.py",
        "lines": [
            103
        ],
        "matched_text": "    def __init__(self, *args, **kwargs):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/baseoperator.py",
        "lines": [
            288
        ],
        "matched_text": "        default_args: Optional[Dict] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/file_task_handler.py",
        "lines": [
            84
        ],
        "matched_text": "    def _read(self, ti, try_number, metadata=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            64
        ],
        "matched_text": "                        typ,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            69
        ],
        "matched_text": "                        options=None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            70
        ],
        "matched_text": "                        content=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def __init__(self, _):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            63
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_aws_athena_operator.py",
        "lines": [
            51
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_sagemaker_training_operator.py",
        "lines": [
            83
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/executors/test_kubernetes_executor.py",
        "lines": [
            36
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_bigquery.py",
        "lines": [
            273
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/minikube/test_kubernetes_pod_operator.py",
        "lines": [
            52
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/__init__.py",
        "lines": [
            54
        ],
        "matched_text": "def _get_elasticmock(hosts=None, *args, **kwargs):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660546,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            275
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660556,
        "satd_text": " pylint: disable=too-many-instance-attributes,too-many-public-methods\n noinspection PyUnusedLocal\n pylint: disable=too-many-arguments,too-many-locals\n pylint: disable=unused-argument\n pylint: disable=unidiomatic-typecheck",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/qubole_hook.py",
        "lines": [
            103
        ],
        "matched_text": "    def __init__(self, *args, **kwargs):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models/baseoperator.py",
        "lines": [
            288
        ],
        "matched_text": "        default_args: Optional[Dict] = None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/file_task_handler.py",
        "lines": [
            84
        ],
        "matched_text": "    def _read(self, ti, try_number, metadata=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            64
        ],
        "matched_text": "                        typ,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            69
        ],
        "matched_text": "                        options=None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            70
        ],
        "matched_text": "                        content=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def __init__(self, _):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            63
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_aws_athena_operator.py",
        "lines": [
            51
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_sagemaker_training_operator.py",
        "lines": [
            83
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/executors/test_kubernetes_executor.py",
        "lines": [
            36
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_bigquery.py",
        "lines": [
            273
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/minikube/test_kubernetes_pod_operator.py",
        "lines": [
            52
        ],
        "matched_text": "# pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/__init__.py",
        "lines": [
            54
        ],
        "matched_text": "def _get_elasticmock(hosts=None, *args, **kwargs):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660566,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            275
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660570,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/exts/docroles.py",
        "lines": [
            69,
            70
        ],
        "matched_text": "                        options=None,  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21660575,
        "satd_text": " noinspection PyMethodMayBeStatic,PyUnusedLocal\n pylint: disable=unused-argument\n noinspection PyUnusedLocal",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21660577,
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument\n pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21660580,
        "satd_text": " \"License\"); you may not use this file except in compliance\n \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n noinspection PyUnusedLocal\n pylint: disable=unused-argument\n pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21660584,
        "satd_text": " pylint: disable=broad-except\n pylint: disable=unused-argument\n pylint: disable=invalid-name\n pylint: enable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21660587,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_aws_athena_operator.py",
        "lines": [
            50,
            51
        ],
        "matched_text": "# noinspection PyUnusedLocal"
    },
    {
        "satd_id": 21660587,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_sagemaker_training_operator.py",
        "lines": [
            82,
            83
        ],
        "matched_text": "# noinspection PyUnusedLocal"
    },
    {
        "satd_id": 21660587,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_bigquery.py",
        "lines": [
            272,
            273
        ],
        "matched_text": "# noinspection PyUnusedLocal"
    },
    {
        "satd_id": 21660587,
        "satd_repo": 33884891,
        "satd_sha": "47801057989046dfcf7b424ce54afee103803815",
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/__init__.py",
        "lines": [
            53,
            54
        ],
        "matched_text": "# noinspection PyUnusedLocal"
    },
    {
        "satd_id": 21660597,
        "satd_repo": 33884891,
        "satd_sha": "1adeeae5a298267a5193e03e841ca83c1d2ef52f",
        "satd_text": " To preserve backward compatibility\n TODO: remove one day\n pylint: disable=missing-docstring",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/gcp/hooks/kubernetes_engine.py",
        "lines": [
            76,
            77,
            78
        ],
        "matched_text": "    # To preserve backward compatibility"
    },
    {
        "satd_id": 21660678,
        "satd_repo": 33884891,
        "satd_sha": "455eb41ba65af1bf7f9d2caea7393f3b82b8c1d7",
        "satd_text": " Determine python version. This can be either specified by AUTODETECT_PYTHON_VERSION variable or it is\n auto-detected from the version of the python3 binary (or AUTODETECT_PYTHON_BINARY you specify as\n environment variable).\n Note that even if we auto-detect it here, it can be further overridden in case IMAGE_NAME is speecified\n as environment variable. The reason is that IMAGE_NAME is the only differentiating factor we can have\n in the DockerHub build. We cannot specify different environment variables for different image names\n so we use IMAGE_NAME to determine which PYTHON_VERSION is actually used for this particular build.\n It's cumbersome - we can improve it in the future by swtching away from DockerHub builds - only use\n DockerHub to store the images but not to run it to build the images. If we switch to another CI that\n will let us build images outside of DockerHub and push them there, we will be able to get rid of this.\n This will probably be necessary as we scale up becasue DockerHub build are very slow and they are\n already queueing a lot.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "common/_autodetect_variables.sh",
        "lines": [
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87
        ],
        "matched_text": "# Determine python version. This can be either specified by AUTODETECT_PYTHON_VERSION variable or it is"
    },
    {
        "satd_id": 21660706,
        "satd_repo": 33884891,
        "satd_sha": "f116faf7c0fe864a0c6838c9c6661e1be085ac08",
        "satd_text": " Temporary force python version 3.5 for static checks",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/_utils.sh",
        "lines": [
            457
        ],
        "matched_text": "    # Temporary force python version 3.5 for static checks"
    },
    {
        "satd_id": 21660762,
        "satd_repo": 33884891,
        "satd_sha": "004f353342fd3d39133db0577dfbabf83e37d02d",
        "satd_text": " type: Dict\n type: int\n TODO: Fill missing value",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/gcp/operators/test_cloud_memorystore.py",
        "lines": [
            53,
            54,
            55
        ],
        "matched_text": "TEST_INPUT_CONFIG = {\"gcs_source\": {\"uri\": \"gs://test-bucket/file.rdb\"}}  # type: Dict"
    },
    {
        "satd_id": 21660764,
        "satd_repo": 33884891,
        "satd_sha": "004f353342fd3d39133db0577dfbabf83e37d02d",
        "satd_text": " TODO: Update it",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/gcp/operators/test_cloud_memorystore_system.py",
        "lines": [
            24
        ],
        "matched_text": "from tests.contrib.utils.gcp_authenticator import GCP_MEMORYSTORE  # TODO: Update it"
    },
    {
        "satd_id": 21660764,
        "satd_repo": 33884891,
        "satd_sha": "004f353342fd3d39133db0577dfbabf83e37d02d",
        "satd_text": " TODO: Update it",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/gcp/operators/test_cloud_memorystore_system_helper.py",
        "lines": [
            27
        ],
        "matched_text": "from tests.contrib.utils.gcp_authenticator import GcpAuthenticator, GCP_GCS_TRANSFER_KEY  # TODO: Update it"
    },
    {
        "satd_id": 21660767,
        "satd_repo": 33884891,
        "satd_sha": "004f353342fd3d39133db0577dfbabf83e37d02d",
        "satd_text": " TODO: Update it",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/gcp/operators/test_cloud_memorystore_system.py",
        "lines": [
            24
        ],
        "matched_text": "from tests.contrib.utils.gcp_authenticator import GCP_MEMORYSTORE  # TODO: Update it"
    },
    {
        "satd_id": 21660767,
        "satd_repo": 33884891,
        "satd_sha": "004f353342fd3d39133db0577dfbabf83e37d02d",
        "satd_text": " TODO: Update it",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "tests/gcp/operators/test_cloud_memorystore_system_helper.py",
        "lines": [
            27
        ],
        "matched_text": "from tests.contrib.utils.gcp_authenticator import GcpAuthenticator, GCP_GCS_TRANSFER_KEY  # TODO: Update it"
    },
    {
        "satd_id": 21660875,
        "satd_repo": 33884891,
        "satd_sha": "9d6b58d8711ddd5f71817b11e9289d796250e95e",
        "satd_text": " TODO: We should think about removing those and moving them into docker-compose dependencies.\n TODO: We might come up with just ine airflow CI image not the SLIM/CI versions. That would simplify a lot.\n TODO: We could likely get rid of the multi-staging approach. It introduces a number of limitations\n TODO: As long as we decrease the size of the CI image, we should be fine with using single CI image for\n TODO: everything. Currently the CI image is about 1GB where CI_SLIM is around 0.5 GB.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/docker_build/ci_build_install_deps.sh",
        "lines": [
            22,
            23,
            24,
            25,
            26
        ],
        "matched_text": "# TODO: We should think about removing those and moving them into docker-compose dependencies."
    },
    {
        "satd_id": 21660988,
        "satd_repo": 33884891,
        "satd_sha": "46cbeea376dfb02bf70fbcf310287733145974dd",
        "satd_text": " pylint: disable=unused-argument,invalid-name",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_dynamodb_to_s3.py",
        "lines": [
            35
        ],
        "matched_text": "        def mock_upload_file(Filename, Bucket, Key):  # pylint: disable=unused-argument,invalid-name"
    },
    {
        "satd_id": 21661010,
        "satd_repo": 33884891,
        "satd_sha": "286aa7a5817372a19c8e0be8c447021eb66dac6c",
        "satd_text": " shellcheck disable=SC2034  # Unused variables left for comp_breeze usage",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "breeze",
        "lines": [
            1030
        ],
        "matched_text": "# shellcheck disable=SC2034  # Unused variables left for comp_breeze usage"
    },
    {
        "satd_id": 21661013,
        "satd_repo": 33884891,
        "satd_sha": "286aa7a5817372a19c8e0be8c447021eb66dac6c",
        "satd_text": " Whether to cleanup local image",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "breeze",
        "lines": [
            54
        ],
        "matched_text": "# Whether to cleanup local image"
    },
    {
        "satd_id": 21661157,
        "satd_repo": 33884891,
        "satd_sha": "c92181226170a015813a34daecb43df3052c0cdf",
        "satd_text": " pylint:disable=unused-variable  # noqa",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/gcp/hooks/test_automl.py",
        "lines": [
            82
        ],
        "matched_text": "        client = self.hook.prediction_client  # pylint:disable=unused-variable  # noqa"
    },
    {
        "satd_id": 21661398,
        "satd_repo": 33884891,
        "satd_sha": "6ad628cec94728e6769e39b00037849a43dbb9a3",
        "satd_text": " TODO: Fixme please - I have too complex implementation\n pylint: disable=too-many-instance-attributes,too-many-arguments,too-many-branches",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/winrm_hook.py",
        "lines": [
            29,
            30
        ],
        "matched_text": "# TODO: Fixme please - I have too complex implementation"
    },
    {
        "satd_id": 21661399,
        "satd_repo": 33884891,
        "satd_sha": "6ad628cec94728e6769e39b00037849a43dbb9a3",
        "satd_text": " TODO: move it out from the base hook. It belongs to some common SQL hook most likely",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/base_hook.py",
        "lines": [
            110
        ],
        "matched_text": "        # TODO: move it out from the base hook. It belongs to some common SQL hook most likely"
    },
    {
        "satd_id": 21661399,
        "satd_repo": 33884891,
        "satd_sha": "6ad628cec94728e6769e39b00037849a43dbb9a3",
        "satd_text": " TODO: move it out from the base hook. It belongs to some common SQL hook most likely",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/base_hook.py",
        "lines": [
            115
        ],
        "matched_text": "        # TODO: move it out from the base hook. It belongs to some common SQL hook most likely"
    },
    {
        "satd_id": 21661399,
        "satd_repo": 33884891,
        "satd_sha": "6ad628cec94728e6769e39b00037849a43dbb9a3",
        "satd_text": " TODO: move it out from the base hook. It belongs to some common SQL hook most likely",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/base_hook.py",
        "lines": [
            120
        ],
        "matched_text": "        # TODO: move it out from the base hook. It belongs to some common SQL hook most likely"
    },
    {
        "satd_id": 21661520,
        "satd_repo": 33884891,
        "satd_sha": "203e6e891e8fb26a6701b955e0b9bf181cc10d23",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1085
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661520,
        "satd_repo": 33884891,
        "satd_sha": "203e6e891e8fb26a6701b955e0b9bf181cc10d23",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1102
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661520,
        "satd_repo": 33884891,
        "satd_sha": "203e6e891e8fb26a6701b955e0b9bf181cc10d23",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/test_pool_slots_available_dep.py",
        "lines": [
            42
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661520,
        "satd_repo": 33884891,
        "satd_sha": "203e6e891e8fb26a6701b955e0b9bf181cc10d23",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/test_pool_slots_available_dep.py",
        "lines": [
            48
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661520,
        "satd_repo": 33884891,
        "satd_sha": "203e6e891e8fb26a6701b955e0b9bf181cc10d23",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/test_pool_slots_available_dep.py",
        "lines": [
            54
        ],
        "matched_text": "    # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661571,
        "satd_repo": 33884891,
        "satd_sha": "70e937a8d8ff308a9fb9055ceb7ef2c034200b36",
        "satd_text": " whethere verbose output should be produced",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/ci_run_airflow_testing.sh",
        "lines": [
            43
        ],
        "matched_text": "# whethere verbose output should be produced"
    },
    {
        "satd_id": 21661577,
        "satd_repo": 33884891,
        "satd_sha": "70e937a8d8ff308a9fb9055ceb7ef2c034200b36",
        "satd_text": " Script to run flake8 on all code. Can be started from any working directory",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "scripts/ci/in_container/run_flake8.sh",
        "lines": [
            20
        ],
        "matched_text": "# Script to run flake8 on all code. Can be started from any working directory"
    },
    {
        "satd_id": 21661617,
        "satd_repo": 33884891,
        "satd_sha": "f6356f2cbbaeea9db2a98cce2c103d21c2651e62",
        "satd_text": " Object types that are always excluded in serialization.\n FIXME: not needed if _included_fields of DAG and operator are customized.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/dag/serialization/serialization.py",
        "lines": [
            59,
            60
        ],
        "matched_text": "    # Object types that are always excluded in serialization."
    },
    {
        "satd_id": 21661619,
        "satd_repo": 33884891,
        "satd_sha": "f6356f2cbbaeea9db2a98cce2c103d21c2651e62",
        "satd_text": " FIXME: casts set to list in customized serilization in future.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/dag/serialization/serialization.py",
        "lines": [
            164
        ],
        "matched_text": "                # FIXME: casts set to list in customized serilization in future."
    },
    {
        "satd_id": 21661629,
        "satd_repo": 33884891,
        "satd_sha": "f6356f2cbbaeea9db2a98cce2c103d21c2651e62",
        "satd_text": " FIXME: casts tuple to list in customized serilization in future.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/dag/serialization/serialization.py",
        "lines": [
            168
        ],
        "matched_text": "                # FIXME: casts tuple to list in customized serilization in future."
    },
    {
        "satd_id": 21661636,
        "satd_repo": 33884891,
        "satd_sha": "f6356f2cbbaeea9db2a98cce2c103d21c2651e62",
        "satd_text": " Stringified DAGs and operators contain exactly these fields.\n FIXME: to customize included fields and keep only necessary fields.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/dag/serialization/serialized_dag.py",
        "lines": [
            38,
            39
        ],
        "matched_text": "    # Stringified DAGs and operators contain exactly these fields."
    },
    {
        "satd_id": 21661640,
        "satd_repo": 33884891,
        "satd_sha": "f6356f2cbbaeea9db2a98cce2c103d21c2651e62",
        "satd_text": " FIXME: to remove useless fields.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/dags/test_dag_serialization.py",
        "lines": [
            95
        ],
        "matched_text": "# FIXME: to remove useless fields."
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            1069
        ],
        "matched_text": "    def serve_logs(filename):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            42
        ],
        "matched_text": "    def ping_connection(connection, branch):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            105
        ],
        "matched_text": "    def connect(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            110
        ],
        "matched_text": "        def set_sqlite_pragma(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            118
        ],
        "matched_text": "        def set_mysql_timezone(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            124
        ],
        "matched_text": "    def checkout(dbapi_connection, connection_record, connection_proxy):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            205
        ],
        "matched_text": "        def jinja_globals():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            212
        ],
        "matched_text": "        def shutdown_session(exception=None):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/decorators.py",
        "lines": [
            68
        ],
        "matched_text": "        def zipper(response):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661751,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static_config.py",
        "lines": [
            58
        ],
        "matched_text": "    def get_url_for_asset():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661752,
        "satd_text": " pylint: disable=unused-variable\n pylint: disable=unused-variable\n pylint: disable=unused-variable\n pylint: disable=unused-variable\n pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21661753,
        "satd_text": " pylint: disable=unused-variable\n pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            1069
        ],
        "matched_text": "    def serve_logs(filename):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            42
        ],
        "matched_text": "    def ping_connection(connection, branch):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            105
        ],
        "matched_text": "    def connect(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            110
        ],
        "matched_text": "        def set_sqlite_pragma(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            118
        ],
        "matched_text": "        def set_mysql_timezone(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            124
        ],
        "matched_text": "    def checkout(dbapi_connection, connection_record, connection_proxy):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            205
        ],
        "matched_text": "        def jinja_globals():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            212
        ],
        "matched_text": "        def shutdown_session(exception=None):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/decorators.py",
        "lines": [
            68
        ],
        "matched_text": "        def zipper(response):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661754,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static_config.py",
        "lines": [
            58
        ],
        "matched_text": "    def get_url_for_asset():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            1069
        ],
        "matched_text": "    def serve_logs(filename):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            42
        ],
        "matched_text": "    def ping_connection(connection, branch):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            105
        ],
        "matched_text": "    def connect(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            110
        ],
        "matched_text": "        def set_sqlite_pragma(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            118
        ],
        "matched_text": "        def set_mysql_timezone(dbapi_connection, connection_record):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/sqlalchemy.py",
        "lines": [
            124
        ],
        "matched_text": "    def checkout(dbapi_connection, connection_record, connection_proxy):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            205
        ],
        "matched_text": "        def jinja_globals():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/app.py",
        "lines": [
            212
        ],
        "matched_text": "        def shutdown_session(exception=None):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/decorators.py",
        "lines": [
            68
        ],
        "matched_text": "        def zipper(response):  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661755,
        "satd_repo": 33884891,
        "satd_sha": "c97365ae47f09269cfc9ecbcd227e4a004112222",
        "satd_text": " pylint: disable=unused-variable",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static_config.py",
        "lines": [
            58
        ],
        "matched_text": "    def get_url_for_asset():  # pylint: disable=unused-variable"
    },
    {
        "satd_id": 21661760,
        "satd_repo": 33884891,
        "satd_sha": "e78cdefee364a4fdab1190f1e7491d5b28eb4417",
        "satd_text": " We re-initialized the ORM within this Process above so we need to\n tear it down manually here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            157,
            158
        ],
        "matched_text": "            # We re-initialized the ORM within this Process above so we need to"
    },
    {
        "satd_id": 21661761,
        "satd_repo": 33884891,
        "satd_sha": "e78cdefee364a4fdab1190f1e7491d5b28eb4417",
        "satd_text": " Change the thread name to differentiate log lines. This is\n really a separate process, but changing the name of the\n process doesn't work, so changing the thread name instead.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs/scheduler_job.py",
        "lines": [
            134,
            135,
            136
        ],
        "matched_text": "            # Change the thread name to differentiate log lines. This is"
    },
    {
        "satd_id": 21661781,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/sql_to_gcs.py",
        "lines": [
            168
        ],
        "matched_text": "                # TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB."
    },
    {
        "satd_id": 21661788,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_mssql_to_gcs_operator.py",
        "lines": [
            138
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661788,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_mysql_to_gcs_operator.py",
        "lines": [
            277
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661788,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_postgres_to_gcs_operator.py",
        "lines": [
            143
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661789,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_mssql_to_gcs_operator.py",
        "lines": [
            138
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661789,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_mysql_to_gcs_operator.py",
        "lines": [
            277
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661789,
        "satd_repo": 33884891,
        "satd_sha": "be0c9901dd290a949faca012575e026cefee723c",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_postgres_to_gcs_operator.py",
        "lines": [
            143
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type, gzip):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661984,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661985,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661986,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661987,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_mysql_to_gcs_operator.py",
        "lines": [
            265
        ],
        "matched_text": "        def _assert_upload(bucket, obj, tmp_filename, mime_type):  # pylint disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661988,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661989,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661990,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661991,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661992,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_bigquery_hook.py",
        "lines": [
            234
        ],
        "matched_text": "def mock_job_cancel(projectId, jobId):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_grpc_hook.py",
        "lines": [
            57
        ],
        "matched_text": "    def stream_call(self, data):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_adls_to_gcs_operator.py",
        "lines": [
            75
        ],
        "matched_text": "        def _assert_upload(bucket_name, object_name, filename):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/sensors/test_jira_sensor_test.py",
        "lines": [
            84
        ],
        "matched_text": "    def field_checker_func(context, issue):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            990
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            1010
        ],
        "matched_text": "        def payload_generator(context, object):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_scheduler_job.py",
        "lines": [
            1084
        ],
        "matched_text": "            session=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_taskinstance.py",
        "lines": [
            1005
        ],
        "matched_text": "            def success_handler(self, context):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            40
        ],
        "matched_text": "    def are_dependents_done(self, session):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/log/elasticmock/fake_elasticsearch.py",
        "lines": [
            253
        ],
        "matched_text": "    def _find_match(self, index, doc_type, body, params=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21661993,
        "satd_repo": 33884891,
        "satd_sha": "96933b07978ec1414a928f65ffda0dde926dd079",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_decorators.py",
        "lines": [
            29
        ],
        "matched_text": "    def __init__(self, test_param, params=None, default_args=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662025,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " add test/test_utils to PYTHONPATH TODO: Do we need that ??? Looks fishy.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "run-tests",
        "lines": [
            36
        ],
        "matched_text": "# add test/test_utils to PYTHONPATH TODO: Do we need that ??? Looks fishy."
    },
    {
        "satd_id": 21662065,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": "\n Cleans up PYC files (in case they come in mounted folders)\n",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/_in_container_utils.sh",
        "lines": [
            47,
            48
        ],
        "matched_text": "#"
    },
    {
        "satd_id": 21662066,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": "\n Cleans up __pycache__ directories (in case they come in mounted folders)\n",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/_in_container_utils.sh",
        "lines": [
            67,
            68
        ],
        "matched_text": "#"
    },
    {
        "satd_id": 21662070,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " add test/test_utils to PYTHONPATH (TODO: Do we need it?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/entrypoint_ci.sh",
        "lines": [
            90
        ],
        "matched_text": "# add test/test_utils to PYTHONPATH (TODO: Do we need it?)"
    },
    {
        "satd_id": 21662074,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " Cleanup the logs, tmp when entering the environment",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/entrypoint_ci.sh",
        "lines": [
            111
        ],
        "matched_text": "# Cleanup the logs, tmp when entering the environment"
    },
    {
        "satd_id": 21662076,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " Fix codecov build path\n TODO: Check this - this should be made travis-independent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/entrypoint_ci.sh",
        "lines": [
            99,
            100
        ],
        "matched_text": "# Fix codecov build path"
    },
    {
        "satd_id": 21662078,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " This script runs inside a container, the path of the kubernetes certificate\n is /home/travis/.minikube/client.crt but the user in the container is `root`\n TODO: Check this. This should be made travis-independent :D",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/in_container/entrypoint_ci.sh",
        "lines": [
            210,
            211,
            212
        ],
        "matched_text": "    # This script runs inside a container, the path of the kubernetes certificate"
    },
    {
        "satd_id": 21662138,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " TODO: Check this - this should be TRAVIS-independent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/kubernetes/kube/deploy.sh",
        "lines": [
            143
        ],
        "matched_text": "# TODO: Check this - this should be TRAVIS-independent"
    },
    {
        "satd_id": 21662140,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " TODO: Check This - it should be travis-independent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/kubernetes/minikube/start_minikube.sh",
        "lines": [
            108
        ],
        "matched_text": "# TODO: Check This - it should be travis-independent"
    },
    {
        "satd_id": 21662141,
        "satd_text": "!/usr/bin/env bash\n TODO: Change this - this should be Travis independent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662142,
        "satd_repo": 33884891,
        "satd_sha": "2d086d77f1335db3d5ebf308f4f664325509d28b",
        "satd_text": " TODO: change this - it should be Travis independent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/kubernetes/setup_kubernetes.sh",
        "lines": [
            29
        ],
        "matched_text": "# TODO: change this - it should be Travis independent"
    },
    {
        "satd_id": 21662165,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=redefined-outer-name,unused-argument\n pylint: disable=no-value-for-parameter\n pylint: disable=redefined-outer-name,unused-argument\n pylint: disable=no-value-for-parameter\n pylint: disable=redefined-outer-name,unused-argument\n pylint: disable=no-value-for-parameter\n pylint: disable=redefined-outer-name,unused-argument\n pylint: disable=no-value-for-parameter\n pylint: disable=broad-except",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_dataflow_hook.py",
        "lines": [
            79
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_dataproc_hook.py",
        "lines": [
            37
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_kms_hook.py",
        "lines": [
            38
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_pubsub_hook.py",
        "lines": [
            49
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_pubsub_hook.py",
        "lines": [
            172
        ],
        "matched_text": "    def test_create_subscription_without_name(self, mock_uuid, mock_service):  # noqa  # pylint: disable=unused-argument,line-too-long"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            241
        ],
        "matched_text": "    def test_wait_for_transfer_job_failed(self, get_conn, mock_sleep):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            260
        ],
        "matched_text": "                                                 mock_sleep):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662166,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            569
        ],
        "matched_text": "    def test_delete_transfer_job(self, get_conn):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662168,
        "satd_text": " pylint: disable=unused-argument\n noqa  # pylint: disable=unused-argument,line-too-long",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_dataflow_hook.py",
        "lines": [
            79
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_dataproc_hook.py",
        "lines": [
            37
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_kms_hook.py",
        "lines": [
            38
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_pubsub_hook.py",
        "lines": [
            49
        ],
        "matched_text": "def mock_init(self, gcp_conn_id, delegate_to=None):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_pubsub_hook.py",
        "lines": [
            172
        ],
        "matched_text": "    def test_create_subscription_without_name(self, mock_uuid, mock_service):  # noqa  # pylint: disable=unused-argument,line-too-long"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            241
        ],
        "matched_text": "    def test_wait_for_transfer_job_failed(self, get_conn, mock_sleep):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            260
        ],
        "matched_text": "                                                 mock_sleep):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662170,
        "satd_repo": 33884891,
        "satd_sha": "f06ae8fbe9a5c786f0299872abc85d9960b05886",
        "satd_text": " pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_transfer_hook.py",
        "lines": [
            569
        ],
        "matched_text": "    def test_delete_transfer_job(self, get_conn):  # pylint: disable=unused-argument"
    },
    {
        "satd_id": 21662171,
        "satd_text": " pylint: disable=unused-argument\n pylint: disable=unused-argument\n pylint: disable=no-value-for-parameter",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662172,
        "satd_text": " pylint:disable=redefined-builtin,unused-argument\n pylint:disable=redefined-builtin,unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662342,
        "satd_repo": 33884891,
        "satd_sha": "bfd62d48ee874bd6f69d01799db2900e301de443",
        "satd_text": " Note, according to documentation always either response or error is\n set when \"done\" == True",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/hooks/gcp_cloud_build_hook.py",
        "lines": [
            127,
            128
        ],
        "matched_text": "                # Note, according to documentation always either response or error is"
    },
    {
        "satd_id": 21662440,
        "satd_text": " noinspection PyUnusedLocal\n pylint: disable=unused-argument",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21662459,
        "satd_repo": 33884891,
        "satd_sha": "78c592ad86b66ee02f710a4f8f14db77401c722e",
        "satd_text": " In the future we can enable buildkit.\n It's experimental now and cache does not work out of the box with buildkit in Docker 18.09.2, buildkit 0.3.3\n It is fixed in upcoming buildkit 0.4.0.\n Buildkit will make build faster (including parallel builds of multi-stage builds).\n It will also help with simpler skipping of unused images.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "hooks/build",
        "lines": [
            226,
            227,
            228,
            229,
            230
        ],
        "matched_text": "# In the future we can enable buildkit."
    },
    {
        "satd_id": 21662631,
        "satd_repo": 33884891,
        "satd_sha": "d337c93c28bf93886bcd480da2bf6f6229cc830b",
        "satd_text": " run with timeout because this creates an infinite loop if not\n caught",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/jobs/test_backfill_job.py",
        "lines": [
            777,
            778
        ],
        "matched_text": "        # run with timeout because this creates an infinite loop if not"
    },
    {
        "satd_id": 21662774,
        "satd_repo": 33884891,
        "satd_sha": "d63b6c9a5d3f8dfcb959daf93dd55dcb710d0e38",
        "satd_text": " So we don't depend on actual value in the test config.",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/test_utils/decorators.py",
        "lines": [
            27
        ],
        "matched_text": "# So we don't depend on actual value in the test config."
    },
    {
        "satd_id": 21663140,
        "satd_repo": 33884891,
        "satd_sha": "c6efd0126422acf8d3821f1054a0b78756278ef1",
        "satd_text": " Test Deprecation warnings for deprecated parameters",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcs_hook.py",
        "lines": [
            488
        ],
        "matched_text": "    # Test Deprecation warnings for deprecated parameters"
    },
    {
        "satd_id": 21663215,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            605
        ],
        "matched_text": "        Helper method to clean up processor_agent to avoid leaving orphan processes."
    },
    {
        "satd_id": 21663215,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models/test_dagbag.py",
        "lines": [
            577
        ],
        "matched_text": "        # clean up"
    },
    {
        "satd_id": 21663215,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/test_models.py",
        "lines": [
            2005
        ],
        "matched_text": "        # clean up"
    },
    {
        "satd_id": 21663222,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/models/test_dagbag.py",
        "lines": [
            295,
            296
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21663222,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/models/test_dagbag.py",
        "lines": [
            387,
            388
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21663222,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/test_models.py",
        "lines": [
            1723,
            1724
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21663222,
        "satd_repo": 33884891,
        "satd_sha": "6970b233964ee254bbb343ed8bdc906c2f7bd974",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/test_models.py",
        "lines": [
            1815,
            1816
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21663373,
        "satd_repo": 33884891,
        "satd_sha": "99c8a6f1258e5fc8a9d4223b0203a0a76611bc78",
        "satd_text": " [END howto_operator_gcp_natural_language_document_gcs]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/example_dags/example_gcp_natural_language.py",
        "lines": [
            52
        ],
        "matched_text": "# [END howto_operator_gcp_natural_language_document_gcs]"
    },
    {
        "satd_id": 21663373,
        "satd_repo": 33884891,
        "satd_sha": "99c8a6f1258e5fc8a9d4223b0203a0a76611bc78",
        "satd_text": " [END howto_operator_gcp_natural_language_document_gcs]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/howto/operator/gcp/natural_language.rst",
        "lines": [
            59
        ],
        "matched_text": "    :end-before: [END howto_operator_gcp_natural_language_document_gcs]"
    },
    {
        "satd_id": 21663378,
        "satd_repo": 33884891,
        "satd_sha": "99c8a6f1258e5fc8a9d4223b0203a0a76611bc78",
        "satd_text": " [START howto_operator_gcp_natural_language_document_gcs]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/example_dags/example_gcp_natural_language.py",
        "lines": [
            49
        ],
        "matched_text": "# [START howto_operator_gcp_natural_language_document_gcs]"
    },
    {
        "satd_id": 21663378,
        "satd_repo": 33884891,
        "satd_sha": "99c8a6f1258e5fc8a9d4223b0203a0a76611bc78",
        "satd_text": " [START howto_operator_gcp_natural_language_document_gcs]",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/howto/operator/gcp/natural_language.rst",
        "lines": [
            58
        ],
        "matched_text": "    :start-after: [START howto_operator_gcp_natural_language_document_gcs]"
    },
    {
        "satd_id": 21663418,
        "satd_repo": 33884891,
        "satd_sha": "dbed51e702bf8177800183d2c4f595073aa2339d",
        "satd_text": " The form needs to be a part of the document in order for us to be able\n to submit it.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/www/static/js/base.js",
        "lines": [
            66,
            67
        ],
        "matched_text": "  // The form needs to be a part of the document in order for us to be able"
    },
    {
        "satd_id": 21663471,
        "satd_repo": 33884891,
        "satd_sha": "8ca3541f63d9170012b1d3fa7cedfb7736538164",
        "satd_text": " TODO: we will need to terminate running task instances and set the\n state to failed.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            2524,
            2525
        ],
        "matched_text": "            # TODO: we will need to terminate running task instances and set the"
    },
    {
        "satd_id": 21663653,
        "satd_repo": 33884891,
        "satd_sha": "e27950a75ce287c094e550fba07d1c8de5dc4143",
        "satd_text": " Relative path to output the AutoAPI files into. This can also be used to place the generated documentation\n anywhere in your documentation hierarchy.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            425,
            426
        ],
        "matched_text": "# Relative path to output the AutoAPI files into. This can also be used to place the generated documentation"
    },
    {
        "satd_id": 21663829,
        "satd_repo": 33884891,
        "satd_sha": "4c6a591a90dca178557a2c63ffae4e4703d9eec7",
        "satd_text": " 100 MB",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_gcp_transfer_operator_system_helper.py",
        "lines": [
            45
        ],
        "matched_text": "# 100 MB"
    },
    {
        "satd_id": 21664109,
        "satd_repo": 33884891,
        "satd_sha": "68c66a1f8ae2398bbf9999c8b9556fbf72b7becb",
        "satd_text": " Make sure the env var option is removed, otherwise it\n would be read and used instead of the value we set",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            189,
            190
        ],
        "matched_text": "                    # Make sure the env var option is removed, otherwise it"
    },
    {
        "satd_id": 21664128,
        "satd_repo": 33884891,
        "satd_sha": "ad02179c28f1f93cbf55789b9ca8f3b9eeafeff7",
        "satd_text": " FIXME: items needed for this view should move to the database",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            429
        ],
        "matched_text": "        # FIXME: items needed for this view should move to the database"
    },
    {
        "satd_id": 21664246,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " if the subclass has a method buildjs this method will be\n called instead of the method defined here\n when this subclass method is entered it does call\n the method buildjschart defined here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/NVD3Chart.py",
        "lines": [
            357,
            358,
            359,
            360
        ],
        "matched_text": "        # if the subclass has a method buildjs this method will be"
    },
    {
        "satd_id": 21664246,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " if the subclass has a method buildjs this method will be\n called instead of the method defined here\n when this subclass method is entered it does call\n the method buildjschart defined here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/NVD3Chart.py",
        "lines": [
            481,
            482,
            483,
            484
        ],
        "matched_text": "        # if the subclass has a method buildjs this method will be"
    },
    {
        "satd_id": 21664260,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " The following two methods for loading the script file are redundant.\n This is intentional.\n Ipython's loading of javscript in version 1.x is a bit squirrely, especially\n when creating demos to view in nbviewer.\n by trying twice, in two different ways (one using jquery and one using plain old\n HTML), we maximize our chances of successfully loading the script.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/ipynb.py",
        "lines": [
            72,
            73,
            74,
            75,
            76,
            77
        ],
        "matched_text": "        # The following two methods for loading the script file are redundant."
    },
    {
        "satd_id": 21664273,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " TODO: Add indents to function str",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/translator.py",
        "lines": [
            70
        ],
        "matched_text": "    # TODO: Add indents to function str"
    },
    {
        "satd_id": 21664276,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " cleanup numbers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/slugify/slugify.py",
        "lines": [
            143
        ],
        "matched_text": "    # cleanup numbers"
    },
    {
        "satd_id": 21664284,
        "satd_repo": 33884891,
        "satd_sha": "281e1ace94e07118b4b3f7c7ec15dafe616ec40f",
        "satd_text": " remove redundant",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/slugify/slugify.py",
        "lines": [
            153
        ],
        "matched_text": "    # remove redundant"
    },
    {
        "satd_id": 21664315,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " if the subclass has a method buildjs this method will be\n called instead of the method defined here\n when this subclass method is entered it does call\n the method buildjschart defined here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/NVD3Chart.py",
        "lines": [
            356,
            357,
            358,
            359
        ],
        "matched_text": "        # if the subclass has a method buildjs this method will be"
    },
    {
        "satd_id": 21664315,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " if the subclass has a method buildjs this method will be\n called instead of the method defined here\n when this subclass method is entered it does call\n the method buildjschart defined here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/NVD3Chart.py",
        "lines": [
            480,
            481,
            482,
            483
        ],
        "matched_text": "        # if the subclass has a method buildjs this method will be"
    },
    {
        "satd_id": 21664329,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " The following two methods for loading the script file are redundant.\n This is intentional.\n Ipython's loading of javscript in version 1.x is a bit squirrely, especially\n when creating demos to view in nbviewer.\n by trying twice, in two different ways (one using jquery and one using plain old\n HTML), we maximize our chances of successfully loading the script.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/ipynb.py",
        "lines": [
            72,
            73,
            74,
            75,
            76,
            77
        ],
        "matched_text": "        # The following two methods for loading the script file are redundant."
    },
    {
        "satd_id": 21664342,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " TODO: Add indents to function str",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/nvd3/translator.py",
        "lines": [
            70
        ],
        "matched_text": "    # TODO: Add indents to function str"
    },
    {
        "satd_id": 21664345,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " cleanup numbers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/slugify/slugify.py",
        "lines": [
            146
        ],
        "matched_text": "    # cleanup numbers"
    },
    {
        "satd_id": 21664353,
        "satd_repo": 33884891,
        "satd_sha": "e36bdef0b34c16def20ecbb8248950070eb5fa33",
        "satd_text": " remove redundant",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/_vendor/slugify/slugify.py",
        "lines": [
            156
        ],
        "matched_text": "    # remove redundant"
    },
    {
        "satd_id": 21664463,
        "satd_repo": 33884891,
        "satd_sha": "067a1e3f4aa153195674950fee72bdd23652e61d",
        "satd_text": " duplicated conditional logic because of expensive operation",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/docker_operator.py",
        "lines": [
            238
        ],
        "matched_text": "            # duplicated conditional logic because of expensive operation"
    },
    {
        "satd_id": 21664505,
        "satd_repo": 33884891,
        "satd_sha": "0d64fd8aac7b93f4143d8f1d3baa4a0e239aba55",
        "satd_text": " UNSET to avoid logging a warning about missing values",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            294
        ],
        "matched_text": "            # UNSET to avoid logging a warning about missing values"
    },
    {
        "satd_id": 21664523,
        "satd_repo": 33884891,
        "satd_sha": "ac25322da22f7c59cbe0d65f4b737c1decc10872",
        "satd_text": " Allow users of this fake to set pool_filled in the constructor to make this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            29
        ],
        "matched_text": "        # Allow users of this fake to set pool_filled in the constructor to make this"
    },
    {
        "satd_id": 21664584,
        "satd_repo": 33884891,
        "satd_sha": "c030729dcbe35a2a4869e46b57a761c8376ede8d",
        "satd_text": " Centering the DAG on load (Not implemented yet)\n https://github.com/dagrejs/dagre-d3/issues/245",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/templates/airflow/graph.html",
        "lines": [
            156,
            157
        ],
        "matched_text": "    // Centering the DAG on load (Not implemented yet)"
    },
    {
        "satd_id": 21664584,
        "satd_repo": 33884891,
        "satd_sha": "c030729dcbe35a2a4869e46b57a761c8376ede8d",
        "satd_text": " Centering the DAG on load (Not implemented yet)\n https://github.com/dagrejs/dagre-d3/issues/245",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/templates/airflow/graph.html",
        "lines": [
            156,
            157
        ],
        "matched_text": "    // Centering the DAG on load (Not implemented yet)"
    },
    {
        "satd_id": 21664585,
        "satd_repo": 33884891,
        "satd_sha": "c030729dcbe35a2a4869e46b57a761c8376ede8d",
        "satd_text": " This moves the matched node in the center of the graph area\n ToDo: Should we keep this here as it has no added value\n and does not fit the graph on small screens, and has to scroll",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/graph.html",
        "lines": [
            274,
            275,
            276
        ],
        "matched_text": "        // This moves the matched node in the center of the graph area"
    },
    {
        "satd_id": 21664585,
        "satd_repo": 33884891,
        "satd_sha": "c030729dcbe35a2a4869e46b57a761c8376ede8d",
        "satd_text": " This moves the matched node in the center of the graph area\n ToDo: Should we keep this here as it has no added value\n and does not fit the graph on small screens, and has to scroll",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/airflow/graph.html",
        "lines": [
            274,
            275,
            276
        ],
        "matched_text": "        // This moves the matched node in the center of the graph area"
    },
    {
        "satd_id": 21664708,
        "satd_repo": 33884891,
        "satd_sha": "238b725e2cf73e2cca477c8993fccb8047d850e7",
        "satd_text": " Delete instances just in case the test failed and did not cleanup after itself",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_gcp_sql_operator_system.py",
        "lines": [
            43
        ],
        "matched_text": "        # Delete instances just in case the test failed and did not cleanup after itself"
    },
    {
        "satd_id": 21665327,
        "satd_repo": 33884891,
        "satd_sha": "3bfc304ce40aafb055a89ec60296945266124ee2",
        "satd_text": " There is very, very slim chance that the socket will\n be taken over here by another bind(0).\n It's quite unlikely to happen though!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_sql_operator.py",
        "lines": [
            718,
            719,
            720
        ],
        "matched_text": "                        # There is very, very slim chance that the socket will"
    },
    {
        "satd_id": 21665388,
        "satd_repo": 33884891,
        "satd_sha": "53e707428826d603f43aebb73e18fe077881c4b3",
        "satd_text": " TODO: Is this method still needed after AIRFLOW-3561?",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/views.py",
        "lines": [
            1875
        ],
        "matched_text": "        # TODO: Is this method still needed after AIRFLOW-3561?"
    },
    {
        "satd_id": 21665388,
        "satd_repo": 33884891,
        "satd_sha": "53e707428826d603f43aebb73e18fe077881c4b3",
        "satd_text": " TODO: Is this method still needed after AIRFLOW-3561?",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/views.py",
        "lines": [
            1892
        ],
        "matched_text": "        # TODO: Is this method still needed after AIRFLOW-3561?"
    },
    {
        "satd_id": 21665466,
        "satd_repo": 33884891,
        "satd_sha": "9a80ab04f5c257c849e15aa09562b413e7efc621",
        "satd_text": " Set up an environment to test with",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/contrib/hooks/test_azure_cosmos_hook.py",
        "lines": [
            47
        ],
        "matched_text": "    # Set up an environment to test with"
    },
    {
        "satd_id": 21665466,
        "satd_repo": 33884891,
        "satd_sha": "9a80ab04f5c257c849e15aa09562b413e7efc621",
        "satd_text": " Set up an environment to test with",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/contrib/operators/test_azure_cosmos_insertdocument_operator.py",
        "lines": [
            44
        ],
        "matched_text": "    # Set up an environment to test with"
    },
    {
        "satd_id": 21665469,
        "satd_repo": 33884891,
        "satd_sha": "9a80ab04f5c257c849e15aa09562b413e7efc621",
        "satd_text": " Set up an environment to test with",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/contrib/hooks/test_azure_cosmos_hook.py",
        "lines": [
            47
        ],
        "matched_text": "    # Set up an environment to test with"
    },
    {
        "satd_id": 21665469,
        "satd_repo": 33884891,
        "satd_sha": "9a80ab04f5c257c849e15aa09562b413e7efc621",
        "satd_text": " Set up an environment to test with",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/contrib/operators/test_azure_cosmos_insertdocument_operator.py",
        "lines": [
            44
        ],
        "matched_text": "    # Set up an environment to test with"
    },
    {
        "satd_id": 21665483,
        "satd_repo": 33884891,
        "satd_sha": "ded25e16c1fb912019d3d0e5d47d020dccaa54b7",
        "satd_text": " Since we are reloading logging config not creating this file,\n we should expect it to be nonexistent.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_dag_processing.py",
        "lines": [
            263,
            264
        ],
        "matched_text": "            # Since we are reloading logging config not creating this file,"
    },
    {
        "satd_id": 21665484,
        "satd_repo": 33884891,
        "satd_sha": "ded25e16c1fb912019d3d0e5d47d020dccaa54b7",
        "satd_text": " Starting dag processing with 0 max_runs to avoid redundant operations.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_dag_processing.py",
        "lines": [
            243
        ],
        "matched_text": "            # Starting dag processing with 0 max_runs to avoid redundant operations."
    },
    {
        "satd_id": 21665484,
        "satd_repo": 33884891,
        "satd_sha": "ded25e16c1fb912019d3d0e5d47d020dccaa54b7",
        "satd_text": " Starting dag processing with 0 max_runs to avoid redundant operations.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/utils/test_dag_processing.py",
        "lines": [
            308
        ],
        "matched_text": "        # Starting dag processing with 0 max_runs to avoid redundant operations."
    },
    {
        "satd_id": 21665575,
        "satd_repo": 33884891,
        "satd_sha": "d7e80d60f971bdf26cebada321368a17d3da91e9",
        "satd_text": " There is very, very slim chance that the socket will be taken over\n here by another bind(0). It's quite unlikely to happen though!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_sql_operator.py",
        "lines": [
            584,
            585
        ],
        "matched_text": "            # There is very, very slim chance that the socket will be taken over"
    },
    {
        "satd_id": 21665576,
        "satd_repo": 33884891,
        "satd_sha": "d7e80d60f971bdf26cebada321368a17d3da91e9",
        "satd_text": " Make sure that all the cleanups happen, no matter if there are some\n exceptions thrown",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_sql_operator.py",
        "lines": [
            593,
            594
        ],
        "matched_text": "        # Make sure that all the cleanups happen, no matter if there are some"
    },
    {
        "satd_id": 21666034,
        "satd_repo": 33884891,
        "satd_sha": "39a9365b6250e588363e59dd6e332e02a28f411d",
        "satd_text": " clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/models.py",
        "lines": [
            1715
        ],
        "matched_text": "        # clean up"
    },
    {
        "satd_id": 21666041,
        "satd_repo": 33884891,
        "satd_sha": "4c62c75b851fb38bf257a66db2f43747d581a89b",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_s3_to_sftp_operator.py",
        "lines": [
            112
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666041,
        "satd_repo": 33884891,
        "satd_sha": "4c62c75b851fb38bf257a66db2f43747d581a89b",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_sftp_to_s3_operator.py",
        "lines": [
            134
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666051,
        "satd_repo": 33884891,
        "satd_sha": "4c62c75b851fb38bf257a66db2f43747d581a89b",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_s3_to_sftp_operator.py",
        "lines": [
            112
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666051,
        "satd_repo": 33884891,
        "satd_sha": "4c62c75b851fb38bf257a66db2f43747d581a89b",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_sftp_to_s3_operator.py",
        "lines": [
            134
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666057,
        "satd_repo": 33884891,
        "satd_sha": "2d5b8a57a37d2b05514e452f744ead348fa5f369",
        "satd_text": " TODO: Formally inherit from io.IOBase",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/utils/log/logging_mixin.py",
        "lines": [
            71
        ],
        "matched_text": "# TODO: Formally inherit from io.IOBase"
    },
    {
        "satd_id": 21666058,
        "satd_repo": 33884891,
        "satd_sha": "74c613bf473717f5665f89db3ddcaafb362a4392",
        "satd_text": " Annoying workaround for nonlocal not existing in python 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            487
        ],
        "matched_text": "        # Annoying workaround for nonlocal not existing in python 2"
    },
    {
        "satd_id": 21666061,
        "satd_repo": 33884891,
        "satd_sha": "35358366b4e0eb22b13decc3c5f1e38fa757e047",
        "satd_text": " Clean up gzip file",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/gcs_hook.py",
        "lines": [
            212
        ],
        "matched_text": "            # Clean up gzip file"
    },
    {
        "satd_id": 21666080,
        "satd_repo": 33884891,
        "satd_sha": "a0489d09fe4b0d3a2e0893c9cfba0e379e79390b",
        "satd_text": " For backward compatibility\n TODO: remove in Airflow 2.1",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/sftp_hook.py",
        "lines": [
            59,
            60
        ],
        "matched_text": "                # For backward compatibility"
    },
    {
        "satd_id": 21666142,
        "satd_repo": 33884891,
        "satd_sha": "8595530865506f09c4d3952c106d0ddc610398c5",
        "satd_text": " Note, according to documentation always either response or error is\n set when \"done\" == True",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/hooks/gcp_function_hook.py",
        "lines": [
            190,
            191
        ],
        "matched_text": "                # Note, according to documentation always either response or error is"
    },
    {
        "satd_id": 21666146,
        "satd_repo": 33884891,
        "satd_sha": "8595530865506f09c4d3952c106d0ddc610398c5",
        "satd_text": " TODO: make better description, add some examples\n TODO: move to contrib/utils folder when we reuse it.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_function_operator.py",
        "lines": [
            55,
            56
        ],
        "matched_text": "# TODO: make better description, add some examples"
    },
    {
        "satd_id": 21666147,
        "satd_repo": 33884891,
        "satd_sha": "8595530865506f09c4d3952c106d0ddc610398c5",
        "satd_text": " TODO End of field validator to be extracted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_function_operator.py",
        "lines": [
            283
        ],
        "matched_text": "# TODO End of field validator to be extracted"
    },
    {
        "satd_id": 21666154,
        "satd_repo": 33884891,
        "satd_sha": "8595530865506f09c4d3952c106d0ddc610398c5",
        "satd_text": " TODO: This whole section should be extracted later to contrib/tools/field_validator.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/gcp_function_operator.py",
        "lines": [
            29
        ],
        "matched_text": "# TODO: This whole section should be extracted later to contrib/tools/field_validator.py"
    },
    {
        "satd_id": 21666347,
        "satd_repo": 33884891,
        "satd_sha": "8b965ec393d11d0cb9f4c02a9f50b97277df5fc0",
        "satd_text": " TODO: Change python2 to python when Beam supports both python 2 and 3\n Remember to change the test case too",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/gcp_dataflow_hook.py",
        "lines": [
            238,
            239
        ],
        "matched_text": "        # TODO: Change python2 to python when Beam supports both python 2 and 3"
    },
    {
        "satd_id": 21666351,
        "satd_repo": 33884891,
        "satd_sha": "9b82fcb5fb3ff0d54c310ac74b471b279a49a84e",
        "satd_text": " Celery doesn't support querying the state of multiple tasks in parallel\n (which can become a bottleneck on bigger clusters) so we use\n a multiprocessing pool to speed this up.\n How many worker processes are created for checking celery task state.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/celery_executor.py",
        "lines": [
            121,
            122,
            123,
            124
        ],
        "matched_text": "        # Celery doesn't support querying the state of multiple tasks in parallel"
    },
    {
        "satd_id": 21666364,
        "satd_repo": 33884891,
        "satd_sha": "ee17a033e0285aee6550b7f768a2f3302cf36a65",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_s3_copy_object_operator.py",
        "lines": [
            61
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666364,
        "satd_repo": 33884891,
        "satd_sha": "ee17a033e0285aee6550b7f768a2f3302cf36a65",
        "satd_text": " the object found should be consistent with dest_key specified earlier",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/operators/test_s3_copy_object_operator.py",
        "lines": [
            88
        ],
        "matched_text": "        # the object found should be consistent with dest_key specified earlier"
    },
    {
        "satd_id": 21666401,
        "satd_repo": 33884891,
        "satd_sha": "ede67299c4b2b64fc0a72a25838ba29682463d81",
        "satd_text": " use Airflow 2.0-style imports",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "run_unit_tests.sh",
        "lines": [
            30
        ],
        "matched_text": "# use Airflow 2.0-style imports"
    },
    {
        "satd_id": 21666401,
        "satd_repo": 33884891,
        "satd_sha": "ede67299c4b2b64fc0a72a25838ba29682463d81",
        "satd_text": " use Airflow 2.0-style imports",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/5-run-tests.sh",
        "lines": [
            51
        ],
        "matched_text": "# use Airflow 2.0-style imports"
    },
    {
        "satd_id": 21666423,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/__init__.py",
        "lines": [
            35
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666423,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/github_enterprise_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666423,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/google_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666423,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/utils/dates.py",
        "lines": [
            27
        ],
        "matched_text": "from dateutil.relativedelta import relativedelta  # flake8: noqa: F401 for doctest"
    },
    {
        "satd_id": 21666424,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/__init__.py",
        "lines": [
            35
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666424,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/github_enterprise_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666424,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/google_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666424,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/utils/dates.py",
        "lines": [
            27
        ],
        "matched_text": "from dateutil.relativedelta import relativedelta  # flake8: noqa: F401 for doctest"
    },
    {
        "satd_id": 21666425,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/__init__.py",
        "lines": [
            35
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666425,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/github_enterprise_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666425,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/auth/backends/google_auth.py",
        "lines": [
            22
        ],
        "matched_text": "# flake8: noqa: F401"
    },
    {
        "satd_id": 21666425,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F401",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/utils/dates.py",
        "lines": [
            27
        ],
        "matched_text": "from dateutil.relativedelta import relativedelta  # flake8: noqa: F401 for doctest"
    },
    {
        "satd_id": 21666427,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/operators/mlengine_prediction_summary.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa: F841"
    },
    {
        "satd_id": 21666427,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www/app.py",
        "lines": [
            66
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666427,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www_rbac/app.py",
        "lines": [
            61
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666430,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F811",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/utils/decorators.py",
        "lines": [
            103
        ],
        "matched_text": "    # flake8: noqa: F811"
    },
    {
        "satd_id": 21666432,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/operators/mlengine_prediction_summary.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa: F841"
    },
    {
        "satd_id": 21666432,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www/app.py",
        "lines": [
            66
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666432,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www_rbac/app.py",
        "lines": [
            61
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666433,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: E402",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www/utils.py",
        "lines": [
            20
        ],
        "matched_text": "# flake8: noqa: E402"
    },
    {
        "satd_id": 21666435,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/contrib/operators/mlengine_prediction_summary.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa: F841"
    },
    {
        "satd_id": 21666435,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www/app.py",
        "lines": [
            66
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666435,
        "satd_repo": 33884891,
        "satd_sha": "d494d5a65633ce82ad8b66cbf56c383bb86d7cf9",
        "satd_text": " flake8: noqa: F841",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/www_rbac/app.py",
        "lines": [
            61
        ],
        "matched_text": "    # flake8: noqa: F841"
    },
    {
        "satd_id": 21666491,
        "satd_repo": 33884891,
        "satd_sha": "546f1cdb5208ba8e1cf3bde36bbdbb639fa20b22",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/27c6a30d7c24_add_executor_config_to_task_instance.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21666491,
        "satd_repo": 33884891,
        "satd_sha": "546f1cdb5208ba8e1cf3bde36bbdbb639fa20b22",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/33ae817a1ff4_add_kubernetes_resource_checkpointing.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21666491,
        "satd_repo": 33884891,
        "satd_sha": "546f1cdb5208ba8e1cf3bde36bbdbb639fa20b22",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/86770d1215c0_add_kubernetes_scheduler_uniqueness.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21666491,
        "satd_repo": 33884891,
        "satd_sha": "546f1cdb5208ba8e1cf3bde36bbdbb639fa20b22",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/cc1e65623dc7_add_max_tries_column_to_task_instance.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21666503,
        "satd_repo": 33884891,
        "satd_sha": "0be002eebb182b607109a0390d7f6fb8795c668b",
        "satd_text": " We need an exception class to be able to use it in ``except`` elsewhere\n in the code base",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/kubernetes/kube_client.py",
        "lines": [
            25,
            26
        ],
        "matched_text": "    # We need an exception class to be able to use it in ``except`` elsewhere"
    },
    {
        "satd_id": 21666525,
        "satd_repo": 33884891,
        "satd_sha": "c2927ac38840597c4817a63e744baa60306ff52f",
        "satd_text": " MomentJS loads all the locale, making it a huge JS file.\n This will ignore the locales from momentJS",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/webpack.config.js",
        "lines": [
            107,
            108
        ],
        "matched_text": "    // MomentJS loads all the locale, making it a huge JS file."
    },
    {
        "satd_id": 21666625,
        "satd_repo": 33884891,
        "satd_sha": "c3f4af59986f06ce2f62e41d58e80fa7a85058d0",
        "satd_text": " Centering the DAG on load (Not implemented yet)\n https://github.com/dagrejs/dagre-d3/issues/245",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/templates/airflow/graph.html",
        "lines": [
            151,
            152
        ],
        "matched_text": "    // Centering the DAG on load (Not implemented yet)"
    },
    {
        "satd_id": 21666626,
        "satd_repo": 33884891,
        "satd_sha": "c3f4af59986f06ce2f62e41d58e80fa7a85058d0",
        "satd_text": " This moves the matched node in the center of the graph area\n ToDo: Should we keep this here as it has no added value\n and does not fit the graph on small screens, and has to scroll",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/airflow/graph.html",
        "lines": [
            270,
            271,
            272
        ],
        "matched_text": "        // This moves the matched node in the center of the graph area"
    },
    {
        "satd_id": 21666633,
        "satd_repo": 33884891,
        "satd_sha": "1656209cbe31da9f4bd10b6eead8d9f65198c04b",
        "satd_text": "   Test whether the job_name is present in the Error msg",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/contrib/hooks/test_gcp_dataflow_hook.py",
        "lines": [
            202
        ],
        "matched_text": "        #   Test whether the job_name is present in the Error msg"
    },
    {
        "satd_id": 21666634,
        "satd_repo": 33884891,
        "satd_sha": "03ac60dd67388951f033f4e64bbe55d62cd6257f",
        "satd_text": " TODO Add docs around dataproc_job_id.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/operators/dataproc_operator.py",
        "lines": [
            1108
        ],
        "matched_text": "    # TODO Add docs around dataproc_job_id."
    },
    {
        "satd_id": 21666651,
        "satd_repo": 33884891,
        "satd_sha": "5a7f0b2e5333c936b39cdec06315d109ccf96934",
        "satd_text": " Since we have all the dependencies separated from hard-coded JS within HTML,\n this seems like an efficient solution for now. Will update that once\n we'll have the dependencies imported within the custom JS",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/webpack.config.js",
        "lines": [
            111,
            112,
            113
        ],
        "matched_text": "    // Since we have all the dependencies separated from hard-coded JS within HTML,"
    },
    {
        "satd_id": 21666652,
        "satd_repo": 33884891,
        "satd_sha": "5a7f0b2e5333c936b39cdec06315d109ccf96934",
        "satd_text": " below variables are used in clock.js",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/appbuilder/baselayout.html",
        "lines": [
            64
        ],
        "matched_text": "  // below variables are used in clock.js"
    },
    {
        "satd_id": 21666664,
        "satd_repo": 33884891,
        "satd_sha": "f3f2eb323f29d2210877ce9699e2dd0bdd8b5259",
        "satd_text": " todo(tao) comment on the query",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/www_rbac/security.py",
        "lines": [
            378
        ],
        "matched_text": "        # todo(tao) comment on the query"
    },
    {
        "satd_id": 21666665,
        "satd_repo": 33884891,
        "satd_sha": "f3f2eb323f29d2210877ce9699e2dd0bdd8b5259",
        "satd_text": " todo(Tao): should we put this function here or in scheduler loop?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/security.py",
        "lines": [
            337
        ],
        "matched_text": "        # todo(Tao): should we put this function here or in scheduler loop?"
    },
    {
        "satd_id": 21666672,
        "satd_repo": 33884891,
        "satd_sha": "f3f2eb323f29d2210877ce9699e2dd0bdd8b5259",
        "satd_text": " todo(tao) need to remove all_dag vm",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/security.py",
        "lines": [
            372
        ],
        "matched_text": "        # todo(tao) need to remove all_dag vm"
    },
    {
        "satd_id": 21666676,
        "satd_repo": 33884891,
        "satd_sha": "f3f2eb323f29d2210877ce9699e2dd0bdd8b5259",
        "satd_text": " from test_security unit test",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/utils/test_db.py",
        "lines": [
            79
        ],
        "matched_text": "            # from test_security unit test"
    },
    {
        "satd_id": 21666860,
        "satd_repo": 33884891,
        "satd_sha": "bb0d9ee194b06575032b3fd589c326a254f4a9cb",
        "satd_text": " ToDo: Shouldn't this be a PUT method?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/api/experimental/endpoints.py",
        "lines": [
            141
        ],
        "matched_text": "# ToDo: Shouldn't this be a PUT method?"
    },
    {
        "satd_id": 21666920,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " TODO: make those constants configurable.\n Time interval to wait before next log fetching. Default 2s.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            46,
            47
        ],
        "matched_text": "    // TODO: make those constants configurable."
    },
    {
        "satd_id": 21666920,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " TODO: make those constants configurable.\n Time interval to wait before next log fetching. Default 2s.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/airflow/ti_log.html",
        "lines": [
            46,
            47
        ],
        "matched_text": "    // TODO: make those constants configurable."
    },
    {
        "satd_id": 21666925,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " Lazily load all past task instance logs.\n TODO: We only need to have recursive queries for\n latest running task instances. Currently it does not\n work well with ElasticSearch because ES query only\n returns at most 10k documents. We want the ability\n to display all logs in the front-end.\n An optimization here is to render from latest attempt.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            126,
            127,
            128,
            129,
            130,
            131,
            132
        ],
        "matched_text": "      // Lazily load all past task instance logs."
    },
    {
        "satd_id": 21666925,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " Lazily load all past task instance logs.\n TODO: We only need to have recursive queries for\n latest running task instances. Currently it does not\n work well with ElasticSearch because ES query only\n returns at most 10k documents. We want the ability\n to display all logs in the front-end.\n An optimization here is to render from latest attempt.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/airflow/ti_log.html",
        "lines": [
            126,
            127,
            128,
            129,
            130,
            131,
            132
        ],
        "matched_text": "      // Lazily load all past task instance logs."
    },
    {
        "satd_id": 21666929,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " Animation speed for auto tailing log display.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            51
        ],
        "matched_text": "    // Animation speed for auto tailing log display."
    },
    {
        "satd_id": 21666929,
        "satd_repo": 33884891,
        "satd_sha": "7c34354427f8c047b2cfb3f472a38bc50fe91d45",
        "satd_text": " Animation speed for auto tailing log display.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/templates/airflow/ti_log.html",
        "lines": [
            51
        ],
        "matched_text": "    // Animation speed for auto tailing log display."
    },
    {
        "satd_id": 21666979,
        "satd_repo": 33884891,
        "satd_sha": "1f0a717b65e0ea7e0127708b084baff0697f0946",
        "satd_text": " models.User = User  # hack!\n del User",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/default_login.py",
        "lines": [
            67,
            68
        ],
        "matched_text": "# models.User = User  # hack!"
    },
    {
        "satd_id": 21667070,
        "satd_repo": 33884891,
        "satd_sha": "06b62c42b0b55ea55b86b130317594738d2f36a2",
        "satd_text": "\n\n Manual hack.\n Reference:\n https://github.com/uber/vertica-python/blob/master/vertica_python/vertica/column.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/vertica_to_hive.py",
        "lines": [
            95,
            96,
            97,
            98,
            99
        ],
        "matched_text": "    def type_map(cls, vertica_type):"
    },
    {
        "satd_id": 21667150,
        "satd_repo": 33884891,
        "satd_sha": "648e1e69308029102e5251815331c701eb614403",
        "satd_text": " todo we can derive this from the spec",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/lineage/datasets.py",
        "lines": [
            138
        ],
        "matched_text": "    # todo we can derive this from the spec"
    },
    {
        "satd_id": 21667175,
        "satd_repo": 33884891,
        "satd_sha": "250faad0f557bb8deac8bd0b948112bcaf48004a",
        "satd_text": " The DB server already has a value for wait_timeout (number of seconds after\n which an idle sleeping connection should be killed). Since other DBs may\n co-exist on the same server, SQLAlchemy should set its\n pool_recycle to an equal or smaller value.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            164,
            165,
            166,
            167
        ],
        "matched_text": "        # The DB server already has a value for wait_timeout (number of seconds after"
    },
    {
        "satd_id": 21667202,
        "satd_repo": 33884891,
        "satd_sha": "e5f2a38d6aff69bb4d31c792f7e9234b51646675",
        "satd_text": " TODO make new win rm connection class",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/winrm_hook.py",
        "lines": [
            61
        ],
        "matched_text": "        # TODO make new win rm connection class"
    },
    {
        "satd_id": 21667205,
        "satd_repo": 33884891,
        "satd_sha": "e5f2a38d6aff69bb4d31c792f7e9234b51646675",
        "satd_text": " TODO pass in port from ssh conn",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/contrib/hooks/winrm_hook.py",
        "lines": [
            116
        ],
        "matched_text": "                        # TODO pass in port from ssh conn"
    },
    {
        "satd_id": 21667285,
        "satd_repo": 33884891,
        "satd_sha": "b9a87a07e3b6dbd965c91f09d0f1c10281f628f9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/27c6a30d7c24_add_executor_config_to_task_instance.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21667285,
        "satd_repo": 33884891,
        "satd_sha": "b9a87a07e3b6dbd965c91f09d0f1c10281f628f9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/33ae817a1ff4_add_kubernetes_resource_checkpointing.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21667286,
        "satd_repo": 33884891,
        "satd_sha": "b9a87a07e3b6dbd965c91f09d0f1c10281f628f9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/27c6a30d7c24_add_executor_config_to_task_instance.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21667286,
        "satd_repo": 33884891,
        "satd_sha": "b9a87a07e3b6dbd965c91f09d0f1c10281f628f9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/33ae817a1ff4_add_kubernetes_resource_checkpointing.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21667323,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": " TODO(aoen): ignore_dependencies is a poor choice of name here because it is too\n vague (e.g. a task being in the appropriate state to be run is also a dependency\n but is not ignored by this flag), the name 'ignore_task_dependencies' is\n slightly better (as it ignores all dependencies that are specific to the task),\n so deprecate the old command name and use this instead.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli/cli.py",
        "lines": [
            1547,
            1548,
            1549,
            1550,
            1551
        ],
        "matched_text": "        # TODO(aoen): ignore_dependencies is a poor choice of name here because it is too"
    },
    {
        "satd_id": 21667323,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": " TODO(aoen): ignore_dependencies is a poor choice of name here because it is too\n vague (e.g. a task being in the appropriate state to be run is also a dependency\n but is not ignored by this flag), the name 'ignore_task_dependencies' is\n slightly better (as it ignores all dependencies that are specific to the task),\n so deprecate the old command name and use this instead.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli/cli_factory.py",
        "lines": [
            176,
            177,
            178,
            179,
            180
        ],
        "matched_text": "        # TODO(aoen): ignore_dependencies is a poor choice of name here because it is too"
    },
    {
        "satd_id": 21667331,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": " run\n TODO(aoen): \"force\" is a poor choice of name here since it implies it overrides\n all dependencies (not just past success), e.g. the ignore_depends_on_past\n dependency. This flag should be deprecated and renamed to 'ignore_ti_state' and\n the \"ignore_all_dependencies\" command should be called the\"force\" command\n instead.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli/cli.py",
        "lines": [
            1525,
            1526,
            1527,
            1528,
            1529,
            1530
        ],
        "matched_text": "        # run"
    },
    {
        "satd_id": 21667331,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": " run\n TODO(aoen): \"force\" is a poor choice of name here since it implies it overrides\n all dependencies (not just past success), e.g. the ignore_depends_on_past\n dependency. This flag should be deprecated and renamed to 'ignore_ti_state' and\n the \"ignore_all_dependencies\" command should be called the\"force\" command\n instead.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli/cli_factory.py",
        "lines": [
            159,
            160,
            161,
            162,
            163,
            164
        ],
        "matched_text": "        # run"
    },
    {
        "satd_id": 21667348,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": " TODO: Replace the etcd endpoint with your own etcd endpoint",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/example_dags/example_pod_operator.py",
        "lines": [
            28
        ],
        "matched_text": "# TODO: Replace the etcd endpoint with your own etcd endpoint"
    },
    {
        "satd_id": 21667356,
        "satd_repo": 33884891,
        "satd_sha": "c177d6e8632e75db82b21c6633c8648e7428990a",
        "satd_text": "TODO: This should also allow people to point to a cluster.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/kubernetes/pod_launcher.py",
        "lines": [
            46
        ],
        "matched_text": "        #TODO: This should also allow people to point to a cluster."
    },
    {
        "satd_id": 21667358,
        "satd_repo": 33884891,
        "satd_sha": "582132088079a6ca89199af4f41944259565287a",
        "satd_text": " TODO this could be a job_counter based on max jobs a user wants",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/executors/kubernetes_executor.py",
        "lines": [
            217
        ],
        "matched_text": "        # TODO this could be a job_counter based on max jobs a user wants"
    },
    {
        "satd_id": 21667359,
        "satd_repo": 33884891,
        "satd_sha": "582132088079a6ca89199af4f41944259565287a",
        "satd_text": " TODO this is just for proof of concept. remove before merging.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/executors/kubernetes_executor.py",
        "lines": [
            31
        ],
        "matched_text": "# TODO this is just for proof of concept. remove before merging."
    },
    {
        "satd_id": 21668012,
        "satd_repo": 33884891,
        "satd_sha": "ec38ba9594395de04ec932481212a86fbe9ae107",
        "satd_text": " TODO: make those constants configurable.\n Time interval to wait before next log fetching. Default 2s.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            47,
            48
        ],
        "matched_text": "    // TODO: make those constants configurable."
    },
    {
        "satd_id": 21668017,
        "satd_repo": 33884891,
        "satd_sha": "ec38ba9594395de04ec932481212a86fbe9ae107",
        "satd_text": " Lazily load all past task instance logs.\n TODO: We only need to have recursive queries for\n latest running task instances. Currently it does not\n work well with ElasticSearch because ES query only\n returns at most 10k documents. We want the ability\n to display all logs in the front-end.\n An optimization here is to render from latest attempt.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            127,
            128,
            129,
            130,
            131,
            132,
            133
        ],
        "matched_text": "      // Lazily load all past task instance logs."
    },
    {
        "satd_id": 21668021,
        "satd_repo": 33884891,
        "satd_sha": "ec38ba9594395de04ec932481212a86fbe9ae107",
        "satd_text": " Animation speed for auto tailing log display.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/ti_log.html",
        "lines": [
            52
        ],
        "matched_text": "    // Animation speed for auto tailing log display."
    },
    {
        "satd_id": 21668027,
        "satd_repo": 33884891,
        "satd_sha": "34f827f04c1c87678e1131bff93026a037dd5f8e",
        "satd_text": " Sync is sequential and the hook already logs too much\n so skip this for now\n self.log.info(\n     'Saving file {0} from S3 bucket {1} in GCS bucket {2}'\n     ' as object {3}'.format(file, self.bucket,\n                             dest_gcs_bucket,\n                             dest_gcs_object))",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/s3_to_gcs_operator.py",
        "lines": [
            161,
            162,
            163,
            164,
            165,
            166,
            167
        ],
        "matched_text": "                    # Sync is sequential and the hook already logs too much"
    },
    {
        "satd_id": 21668043,
        "satd_repo": 33884891,
        "satd_sha": "39b7d7d87cabae9de02ba5d64b998317b494bdd9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/__init__.py",
        "lines": [
            15
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21668043,
        "satd_repo": 33884891,
        "satd_sha": "39b7d7d87cabae9de02ba5d64b998317b494bdd9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/task/__init__.py",
        "lines": [
            15
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21668048,
        "satd_repo": 33884891,
        "satd_sha": "39b7d7d87cabae9de02ba5d64b998317b494bdd9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/__init__.py",
        "lines": [
            15
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21668048,
        "satd_repo": 33884891,
        "satd_sha": "39b7d7d87cabae9de02ba5d64b998317b494bdd9",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/task/__init__.py",
        "lines": [
            15
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21668172,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " The network simplex algorithm repeatedly replaces edges of\n the spanning tree with negative cut values until no such\n edge exists.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            3065,
            3066,
            3067
        ],
        "matched_text": "  // The network simplex algorithm repeatedly replaces edges of"
    },
    {
        "satd_id": 21668185,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: remove this when we add back support for ordering clusters",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            1635
        ],
        "matched_text": "  // TODO: remove this when we add back support for ordering clusters"
    },
    {
        "satd_id": 21668194,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "\n * Expand self loops into three dummy nodes. One will sit above the incident\n * node, one will be at the same level, and one below. The result looks like:\n *\n *         /--<--x--->--\\\n *     node              y\n *         \\--<--z--->--/\n *\n * Dummy nodes x, y, z give us the shape of a loop and node y is where we place\n * the label.\n *\n * TODO: consolidate knowledge of dummy node construction.\n * TODO: support minLen = 2\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            2563,
            2564,
            2565,
            2566,
            2567,
            2568,
            2569,
            2570,
            2571,
            2572,
            2573,
            2574,
            2575,
            2576
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21668203,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO original paper removes self loops, but it is not obvious when this would happen",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            1970
        ],
        "matched_text": "    // TODO original paper removes self loops, but it is not obvious when this would happen"
    },
    {
        "satd_id": 21668230,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO find a better way to get dimensions for foreignObjects...",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            628
        ],
        "matched_text": "      // TODO find a better way to get dimensions for foreignObjects..."
    },
    {
        "satd_id": 21668236,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "\n * Replace edge e with edge f in the tree, recalculating the tree root,\n * the nodes' low and lim properties and the edges' cut values.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            3287,
            3288,
            3289,
            3290
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21668257,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Replace unit increment/decrement with edge weights.\n Edges from child to grandchild's subtree.\n Edges to child from grandchild's subtree.\n Edges from child to nodes outside of child's subtree.\n Edges from nodes outside of child's subtree to child.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            3151,
            3152,
            3153,
            3154,
            3155
        ],
        "matched_text": "  // TODO: Replace unit increment/decrement with edge weights."
    },
    {
        "satd_id": 21668295,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " At the moment all modern browsers, that support strict mode, have\n native implementation of Array.prototype.reduce. For instance, IE8\n does not support strict mode, so this check is actually useless.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            1211,
            1212,
            1213
        ],
        "matched_text": "      // At the moment all modern browsers, that support strict mode, have"
    },
    {
        "satd_id": 21668343,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "\n * This function takes a compound layered graph, g, and produces an array of\n * layer graphs. Each entry in the array represents a subgraph of nodes\n * relevant for performing crossing reduction on that layer.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            1792,
            1793,
            1794,
            1795,
            1796
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21668385,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: use bpodgursky's shortening algorithm here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/dagre-d3.js",
        "lines": [
            423
        ],
        "matched_text": "  // TODO: use bpodgursky's shortening algorithm here"
    },
    {
        "satd_id": 21668416,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider deprecating and using multibar with single series for this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3763
        ],
        "matched_text": "//TODO: consider deprecating and using multibar with single series for this"
    },
    {
        "satd_id": 21668418,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            12893
        ],
        "matched_text": "      // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)"
    },
    {
        "satd_id": 21668422,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: check why I did the ternary here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4621
        ],
        "matched_text": "            .style('padding-left', function(d) { return (index ? 0 : d.depth * childIndent + 12 + (icon(d) ? 0 : 16)) + 'px' }, 'important') //TODO: check why I did the ternary here"
    },
    {
        "satd_id": 21668430,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: need to allow forceX and forceY, and xDomain, yDomain",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1912
        ],
        "matched_text": "          .domain([0, Math.max(rangez[0], markerz[0], measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain"
    },
    {
        "satd_id": 21668442,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            6847
        ],
        "matched_text": "  // Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below"
    },
    {
        "satd_id": 21668448,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9684,
            9685
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21668448,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9700,
            9701
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21668448,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            14088,
            14089
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21668451,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4950
        ],
        "matched_text": "      //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)"
    },
    {
        "satd_id": 21668453,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4677
        ],
        "matched_text": "            row: this, //TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)"
    },
    {
        "satd_id": 21668456,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1506
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21668456,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1942
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21668460,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider removing this and replacing with a '+' or '-' unless user defines images",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4530
        ],
        "matched_text": "    , iconOpen = 'images/grey-plus.png' //TODO: consider removing this and replacing with a '+' or '-' unless user defines images"
    },
    {
        "satd_id": 21668462,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3061
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21668462,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7742
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21668462,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            8688
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21668468,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            11650
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21668468,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            12277
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21668476,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4147
        ],
        "matched_text": "    // New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else"
    },
    {
        "satd_id": 21668480,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            6215,
            6216
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21668480,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7452,
            7453
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21668488,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " NEW ALIGNING CODE, TODO: clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4952
        ],
        "matched_text": "      // NEW ALIGNING CODE, TODO: clean up"
    },
    {
        "satd_id": 21668502,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3031
        ],
        "matched_text": "      //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later"
    },
    {
        "satd_id": 21668503,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: implement, maybe as margin on the containing div",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4519
        ],
        "matched_text": "  var margin = {top: 0, right: 0, bottom: 0, left: 0} //TODO: implement, maybe as margin on the containing div"
    },
    {
        "satd_id": 21668514,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: showMaxMin should be disabled on all ordinal scaled axes",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1026
        ],
        "matched_text": "    , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes"
    },
    {
        "satd_id": 21668519,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": ".style('display', 'table-row'); //TODO: see if this does anything",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4607
        ],
        "matched_text": "          //.style('display', 'table-row'); //TODO: see if this does anything"
    },
    {
        "satd_id": 21668535,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY\n      // Update the range rects.\n      var range = g.selectAll('rect.nv-range')\n          .data(rangez);\n\n      range.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-range nv-s' + i; })\n          .attr('width', w0)\n          .attr('height', availableHeight)\n          .attr('x', reverse ? x0 : 0)\n          .on('mouseover', function(d,i) { \n              dispatch.elementMouseover({\n                value: d,\n                label: (i <= 0) ? 'Maximum' : (i > 1) ? 'Minimum' : 'Mean', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) { \n              dispatch.elementMouseout({\n                value: d,\n                label: (i <= 0) ? 'Minimum' : (i >=1) ? 'Maximum' : 'Mean' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(range)\n          .attr('x', reverse ? x1 : 0)\n          .attr('width', w1)\n          .attr('height', availableHeight);\n\n\n      // Update the measure rects.\n      var measure = g.selectAll('rect.nv-measure')\n          .data(measurez);\n\n      measure.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-measure nv-s' + i; })\n          .style('fill', function(d,i) { return color(d,i ) })\n          .attr('width', w0)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x0 : 0)\n          .attr('y', availableHeight / 3)\n          .on('mouseover', function(d) { \n              dispatch.elementMouseover({\n                value: d,\n                label: 'Current', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d) { \n              dispatch.elementMouseout({\n                value: d,\n                label: 'Current' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(measure)\n          .attr('width', w1)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x1 : 0)\n          .attr('y', availableHeight / 3);\n\n\n\n      // Update the marker lines.\n      var marker = g.selectAll('path.nv-markerTriangle')\n          .data(markerz);\n\n      var h3 =  availableHeight / 6;\n      marker.enter().append('path')\n          .attr('class', 'nv-markerTriangle')\n          .attr('transform', function(d) { return 'translate(' + x0(d) + ',' + (availableHeight / 2) + ')' })\n          .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n          .on('mouseover', function(d,i) {\n              dispatch.elementMouseover({\n                value: d,\n                label: 'Previous',\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) {\n              dispatch.elementMouseout({\n                value: d,\n                label: 'Previous'\n              })\n          });\n\n      d3.transition(marker)\n          .attr('transform', function(d) { return 'translate(' + (x1(d) - x1(0)) + ',' + (availableHeight / 2) + ')' });\n\n      marker.exit().remove();\n",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1619,
            1620,
            1621,
            1622,
            1623,
            1624,
            1625,
            1626,
            1627,
            1628,
            1629,
            1630,
            1631,
            1632,
            1633,
            1634,
            1635,
            1636,
            1637,
            1638,
            1639,
            1640,
            1641,
            1642,
            1643,
            1644,
            1645,
            1646,
            1647,
            1648,
            1649,
            1650,
            1651,
            1652,
            1653,
            1654,
            1655,
            1656,
            1657,
            1658,
            1659,
            1660,
            1661,
            1662,
            1663,
            1664,
            1665,
            1666,
            1667,
            1668,
            1669,
            1670,
            1671,
            1672,
            1673,
            1674,
            1675,
            1676,
            1677,
            1678,
            1679,
            1680,
            1681,
            1682,
            1683,
            1684,
            1685,
            1686,
            1687,
            1688,
            1689,
            1690,
            1691,
            1692,
            1693,
            1694,
            1695,
            1696,
            1697,
            1698,
            1699,
            1700,
            1701,
            1702,
            1703,
            1704,
            1705,
            1706,
            1707,
            1708
        ],
        "matched_text": "/* // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY"
    },
    {
        "satd_id": 21668541,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1735
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21668541,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            2072
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21668542,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider deprecating by adding necessary features to multiBar model",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            2931
        ],
        "matched_text": "//TODO: consider deprecating by adding necessary features to multiBar model"
    },
    {
        "satd_id": 21668545,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: store old scales for transitions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9866
        ],
        "matched_text": "  //TODO: store old scales for transitions"
    },
    {
        "satd_id": 21668550,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: make values customizeable in EVERY model in this fashion",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            13391
        ],
        "matched_text": "               .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion"
    },
    {
        "satd_id": 21668561,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1076
        ],
        "matched_text": "      //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component"
    },
    {
        "satd_id": 21668564,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " *Adding noise to make duplicates very unlikely\n *Injecting series and point index for reference",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            11064,
            11065
        ],
        "matched_text": "                // *Adding noise to make duplicates very unlikely"
    },
    {
        "satd_id": 21668569,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " Find the tooltips, mark them for removal by this class (so others cleanups won't find it)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            841
        ],
        "matched_text": "              // Find the tooltips, mark them for removal by this class (so others cleanups won't find it)"
    },
    {
        "satd_id": 21668571,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: see if this is necessary at all",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4600
        ],
        "matched_text": "      tree.size([height, depth * childIndent]); //TODO: see if this is necessary at all"
    },
    {
        "satd_id": 21668578,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: better width calculations that don't assume always uniform data spacing;w",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3936
        ],
        "matched_text": "           //TODO: better width calculations that don't assume always uniform data spacing;w"
    },
    {
        "satd_id": 21668579,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1183
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.right,width) + 12) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21668579,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1225
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.left,width) + axisLabelDistance) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21668613,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9684,
            9685,
            9686
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21668613,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9700,
            9701,
            9702
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21668617,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4528
        ],
        "matched_text": "    , columns = [{key:'key', label: 'Name', type:'text'}] //TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this"
    },
    {
        "satd_id": 21668630,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "clean-up and prevent duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            2435
        ],
        "matched_text": "      wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3067
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3089
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3101
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            3886
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7748
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7770
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7782
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            8716
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            8728
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668646,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            9987
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21668659,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " Easy way to bind multiple functions to window.onresize\n TODO: give a way to remove a function after its bound, other than removing all of them",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            890,
            891
        ],
        "matched_text": "// Easy way to bind multiple functions to window.onresize"
    },
    {
        "satd_id": 21668662,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            7615,
            7616
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21668662,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            8587,
            8588
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21668669,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " remap and flatten the data for use in calculating the scales' domains\n if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            10975,
            10976
        ],
        "matched_text": "      // remap and flatten the data for use in calculating the scales' domains"
    },
    {
        "satd_id": 21668680,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "temp hack to add noise untill I think of a better way so there are no duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            11074
        ],
        "matched_text": "                        pointIndex, point]; //temp hack to add noise untill I think of a better way so there are no duplicates"
    },
    {
        "satd_id": 21668684,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: stacked must be all positive or all negative, not both?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            8775
        ],
        "matched_text": "              //TODO: stacked must be all positive or all negative, not both?"
    },
    {
        "satd_id": 21668701,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1429
        ],
        "matched_text": "    , orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21668701,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1815
        ],
        "matched_text": "  var orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21668702,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            2908
        ],
        "matched_text": "      //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue"
    },
    {
        "satd_id": 21668703,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            1310
        ],
        "matched_text": "          .filter(function(d) { return !parseFloat(Math.round(d.__data__*100000)/1000000) && (d.__data__ !== undefined) }) //this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique"
    },
    {
        "satd_id": 21668705,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": "TODO: Make consistent with other event objects",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/static/nv.d3.js",
        "lines": [
            4892
        ],
        "matched_text": "            dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects"
    },
    {
        "satd_id": 21668768,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " Compute the flattened node list. TODO use d3.layout.hierarchy.",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www_rbac/templates/airflow/tree.html",
        "lines": [
            164
        ],
        "matched_text": "  // Compute the flattened node list. TODO use d3.layout.hierarchy."
    },
    {
        "satd_id": 21668836,
        "satd_repo": 33884891,
        "satd_sha": "05e1861e24de42f9a2c649cd93041c5c744504e1",
        "satd_text": " Flask appbuilder's info level log is very verbose,\n so it's set to 'WARN' by default.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/airflow_local_settings.py",
        "lines": [
            26,
            27
        ],
        "matched_text": "# Flask appbuilder's info level log is very verbose,"
    },
    {
        "satd_id": 21668839,
        "satd_repo": 33884891,
        "satd_sha": "7e762d42df50d84e4740e15c24594c50aaab53a2",
        "satd_text": " Shorten timeout so that this test doesn't take too long time",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/core.py",
        "lines": [
            1481
        ],
        "matched_text": "        # Shorten timeout so that this test doesn't take too long time"
    },
    {
        "satd_id": 21668841,
        "satd_repo": 33884891,
        "satd_sha": "8c42d03c4e35a0046e46f0e2e6db588702ee7e8b",
        "satd_text": " ti has already been removed, just ignore it",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            4917
        ],
        "matched_text": "                    pass  # ti has already been removed, just ignore it"
    },
    {
        "satd_id": 21668858,
        "satd_repo": 33884891,
        "satd_sha": "c3730650c852cd7a5e06a5933f5064bbb04e0e88",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/models.py",
        "lines": [
            1074,
            1075
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21668858,
        "satd_repo": 33884891,
        "satd_sha": "c3730650c852cd7a5e06a5933f5064bbb04e0e88",
        "satd_text": " Validate correctness\n all dags from testDag should be listed",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/models.py",
        "lines": [
            1166,
            1167
        ],
        "matched_text": "        # Validate correctness"
    },
    {
        "satd_id": 21668887,
        "satd_repo": 33884891,
        "satd_sha": "53b8ddd2a1cf9e4976175fb347f679513cbdeb2c",
        "satd_text": " read log and remove old logs to get just the latest additions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/wasb_task_handler.py",
        "lines": [
            85
        ],
        "matched_text": "            # read log and remove old logs to get just the latest additions"
    },
    {
        "satd_id": 21668906,
        "satd_repo": 33884891,
        "satd_sha": "667a26ce492d944793eb25c72b9f21e41266c7d9",
        "satd_text": " TODO Use get_queue_info instead\n once it will be available in python-jenkins (v > 0.4.15)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/jenkins_job_trigger_operator.py",
        "lines": [
            167,
            168
        ],
        "matched_text": "        # TODO Use get_queue_info instead"
    },
    {
        "satd_id": 21668909,
        "satd_repo": 33884891,
        "satd_sha": "667a26ce492d944793eb25c72b9f21e41266c7d9",
        "satd_text": " python 2.6 compatibility to ensure same exception raised\n since URLError wraps a socket timeout on python 2.6.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/jenkins_job_trigger_operator.py",
        "lines": [
            79,
            80
        ],
        "matched_text": "        # python 2.6 compatibility to ensure same exception raised"
    },
    {
        "satd_id": 21668910,
        "satd_repo": 33884891,
        "satd_sha": "667a26ce492d944793eb25c72b9f21e41266c7d9",
        "satd_text": " Warning if the parameter is too long, the URL can be longer than\n the maximum allowed size",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/jenkins_job_trigger_operator.py",
        "lines": [
            137,
            138
        ],
        "matched_text": "        # Warning if the parameter is too long, the URL can be longer than"
    },
    {
        "satd_id": 21668959,
        "satd_repo": 33884891,
        "satd_sha": "15b8a36b9011166b06f176f684b71703a4aebddd",
        "satd_text": " TODO(aoen): Ideally each individual trigger rules would be its own class, but",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/ti_deps/deps/trigger_rule_dep.py",
        "lines": [
            130
        ],
        "matched_text": "        # TODO(aoen): Ideally each individual trigger rules would be its own class, but"
    },
    {
        "satd_id": 21668974,
        "satd_repo": 33884891,
        "satd_sha": "6f00f722ba4dd8d35c7e172dcba715d5b4b8d216",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n In Airflow this will be moved to the airflow.sensors package.\n Until then this class will provide backward compatibility\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/sensors.py",
        "lines": [
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21668982,
        "satd_repo": 33884891,
        "satd_sha": "a1d5551777739a166da8c770262f90ed47802857",
        "satd_text": " flake8: noqa",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "airflow/migrations/versions/0e2a74e0fc9f_add_time_zone_awareness.py",
        "lines": [
            1
        ],
        "matched_text": "# flake8: noqa"
    },
    {
        "satd_id": 21668992,
        "satd_repo": 33884891,
        "satd_sha": "33c720421208696c9cae422e1056c8e914d3329b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            94,
            95
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21668992,
        "satd_repo": 33884891,
        "satd_sha": "33c720421208696c9cae422e1056c8e914d3329b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/__init__.py",
        "lines": [
            46,
            47
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21669000,
        "satd_repo": 33884891,
        "satd_sha": "33c720421208696c9cae422e1056c8e914d3329b",
        "satd_text": " TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor.\n The problem is the way apply_defaults works isn't compatible with inheritance.\n The inheritance model needs to be reworked in order to support overriding args/\n kwargs with arguments here, then 'conn_id' and 'sql' can be passed into the\n constructor below and apply_defaults will no longer throw an exception.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/sensors.py",
        "lines": [
            157,
            158,
            159,
            160,
            161
        ],
        "matched_text": "        # TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor."
    },
    {
        "satd_id": 21669000,
        "satd_repo": 33884891,
        "satd_sha": "33c720421208696c9cae422e1056c8e914d3329b",
        "satd_text": " TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor.\n The problem is the way apply_defaults works isn't compatible with inheritance.\n The inheritance model needs to be reworked in order to support overriding args/\n kwargs with arguments here, then 'conn_id' and 'sql' can be passed into the\n constructor below and apply_defaults will no longer throw an exception.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/sensors/metastore_partition_sensor.py",
        "lines": [
            56,
            57,
            58,
            59,
            60
        ],
        "matched_text": "        # TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor."
    },
    {
        "satd_id": 21669039,
        "satd_repo": 33884891,
        "satd_sha": "1abe7f6d5413b81569be97e7871a688e114f3c47",
        "satd_text": " TODO: This should also allow people to point to a cluster.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/kubernetes/kube_client.py",
        "lines": [
            30
        ],
        "matched_text": "    # TODO: This should also allow people to point to a cluster."
    },
    {
        "satd_id": 21669094,
        "satd_repo": 33884891,
        "satd_sha": "e9c1ac588a698b88f916d6f47531d7e0dc63237d",
        "satd_text": " we should probably generalized this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/task/task_runner/base_task_runner.py",
        "lines": [
            67
        ],
        "matched_text": "                'hive': cfg_dict.get('hive', {}),  # we should probably generalized this"
    },
    {
        "satd_id": 21669107,
        "satd_repo": 33884891,
        "satd_sha": "78ff2fc180808a38c53cc643bd87c509d7540b4a",
        "satd_text": " TODO: This should also allow people to point to a cluster.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/kubernetes/kube_client.py",
        "lines": [
            30
        ],
        "matched_text": "    # TODO: This should also allow people to point to a cluster."
    },
    {
        "satd_id": 21669148,
        "satd_repo": 33884891,
        "satd_sha": "3aa7ffa64e0ae0b40d058e781d9a7ca8427ecbb7",
        "satd_text": " 'dGVzdA==' is base64 encoded 'test'",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/models.py",
        "lines": [
            1596
        ],
        "matched_text": "        # 'dGVzdA==' is base64 encoded 'test'"
    },
    {
        "satd_id": 21669185,
        "satd_repo": 33884891,
        "satd_sha": "1359d87352bda220f5d88613fd81904378624c7b",
        "satd_text": " We re-initialized the ORM within this Process above so we need to\n tear it down manually here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            380,
            381
        ],
        "matched_text": "                # We re-initialized the ORM within this Process above so we need to"
    },
    {
        "satd_id": 21669210,
        "satd_repo": 33884891,
        "satd_sha": "6bf1a6edaf13d3e255c47488f2747a2b8ebeff6c",
        "satd_text": " We re-initialized the ORM within this Process above so we need to\n tear it down manually here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            387,
            388
        ],
        "matched_text": "                # We re-initialized the ORM within this Process above so we need to"
    },
    {
        "satd_id": 21669224,
        "satd_repo": 33884891,
        "satd_sha": "d99053106e58ec377333c64f68ee84ed1dcdf61c",
        "satd_text": " This may be wrong around DST changes!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/timezone.py",
        "lines": [
            102
        ],
        "matched_text": "        # This may be wrong around DST changes!"
    },
    {
        "satd_id": 21669244,
        "satd_repo": 33884891,
        "satd_sha": "dcac3e97a4e1b4429e4baf9d8ab2a7eb4139ad74",
        "satd_text": " This may be wrong around DST changes!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/timezone.py",
        "lines": [
            96
        ],
        "matched_text": "        # This may be wrong around DST changes!"
    },
    {
        "satd_id": 21669285,
        "satd_repo": 33884891,
        "satd_sha": "313f5bac4a3f804094bcd583e0e5fbc3b5f405bb",
        "satd_text": " Execution date follows execution date format of scheduled executions,\n e.g. '2017-11-02 00:00:00'",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/utils/dates.py",
        "lines": [
            235,
            236
        ],
        "matched_text": "        # Execution date follows execution date format of scheduled executions,"
    },
    {
        "satd_id": 21669335,
        "satd_repo": 33884891,
        "satd_sha": "4fb7a90b36ec1daf169a65aa4adf28a31b30fbc5",
        "satd_text": " TODO: Wrap create_cluster_snapshot",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/redshift_hook.py",
        "lines": [
            24
        ],
        "matched_text": "    # TODO: Wrap create_cluster_snapshot"
    },
    {
        "satd_id": 21669379,
        "satd_repo": 33884891,
        "satd_sha": "cfc2f73c445074e1e09d6ef6a056cd2b33a945da",
        "satd_text": " TODO(saguziel): Change this to include QUEUED, for concurrency\n purposes we may want to count queued tasks",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/jobs.py",
        "lines": [
            1065,
            1066
        ],
        "matched_text": "        # TODO(saguziel): Change this to include QUEUED, for concurrency"
    },
    {
        "satd_id": 21669460,
        "satd_repo": 33884891,
        "satd_sha": "b3e985a3146272ecfd3ceaaa0d8567e4e9e117d4",
        "satd_text": " Depending on how the JSON was formatted, it may contain\n escaped newlines. Convert those to actual newlines.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/gcp_api_base_hook.py",
        "lines": [
            99,
            100
        ],
        "matched_text": "                # Depending on how the JSON was formatted, it may contain"
    },
    {
        "satd_id": 21669483,
        "satd_text": " Unit test for the DataprocClusterCreateOperator\n Unit test for the DataprocClusterDeleteOperator",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21669541,
        "satd_repo": 33884891,
        "satd_sha": "9bc0d399a6d303ff1068b880f1de76dfd5846c6f",
        "satd_text": " TODO: Why is this commented out?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            51
        ],
        "matched_text": "                # TODO: Why is this commented out?"
    },
    {
        "satd_id": 21669546,
        "satd_repo": 33884891,
        "satd_sha": "a7a518902dcf1e7fd4bf477cf57cee691f181b29",
        "satd_text": " TODO: Why is this commented out?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/local_executor.py",
        "lines": [
            51
        ],
        "matched_text": "                # TODO: Why is this commented out?"
    },
    {
        "satd_id": 21669607,
        "satd_repo": 33884891,
        "satd_sha": "966029357be5bcad2826cadb7333c1da9a619394",
        "satd_text": " TODO: Logging format and level should be configured\n in this file instead of from airflow.cfg. Currently\n there are other log format and level configurations in\n settings.py and cli.py. Please see AIRFLOW-1455.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            19,
            20,
            21,
            22
        ],
        "matched_text": "# TODO: Logging format and level should be configured"
    },
    {
        "satd_id": 21669608,
        "satd_repo": 33884891,
        "satd_sha": "966029357be5bcad2826cadb7333c1da9a619394",
        "satd_text": " TODO: REMOTE_BASE_LOG_FOLDER should be deprecated and\n directly specify in the handler definitions. This is to\n provide compatibility to older remote log folder settings.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            29,
            30,
            31
        ],
        "matched_text": "# TODO: REMOTE_BASE_LOG_FOLDER should be deprecated and"
    },
    {
        "satd_id": 21669610,
        "satd_repo": 33884891,
        "satd_sha": "966029357be5bcad2826cadb7333c1da9a619394",
        "satd_text": " TODO: Investigate using 444 instead of 666.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/file_task_handler.py",
        "lines": [
            173
        ],
        "matched_text": "            # TODO: Investigate using 444 instead of 666."
    },
    {
        "satd_id": 21669634,
        "satd_repo": 33884891,
        "satd_sha": "966029357be5bcad2826cadb7333c1da9a619394",
        "satd_text": " TODO: Unify airflow logging setups. Please see AIRFLOW-1457.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            173
        ],
        "matched_text": "# TODO: Unify airflow logging setups. Please see AIRFLOW-1457."
    },
    {
        "satd_id": 21669641,
        "satd_repo": 33884891,
        "satd_sha": "b0669b532a7be9aa34a4390951deaa25897c62e6",
        "satd_text": " TODO: Logging format and level should be configured\n in this file instead of from airflow.cfg. Currently\n there are other log format and level configurations in\n settings.py and cli.py. Please see AIRFLOW-1455.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            19,
            20,
            21,
            22
        ],
        "matched_text": "# TODO: Logging format and level should be configured"
    },
    {
        "satd_id": 21669642,
        "satd_repo": 33884891,
        "satd_sha": "b0669b532a7be9aa34a4390951deaa25897c62e6",
        "satd_text": " TODO: REMOTE_BASE_LOG_FOLDER should be deprecated and\n directly specify in the handler definitions. This is to\n provide compatibility to older remote log folder settings.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            29,
            30,
            31
        ],
        "matched_text": "# TODO: REMOTE_BASE_LOG_FOLDER should be deprecated and"
    },
    {
        "satd_id": 21669644,
        "satd_repo": 33884891,
        "satd_sha": "b0669b532a7be9aa34a4390951deaa25897c62e6",
        "satd_text": " TODO: Investigate using 444 instead of 666.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/file_task_handler.py",
        "lines": [
            173
        ],
        "matched_text": "            # TODO: Investigate using 444 instead of 666."
    },
    {
        "satd_id": 21669668,
        "satd_repo": 33884891,
        "satd_sha": "b0669b532a7be9aa34a4390951deaa25897c62e6",
        "satd_text": " TODO: Unify airflow logging setups. Please see AIRFLOW-1457.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            173
        ],
        "matched_text": "# TODO: Unify airflow logging setups. Please see AIRFLOW-1457."
    },
    {
        "satd_id": 21669733,
        "satd_repo": 33884891,
        "satd_sha": "f1f0d23e5d17dc77e7477cc8a327d9fd09891fed",
        "satd_text": " TODO: get_log_filename and get_log_directory are temporary helper\n functions to get airflow log filename. Logic of using FileHandler\n will be extract out and those two functions will be moved.\n For more details, please check issue AIRFLOW-1385.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/logging.py",
        "lines": [
            245,
            246,
            247,
            248
        ],
        "matched_text": "# TODO: get_log_filename and get_log_directory are temporary helper"
    },
    {
        "satd_id": 21669737,
        "satd_repo": 33884891,
        "satd_sha": "f1f0d23e5d17dc77e7477cc8a327d9fd09891fed",
        "satd_text": " TODO: This is not the best practice. Log handler and\n reader should be configurable and separated from the\n frontend. The new airflow logging design is in progress.\n Please refer to #2422(https://github.com/apache/incubator-airflow/pull/2422).",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            703,
            704,
            705,
            706
        ],
        "matched_text": "        # TODO: This is not the best practice. Log handler and"
    },
    {
        "satd_id": 21669749,
        "satd_repo": 33884891,
        "satd_sha": "b49986c3b24a5382f817d5a3fc40add87b464ba2",
        "satd_text": " TODO: get_log_filename and get_log_directory are temporary helper\n functions to get airflow log filename. Logic of using FileHandler\n will be extract out and those two functions will be moved.\n For more details, please check issue AIRFLOW-1385.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/logging.py",
        "lines": [
            245,
            246,
            247,
            248
        ],
        "matched_text": "# TODO: get_log_filename and get_log_directory are temporary helper"
    },
    {
        "satd_id": 21669753,
        "satd_repo": 33884891,
        "satd_sha": "b49986c3b24a5382f817d5a3fc40add87b464ba2",
        "satd_text": " TODO: This is not the best practice. Log handler and\n reader should be configurable and separated from the\n frontend. The new airflow logging design is in progress.\n Please refer to #2422(https://github.com/apache/incubator-airflow/pull/2422).",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            703,
            704,
            705,
            706
        ],
        "matched_text": "        # TODO: This is not the best practice. Log handler and"
    },
    {
        "satd_id": 21669761,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " read log and remove old logs to get just the latest additions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            473
        ],
        "matched_text": "        # read log and remove old logs to get just the latest additions"
    },
    {
        "satd_id": 21669761,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " read log and remove old logs to get just the latest additions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/s3_task_handler.py",
        "lines": [
            65
        ],
        "matched_text": "            # read log and remove old logs to get just the latest additions"
    },
    {
        "satd_id": 21669763,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " Setting up logging to a file.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            338
        ],
        "matched_text": "        # Setting up logging to a file."
    },
    {
        "satd_id": 21669767,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " Create the log file and give it group writable permissions\n TODO(aoen): Make log dirs and logs globally readable for now since the SubDag\n operator is not compatible with impersonation (e.g. if a Celery executor is used\n for a SubDag operator and the SubDag operator has a different owner than the\n parent DAG)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            355,
            356,
            357,
            358,
            359
        ],
        "matched_text": "        # Create the log file and give it group writable permissions"
    },
    {
        "satd_id": 21669767,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " Create the log file and give it group writable permissions\n TODO(aoen): Make log dirs and logs globally readable for now since the SubDag\n operator is not compatible with impersonation (e.g. if a Celery executor is used\n for a SubDag operator and the SubDag operator has a different owner than the\n parent DAG)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/file_task_handler.py",
        "lines": [
            144,
            145,
            146,
            147,
            148
        ],
        "matched_text": "        # Create the log file and give it group writable permissions"
    },
    {
        "satd_id": 21669775,
        "satd_repo": 33884891,
        "satd_sha": "b9576d57b6063908e488654f0b21b338c10069fd",
        "satd_text": " We only want to display the\n local logs while the task is running if a remote log configuration is set up\n since the logs will be transfered there after the run completes.\n TODO(aoen): One problem here is that if a task is running on a worker it\n already ran on, then duplicate logs will be printed for all of the previous\n runs of the task that already completed since they will have been printed as\n part of the remote log section above. This can be fixed either by streaming\n logs to the log servers as tasks are running, or by creating a proper\n abstraction for multiple task instance runs).",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/views.py",
        "lines": [
            755,
            756,
            757,
            758,
            759,
            760,
            761,
            762,
            763
        ],
        "matched_text": "            # We only want to display the"
    },
    {
        "satd_id": 21669781,
        "satd_repo": 33884891,
        "satd_sha": "e6ef06c53fd4449db6e665cce5cad9418dde232f",
        "satd_text": " TODO: Logging format and level should be configured\n in this file instead of from airflow.cfg. Currently\n there are other log format and level configurations in\n settings.py and cli.py.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            17,
            18,
            19,
            20
        ],
        "matched_text": "# TODO: Logging format and level should be configured"
    },
    {
        "satd_id": 21669783,
        "satd_repo": 33884891,
        "satd_sha": "e6ef06c53fd4449db6e665cce5cad9418dde232f",
        "satd_text": " TODO: This should be specified as s3_remote and/or gcs_remote",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/config_templates/default_airflow_logging.py",
        "lines": [
            27
        ],
        "matched_text": "# TODO: This should be specified as s3_remote and/or gcs_remote"
    },
    {
        "satd_id": 21669790,
        "satd_repo": 33884891,
        "satd_sha": "e6ef06c53fd4449db6e665cce5cad9418dde232f",
        "satd_text": " TODO: check if the remote_loc exist first instead of checking\n if remote_log here. This logic is going to modified once logs are split\n by try_number",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/log/s3_task_handler.py",
        "lines": [
            80,
            81,
            82
        ],
        "matched_text": "        # TODO: check if the remote_loc exist first instead of checking"
    },
    {
        "satd_id": 21669793,
        "satd_repo": 33884891,
        "satd_sha": "e6ef06c53fd4449db6e665cce5cad9418dde232f",
        "satd_text": " TODO: Merge airflow logging configurations.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/settings.py",
        "lines": [
            173
        ],
        "matched_text": "# TODO: Merge airflow logging configurations."
    },
    {
        "satd_id": 21669812,
        "satd_repo": 33884891,
        "satd_sha": "173860afe938f91356dfdff7e039f3cbc5a16fb4",
        "satd_text": " TODO: \"options\" is not template_field of DataFlowPythonOperator (not sure\n if intended or by mistake); consider fixing in the DataFlowPythonOperator.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/cloudml_operator_utils.py",
        "lines": [
            198,
            199
        ],
        "matched_text": "    # TODO: \"options\" is not template_field of DataFlowPythonOperator (not sure"
    },
    {
        "satd_id": 21669838,
        "satd_repo": 33884891,
        "satd_sha": "194d1d6e5b89918f22267ae6a86455a0acc771df",
        "satd_text": " TODO: \"options\" is not template_field of DataFlowPythonOperator (not sure\n if intended or by mistake); consider fixing in the DataFlowPythonOperator.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/cloudml_operator_utils.py",
        "lines": [
            198,
            199
        ],
        "matched_text": "    # TODO: \"options\" is not template_field of DataFlowPythonOperator (not sure"
    },
    {
        "satd_id": 21669923,
        "satd_repo": 33884891,
        "satd_sha": "1870f9069bcc7483982d4627ddd1bdd5cc530eaf",
        "satd_text": " TODO: remove this below after first successful build",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/setup_env.sh",
        "lines": [
            113
        ],
        "matched_text": "# TODO: remove this below after first successful build"
    },
    {
        "satd_id": 21669923,
        "satd_repo": 33884891,
        "satd_sha": "1870f9069bcc7483982d4627ddd1bdd5cc530eaf",
        "satd_text": " TODO: remove this below after first successful build",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/setup_env.sh",
        "lines": [
            131
        ],
        "matched_text": "# TODO: remove this below after first successful build"
    },
    {
        "satd_id": 21669926,
        "satd_repo": 33884891,
        "satd_sha": "38b2747c5b50afc5f21af5b44e8a0ccf9a440559",
        "satd_text": " TODO: remove this below after first successful build",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/setup_env.sh",
        "lines": [
            113
        ],
        "matched_text": "# TODO: remove this below after first successful build"
    },
    {
        "satd_id": 21669926,
        "satd_repo": 33884891,
        "satd_sha": "38b2747c5b50afc5f21af5b44e8a0ccf9a440559",
        "satd_text": " TODO: remove this below after first successful build",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/setup_env.sh",
        "lines": [
            131
        ],
        "matched_text": "# TODO: remove this below after first successful build"
    },
    {
        "satd_id": 21670194,
        "satd_repo": 33884891,
        "satd_sha": "23a16f7ad329830016b5aac68fbc27fd37a6fe3b",
        "satd_text": " alembic adds significant import time, so we import it lazily",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/db.py",
        "lines": [
            282
        ],
        "matched_text": "    # alembic adds significant import time, so we import it lazily"
    },
    {
        "satd_id": 21670194,
        "satd_repo": 33884891,
        "satd_sha": "23a16f7ad329830016b5aac68fbc27fd37a6fe3b",
        "satd_text": " alembic adds significant import time, so we import it lazily",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/db.py",
        "lines": [
            301
        ],
        "matched_text": "    # alembic adds significant import time, so we import it lazily"
    },
    {
        "satd_id": 21670195,
        "satd_repo": 33884891,
        "satd_sha": "996dd309331b010b15e34b99222430283ad7d8a4",
        "satd_text": " alembic adds significant import time, so we import it lazily",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/db.py",
        "lines": [
            282
        ],
        "matched_text": "    # alembic adds significant import time, so we import it lazily"
    },
    {
        "satd_id": 21670195,
        "satd_repo": 33884891,
        "satd_sha": "996dd309331b010b15e34b99222430283ad7d8a4",
        "satd_text": " alembic adds significant import time, so we import it lazily",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/db.py",
        "lines": [
            301
        ],
        "matched_text": "    # alembic adds significant import time, so we import it lazily"
    },
    {
        "satd_id": 21670199,
        "satd_repo": 33884891,
        "satd_sha": "a8bd1695e44e56375a399a9c7a0af0b137922e24",
        "satd_text": "TODO remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            2979
        ],
        "matched_text": "                #TODO remove in Airflow 2.0"
    },
    {
        "satd_id": 21670392,
        "satd_repo": 33884891,
        "satd_sha": "e42398100a3248eddb6b511ade73f6a239e58090",
        "satd_text": " FIXME: we might have hit concurrency limits, which means we probably\n have been running prematurely. This should be handled in the\n scheduling mechanism.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            1291,
            1292,
            1293
        ],
        "matched_text": "            # FIXME: we might have hit concurrency limits, which means we probably"
    },
    {
        "satd_id": 21670401,
        "satd_repo": 33884891,
        "satd_sha": "5831652f3fb1a6f296c8852513ed38427c897dd6",
        "satd_text": " Using two iterators here to support 'real-time' logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/spark_submit_hook.py",
        "lines": [
            182
        ],
        "matched_text": "        # Using two iterators here to support 'real-time' logging"
    },
    {
        "satd_id": 21670522,
        "satd_repo": 33884891,
        "satd_sha": "28cfd2c541c12468b3e4f634545dfa31a77b0091",
        "satd_text": " just to make sure we are fully cleaned up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/api/common/mark_tasks.py",
        "lines": [
            203
        ],
        "matched_text": "        # just to make sure we are fully cleaned up"
    },
    {
        "satd_id": 21670531,
        "satd_repo": 33884891,
        "satd_sha": "a097627d8236d9244d39eee0b8cbfa22f726fe8f",
        "satd_text": " Unfortunately zdesk doesn't always throw ZendeskError\n when we are done getting all the data. Sometimes the\n next just refers to the current set of results. Hence,\n need to deal with this special case",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/zendesk_hook.py",
        "lines": [
            86,
            87,
            88,
            89
        ],
        "matched_text": "                        # Unfortunately zdesk doesn't always throw ZendeskError"
    },
    {
        "satd_id": 21670595,
        "satd_repo": 33884891,
        "satd_sha": "b7c828bf094d3aa1eae310979a82addf7e423bb0",
        "satd_text": " this is a unit test only, cannot verify existing dag run",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/api/client/local_client.py",
        "lines": [
            107
        ],
        "matched_text": "            # this is a unit test only, cannot verify existing dag run"
    },
    {
        "satd_id": 21670654,
        "satd_repo": 33884891,
        "satd_sha": "241fd2709fa948336018cfa1032bcea2c8b8d1bd",
        "satd_text": " TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor.\n The problem is the way apply_defaults works isn't compatible with inheritance.\n The inheritance model needs to be reworked in order to support overriding args/\n kwargs with arguments here, then 'conn_id' and 'sql' can be passed into the\n constructor below and apply_defaults will no longer throw an exception.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/sensors.py",
        "lines": [
            155,
            156,
            157,
            158,
            159
        ],
        "matched_text": "        # TODO(aoen): We shouldn't be using SqlSensor here but MetastorePartitionSensor."
    },
    {
        "satd_id": 21670658,
        "satd_repo": 33884891,
        "satd_sha": "b56cb5cc97de074bb0e520f66b79e7eb2d913fb1",
        "satd_text": " Clean up the cgroups",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/task_runner/cgroup_task_runner.py",
        "lines": [
            183
        ],
        "matched_text": "        # Clean up the cgroups"
    },
    {
        "satd_id": 21670660,
        "satd_repo": 33884891,
        "satd_sha": "b56cb5cc97de074bb0e520f66b79e7eb2d913fb1",
        "satd_text": " TODO(plypaul) Monitoring the the control file in the cgroup fs is better than\n checking the return code here. The PR to use this is here:\n https://github.com/plypaul/airflow/blob/e144e4d41996300ffa93947f136eab7785b114ed/airflow/contrib/task_runner/cgroup_task_runner.py#L43\n but there were some issues installing the python butter package and\n libseccomp-dev on some hosts for some reason.\n I wasn't able to track down the root cause of the package install failures, but\n we might want to revisit that approach at some other point.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/task_runner/cgroup_task_runner.py",
        "lines": [
            161,
            162,
            163,
            164,
            165,
            166,
            167
        ],
        "matched_text": "        # TODO(plypaul) Monitoring the the control file in the cgroup fs is better than"
    },
    {
        "satd_id": 21670671,
        "satd_repo": 33884891,
        "satd_sha": "b56cb5cc97de074bb0e520f66b79e7eb2d913fb1",
        "satd_text": " Start daemon thread to read subprocess logging output",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/task_runner/base_task_runner.py",
        "lines": [
            119
        ],
        "matched_text": "        # Start daemon thread to read subprocess logging output"
    },
    {
        "satd_id": 21670679,
        "satd_repo": 33884891,
        "satd_sha": "b56cb5cc97de074bb0e520f66b79e7eb2d913fb1",
        "satd_text": " TODO(aoen): Adding/remove a user as part of a test is very bad (especially if the user\n already existed to begin with on the OS), this logic should be moved into a test\n that is wrapped in a container like docker so that the user can be safely added/removed.\n When this is done we can also modify the sudoers file to ensure that useradd will work\n without any manual modification of the sudoers file by the agent that is running these\n tests.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/impersonation.py",
        "lines": [
            31,
            32,
            33,
            34,
            35,
            36
        ],
        "matched_text": "# TODO(aoen): Adding/remove a user as part of a test is very bad (especially if the user"
    },
    {
        "satd_id": 21670799,
        "satd_repo": 33884891,
        "satd_sha": "15ff540ecd5e60e7ce080177ea3ea227582a4672",
        "satd_text": " We can defer checking the task dependency checks to the worker themselves\n since they can be expensive to run in the scheduler.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            1537,
            1538
        ],
        "matched_text": "            # We can defer checking the task dependency checks to the worker themselves"
    },
    {
        "satd_id": 21670800,
        "satd_repo": 33884891,
        "satd_sha": "15ff540ecd5e60e7ce080177ea3ea227582a4672",
        "satd_text": " Only schedule tasks that have their dependencies met, e.g. to avoid\n a task that recently got it's state changed to RUNNING from somewhere\n other than the scheduler from getting it's state overwritten.\n TODO(aoen): It's not great that we have to check all the task instance\n dependencies twice; once to get the task scheduled, and again to actually\n run the task. We should try to come up with a way to only check them once.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            1541,
            1542,
            1543,
            1544,
            1545,
            1546
        ],
        "matched_text": "            # Only schedule tasks that have their dependencies met, e.g. to avoid"
    },
    {
        "satd_id": 21670879,
        "satd_repo": 33884891,
        "satd_sha": "b93e6519cc6f23e9a229b44dc8b721d568c28cbb",
        "satd_text": " there are also a ton of newline objects\n that mess up our ability to write to csv\n we remove these newlines so that the output is a valid CSV format",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/salesforce_hook.py",
        "lines": [
            276,
            277,
            278
        ],
        "matched_text": "            # there are also a ton of newline objects"
    },
    {
        "satd_id": 21670884,
        "satd_repo": 33884891,
        "satd_sha": "b93e6519cc6f23e9a229b44dc8b721d568c28cbb",
        "satd_text": " try and convert the column to datetimes\n the column MUST have a four digit year somewhere in the string\n there should be a better way to do this,\n but just letting pandas try and convert every column without a format\n caused it to convert floats as well\n For example, a column of integers\n between 0 and 10 are turned into timestamps\n if the column cannot be converted,\n just return the original column untouched",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/salesforce_hook.py",
        "lines": [
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170
        ],
        "matched_text": "        # try and convert the column to datetimes"
    },
    {
        "satd_id": 21670941,
        "satd_repo": 33884891,
        "satd_sha": "fe5eaabb27136af3a3bc34521c85885b415d8246",
        "satd_text": " How often should stats be printed to the logs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            331
        ],
        "matched_text": "# How often should stats be printed to the logs"
    },
    {
        "satd_id": 21670975,
        "satd_repo": 33884891,
        "satd_sha": "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
        "satd_text": " TODO(aoen): SCHEDULER_DEPS is not coupled to actual execution in any way and\n could easily be modified or removed from the scheduler causing this dependency to become\n outdated and incorrect. This coupling should be created (e.g. via a dag_deps analog of\n ti_deps that will be used in the scheduler code) to ensure that the logic here is\n equivalent to the logic in the scheduler.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/ti_deps/dep_context.py",
        "lines": [
            105,
            106,
            107,
            108,
            109
        ],
        "matched_text": "# TODO(aoen): SCHEDULER_DEPS is not coupled to actual execution in any way and"
    },
    {
        "satd_id": 21671000,
        "satd_repo": 33884891,
        "satd_sha": "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
        "satd_text": " TODO(unknown): this query becomes quite expensive with dags that have many\n tasks. It should be refactored to let the task report to the dag run and get the\n aggregates from there.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/ti_deps/deps/trigger_rule_dep.py",
        "lines": [
            46,
            47,
            48
        ],
        "matched_text": "        # TODO(unknown): this query becomes quite expensive with dags that have many"
    },
    {
        "satd_id": 21671002,
        "satd_repo": 33884891,
        "satd_sha": "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
        "satd_text": " TODO(aoen): Ideally each individual trigger rules would be it's own class, but\n this isn't very feasible at the moment since the database queries need to be\n bundled together for efficiency.\n handling instant state assignment based on trigger rules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/ti_deps/deps/trigger_rule_dep.py",
        "lines": [
            127,
            128,
            129,
            130
        ],
        "matched_text": "        # TODO(aoen): Ideally each individual trigger rules would be it's own class, but"
    },
    {
        "satd_id": 21671015,
        "satd_repo": 33884891,
        "satd_sha": "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
        "satd_text": " Allow users of this fake to set pool_filled in the contructor to make this\n return True",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/ti_deps/deps/fake_models.py",
        "lines": [
            24,
            25
        ],
        "matched_text": "        # Allow users of this fake to set pool_filled in the contructor to make this"
    },
    {
        "satd_id": 21671088,
        "satd_repo": 33884891,
        "satd_sha": "fdb7e949140b735b8554ae5b22ad752e86f6ebaf",
        "satd_text": " These defaults make the test faster to run",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/core.py",
        "lines": [
            113
        ],
        "matched_text": "    # These defaults make the test faster to run"
    },
    {
        "satd_id": 21671088,
        "satd_repo": 33884891,
        "satd_sha": "fdb7e949140b735b8554ae5b22ad752e86f6ebaf",
        "satd_text": " These defaults make the test faster to run",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/jobs.py",
        "lines": [
            177
        ],
        "matched_text": "    # These defaults make the test faster to run"
    },
    {
        "satd_id": 21671091,
        "satd_repo": 33884891,
        "satd_sha": "fdb7e949140b735b8554ae5b22ad752e86f6ebaf",
        "satd_text": " These defaults make the test faster to run",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/core.py",
        "lines": [
            113
        ],
        "matched_text": "    # These defaults make the test faster to run"
    },
    {
        "satd_id": 21671091,
        "satd_repo": 33884891,
        "satd_sha": "fdb7e949140b735b8554ae5b22ad752e86f6ebaf",
        "satd_text": " These defaults make the test faster to run",
        "satd_label": "Test-SATD",
        "satd_label_short": "tes",
        "file": "tests/jobs.py",
        "lines": [
            177
        ],
        "matched_text": "    # These defaults make the test faster to run"
    },
    {
        "satd_id": 21671128,
        "satd_repo": 33884891,
        "satd_sha": "aea1fa2d653c5dde236cc82022cf0db0cde59856",
        "satd_text": " using two iterators here to support 'real-time' logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/spark_sql_hook.py",
        "lines": [
            131
        ],
        "matched_text": "        # using two iterators here to support 'real-time' logging"
    },
    {
        "satd_id": 21671133,
        "satd_repo": 33884891,
        "satd_sha": "9f764275f7e6dc0fe807e5b9e657434ea799d8ce",
        "satd_text": " using two iterators here to support 'real-time' logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/spark_sql_hook.py",
        "lines": [
            131
        ],
        "matched_text": "        # using two iterators here to support 'real-time' logging"
    },
    {
        "satd_id": 21671202,
        "satd_repo": 33884891,
        "satd_sha": "7b382b4e928b96c08890317b2b09d22163882a8a",
        "satd_text": " This functionality is deprecated, and AirflowImporter should be\n removed in 2.0.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/helpers.py",
        "lines": [
            236,
            237
        ],
        "matched_text": "            # This functionality is deprecated, and AirflowImporter should be"
    },
    {
        "satd_id": 21671203,
        "satd_repo": 33884891,
        "satd_sha": "7b382b4e928b96c08890317b2b09d22163882a8a",
        "satd_text": " Note that it's very important to only load a given modules once.\n If they are loaded more than once, the memory reference to the\n class objects changes, and Python thinks that an object of type\n Foo that was declared before Foo's module was reloaded is no\n longer the same type as Foo after it's reloaded.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/helpers.py",
        "lines": [
            226,
            227,
            228,
            229,
            230
        ],
        "matched_text": "            # Note that it's very important to only load a given modules once."
    },
    {
        "satd_id": 21671244,
        "satd_repo": 33884891,
        "satd_sha": "dce633ee53500f7a293a66b60e2c19307123d1ce",
        "satd_text": " This functionality is deprecated, and AirflowImporter should be\n removed in 2.0.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/helpers.py",
        "lines": [
            234,
            235
        ],
        "matched_text": "            # This functionality is deprecated, and AirflowImporter should be"
    },
    {
        "satd_id": 21671245,
        "satd_repo": 33884891,
        "satd_sha": "dce633ee53500f7a293a66b60e2c19307123d1ce",
        "satd_text": " Note that it's very important to only load a given modules once.\n If they are loaded more than once, the memory reference to the\n class objects changes, and Python thinks that an object of type\n Foo that was declared before Foo's module was reloaded is no\n longer the same type as Foo after it's reloaded.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/helpers.py",
        "lines": [
            224,
            225,
            226,
            227,
            228
        ],
        "matched_text": "            # Note that it's very important to only load a given modules once."
    },
    {
        "satd_id": 21671387,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider deprecating and using multibar with single series for this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3744
        ],
        "matched_text": "//TODO: consider deprecating and using multibar with single series for this"
    },
    {
        "satd_id": 21671389,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            12874
        ],
        "matched_text": "      // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)"
    },
    {
        "satd_id": 21671393,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: check why I did the ternary here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4602
        ],
        "matched_text": "            .style('padding-left', function(d) { return (index ? 0 : d.depth * childIndent + 12 + (icon(d) ? 0 : 16)) + 'px' }, 'important') //TODO: check why I did the ternary here"
    },
    {
        "satd_id": 21671401,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: need to allow forceX and forceY, and xDomain, yDomain",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1893
        ],
        "matched_text": "          .domain([0, Math.max(rangez[0], markerz[0], measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain"
    },
    {
        "satd_id": 21671413,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            6828
        ],
        "matched_text": "  // Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below"
    },
    {
        "satd_id": 21671419,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9665,
            9666
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671419,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9681,
            9682
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671419,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            14069,
            14070
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671422,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4931
        ],
        "matched_text": "      //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)"
    },
    {
        "satd_id": 21671424,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4658
        ],
        "matched_text": "            row: this, //TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)"
    },
    {
        "satd_id": 21671427,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1487
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21671427,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1923
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21671431,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider removing this and replacing with a '+' or '-' unless user defines images",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4511
        ],
        "matched_text": "    , iconOpen = 'images/grey-plus.png' //TODO: consider removing this and replacing with a '+' or '-' unless user defines images"
    },
    {
        "satd_id": 21671433,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3042
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671433,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7723
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671433,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8669
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671439,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11631
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21671439,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            12258
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21671447,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4128
        ],
        "matched_text": "    // New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else"
    },
    {
        "satd_id": 21671451,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            6196,
            6197
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21671451,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7433,
            7434
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21671459,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " NEW ALIGNING CODE, TODO: clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4933
        ],
        "matched_text": "      // NEW ALIGNING CODE, TODO: clean up"
    },
    {
        "satd_id": 21671473,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3012
        ],
        "matched_text": "      //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later"
    },
    {
        "satd_id": 21671474,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: implement, maybe as margin on the containing div",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4500
        ],
        "matched_text": "  var margin = {top: 0, right: 0, bottom: 0, left: 0} //TODO: implement, maybe as margin on the containing div"
    },
    {
        "satd_id": 21671485,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: showMaxMin should be disabled on all ordinal scaled axes",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1007
        ],
        "matched_text": "    , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes"
    },
    {
        "satd_id": 21671490,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": ".style('display', 'table-row'); //TODO: see if this does anything",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4588
        ],
        "matched_text": "          //.style('display', 'table-row'); //TODO: see if this does anything"
    },
    {
        "satd_id": 21671506,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY\n      // Update the range rects.\n      var range = g.selectAll('rect.nv-range')\n          .data(rangez);\n\n      range.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-range nv-s' + i; })\n          .attr('width', w0)\n          .attr('height', availableHeight)\n          .attr('x', reverse ? x0 : 0)\n          .on('mouseover', function(d,i) { \n              dispatch.elementMouseover({\n                value: d,\n                label: (i <= 0) ? 'Maximum' : (i > 1) ? 'Minimum' : 'Mean', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) { \n              dispatch.elementMouseout({\n                value: d,\n                label: (i <= 0) ? 'Minimum' : (i >=1) ? 'Maximum' : 'Mean' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(range)\n          .attr('x', reverse ? x1 : 0)\n          .attr('width', w1)\n          .attr('height', availableHeight);\n\n\n      // Update the measure rects.\n      var measure = g.selectAll('rect.nv-measure')\n          .data(measurez);\n\n      measure.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-measure nv-s' + i; })\n          .style('fill', function(d,i) { return color(d,i ) })\n          .attr('width', w0)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x0 : 0)\n          .attr('y', availableHeight / 3)\n          .on('mouseover', function(d) { \n              dispatch.elementMouseover({\n                value: d,\n                label: 'Current', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d) { \n              dispatch.elementMouseout({\n                value: d,\n                label: 'Current' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(measure)\n          .attr('width', w1)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x1 : 0)\n          .attr('y', availableHeight / 3);\n\n\n\n      // Update the marker lines.\n      var marker = g.selectAll('path.nv-markerTriangle')\n          .data(markerz);\n\n      var h3 =  availableHeight / 6;\n      marker.enter().append('path')\n          .attr('class', 'nv-markerTriangle')\n          .attr('transform', function(d) { return 'translate(' + x0(d) + ',' + (availableHeight / 2) + ')' })\n          .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n          .on('mouseover', function(d,i) {\n              dispatch.elementMouseover({\n                value: d,\n                label: 'Previous',\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) {\n              dispatch.elementMouseout({\n                value: d,\n                label: 'Previous'\n              })\n          });\n\n      d3.transition(marker)\n          .attr('transform', function(d) { return 'translate(' + (x1(d) - x1(0)) + ',' + (availableHeight / 2) + ')' });\n\n      marker.exit().remove();\n",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1600,
            1601,
            1602,
            1603,
            1604,
            1605,
            1606,
            1607,
            1608,
            1609,
            1610,
            1611,
            1612,
            1613,
            1614,
            1615,
            1616,
            1617,
            1618,
            1619,
            1620,
            1621,
            1622,
            1623,
            1624,
            1625,
            1626,
            1627,
            1628,
            1629,
            1630,
            1631,
            1632,
            1633,
            1634,
            1635,
            1636,
            1637,
            1638,
            1639,
            1640,
            1641,
            1642,
            1643,
            1644,
            1645,
            1646,
            1647,
            1648,
            1649,
            1650,
            1651,
            1652,
            1653,
            1654,
            1655,
            1656,
            1657,
            1658,
            1659,
            1660,
            1661,
            1662,
            1663,
            1664,
            1665,
            1666,
            1667,
            1668,
            1669,
            1670,
            1671,
            1672,
            1673,
            1674,
            1675,
            1676,
            1677,
            1678,
            1679,
            1680,
            1681,
            1682,
            1683,
            1684,
            1685,
            1686,
            1687,
            1688,
            1689
        ],
        "matched_text": "/* // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY"
    },
    {
        "satd_id": 21671512,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1716
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21671512,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2053
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21671513,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider deprecating by adding necessary features to multiBar model",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2912
        ],
        "matched_text": "//TODO: consider deprecating by adding necessary features to multiBar model"
    },
    {
        "satd_id": 21671516,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: store old scales for transitions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9847
        ],
        "matched_text": "  //TODO: store old scales for transitions"
    },
    {
        "satd_id": 21671521,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: make values customizeable in EVERY model in this fashion",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            13372
        ],
        "matched_text": "               .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion"
    },
    {
        "satd_id": 21671532,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1057
        ],
        "matched_text": "      //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component"
    },
    {
        "satd_id": 21671535,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " *Adding noise to make duplicates very unlikely\n *Injecting series and point index for reference",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11045,
            11046
        ],
        "matched_text": "                // *Adding noise to make duplicates very unlikely"
    },
    {
        "satd_id": 21671539,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " Find the tooltips, mark them for removal by this class (so others cleanups won't find it)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            822
        ],
        "matched_text": "              // Find the tooltips, mark them for removal by this class (so others cleanups won't find it)"
    },
    {
        "satd_id": 21671541,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: see if this is necessary at all",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4581
        ],
        "matched_text": "      tree.size([height, depth * childIndent]); //TODO: see if this is necessary at all"
    },
    {
        "satd_id": 21671548,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: better width calculations that don't assume always uniform data spacing;w",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3917
        ],
        "matched_text": "           //TODO: better width calculations that don't assume always uniform data spacing;w"
    },
    {
        "satd_id": 21671549,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1164
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.right,width) + 12) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21671549,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1206
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.left,width) + axisLabelDistance) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21671583,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9665,
            9666,
            9667
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671583,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9681,
            9682,
            9683
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671587,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4509
        ],
        "matched_text": "    , columns = [{key:'key', label: 'Name', type:'text'}] //TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this"
    },
    {
        "satd_id": 21671600,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "clean-up and prevent duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2416
        ],
        "matched_text": "      wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3048
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3070
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3082
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3867
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7729
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7751
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7763
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8697
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8709
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671616,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9968
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671629,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " Easy way to bind multiple functions to window.onresize\n TODO: give a way to remove a function after its bound, other than removing all of them",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            871,
            872
        ],
        "matched_text": "// Easy way to bind multiple functions to window.onresize"
    },
    {
        "satd_id": 21671632,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7596,
            7597
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21671632,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8568,
            8569
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21671639,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " remap and flatten the data for use in calculating the scales' domains\n if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            10956,
            10957
        ],
        "matched_text": "      // remap and flatten the data for use in calculating the scales' domains"
    },
    {
        "satd_id": 21671650,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "temp hack to add noise untill I think of a better way so there are no duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11055
        ],
        "matched_text": "                        pointIndex, point]; //temp hack to add noise untill I think of a better way so there are no duplicates"
    },
    {
        "satd_id": 21671654,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: stacked must be all positive or all negative, not both?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8756
        ],
        "matched_text": "              //TODO: stacked must be all positive or all negative, not both?"
    },
    {
        "satd_id": 21671671,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1410
        ],
        "matched_text": "    , orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21671671,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1796
        ],
        "matched_text": "  var orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21671672,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2889
        ],
        "matched_text": "      //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue"
    },
    {
        "satd_id": 21671673,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1291
        ],
        "matched_text": "          .filter(function(d) { return !parseFloat(Math.round(d.__data__*100000)/1000000) && (d.__data__ !== undefined) }) //this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique"
    },
    {
        "satd_id": 21671675,
        "satd_repo": 33884891,
        "satd_sha": "004272b1513bedc5e399e439b9391b73a9b86268",
        "satd_text": "TODO: Make consistent with other event objects",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4873
        ],
        "matched_text": "            dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects"
    },
    {
        "satd_id": 21671697,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider deprecating and using multibar with single series for this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3744
        ],
        "matched_text": "//TODO: consider deprecating and using multibar with single series for this"
    },
    {
        "satd_id": 21671699,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            12874
        ],
        "matched_text": "      // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)"
    },
    {
        "satd_id": 21671703,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: check why I did the ternary here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4602
        ],
        "matched_text": "            .style('padding-left', function(d) { return (index ? 0 : d.depth * childIndent + 12 + (icon(d) ? 0 : 16)) + 'px' }, 'important') //TODO: check why I did the ternary here"
    },
    {
        "satd_id": 21671711,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: need to allow forceX and forceY, and xDomain, yDomain",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1893
        ],
        "matched_text": "          .domain([0, Math.max(rangez[0], markerz[0], measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain"
    },
    {
        "satd_id": 21671723,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            6828
        ],
        "matched_text": "  // Chart has multiple similar Axes, to prevent code duplication, probably need to link all axis functions manually like below"
    },
    {
        "satd_id": 21671729,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9665,
            9666
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671729,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9681,
            9682
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671729,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            14069,
            14070
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671732,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4931
        ],
        "matched_text": "      //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)"
    },
    {
        "satd_id": 21671734,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4658
        ],
        "matched_text": "            row: this, //TODO: decide whether or not this should be consistent with scatter/line events or should be an html link (a href)"
    },
    {
        "satd_id": 21671737,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1487
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21671737,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: could optimize by precalculating x0(0) and x1(0)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1923
        ],
        "matched_text": "      var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)"
    },
    {
        "satd_id": 21671741,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider removing this and replacing with a '+' or '-' unless user defines images",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4511
        ],
        "matched_text": "    , iconOpen = 'images/grey-plus.png' //TODO: consider removing this and replacing with a '+' or '-' unless user defines images"
    },
    {
        "satd_id": 21671743,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3042
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671743,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7723
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671743,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: figure out why j works above, but not here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8669
        ],
        "matched_text": "          .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here"
    },
    {
        "satd_id": 21671749,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11631
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21671749,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            12258
        ],
        "matched_text": "    //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)"
    },
    {
        "satd_id": 21671757,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4128
        ],
        "matched_text": "    // New addition to calculate position if SVG is scaled with viewBox, may move TODO: consider implementing everywhere else"
    },
    {
        "satd_id": 21671761,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            6196,
            6197
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21671761,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc.\nd3.rebind(chart, lines, 'x', 'y', 'size', 'xDomain', 'yDomain', 'xRange', 'yRange', 'forceX', 'forceY', 'interactive', 'clipEdge', 'clipVoronoi', 'id');",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7433,
            7434
        ],
        "matched_text": "  //TODO: consider rebinding x, y and some other stuff, and simply do soemthign lile bars.x(lines.x()), etc."
    },
    {
        "satd_id": 21671769,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " NEW ALIGNING CODE, TODO: clean up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4933
        ],
        "matched_text": "      // NEW ALIGNING CODE, TODO: clean up"
    },
    {
        "satd_id": 21671783,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3012
        ],
        "matched_text": "      //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later"
    },
    {
        "satd_id": 21671784,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: implement, maybe as margin on the containing div",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4500
        ],
        "matched_text": "  var margin = {top: 0, right: 0, bottom: 0, left: 0} //TODO: implement, maybe as margin on the containing div"
    },
    {
        "satd_id": 21671795,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: showMaxMin should be disabled on all ordinal scaled axes",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1007
        ],
        "matched_text": "    , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes"
    },
    {
        "satd_id": 21671800,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": ".style('display', 'table-row'); //TODO: see if this does anything",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4588
        ],
        "matched_text": "          //.style('display', 'table-row'); //TODO: see if this does anything"
    },
    {
        "satd_id": 21671816,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY\n      // Update the range rects.\n      var range = g.selectAll('rect.nv-range')\n          .data(rangez);\n\n      range.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-range nv-s' + i; })\n          .attr('width', w0)\n          .attr('height', availableHeight)\n          .attr('x', reverse ? x0 : 0)\n          .on('mouseover', function(d,i) { \n              dispatch.elementMouseover({\n                value: d,\n                label: (i <= 0) ? 'Maximum' : (i > 1) ? 'Minimum' : 'Mean', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) { \n              dispatch.elementMouseout({\n                value: d,\n                label: (i <= 0) ? 'Minimum' : (i >=1) ? 'Maximum' : 'Mean' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(range)\n          .attr('x', reverse ? x1 : 0)\n          .attr('width', w1)\n          .attr('height', availableHeight);\n\n\n      // Update the measure rects.\n      var measure = g.selectAll('rect.nv-measure')\n          .data(measurez);\n\n      measure.enter().append('rect')\n          .attr('class', function(d, i) { return 'nv-measure nv-s' + i; })\n          .style('fill', function(d,i) { return color(d,i ) })\n          .attr('width', w0)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x0 : 0)\n          .attr('y', availableHeight / 3)\n          .on('mouseover', function(d) { \n              dispatch.elementMouseover({\n                value: d,\n                label: 'Current', //TODO: make these labels a variable\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d) { \n              dispatch.elementMouseout({\n                value: d,\n                label: 'Current' //TODO: make these labels a variable\n              })\n          })\n\n      d3.transition(measure)\n          .attr('width', w1)\n          .attr('height', availableHeight / 3)\n          .attr('x', reverse ? x1 : 0)\n          .attr('y', availableHeight / 3);\n\n\n\n      // Update the marker lines.\n      var marker = g.selectAll('path.nv-markerTriangle')\n          .data(markerz);\n\n      var h3 =  availableHeight / 6;\n      marker.enter().append('path')\n          .attr('class', 'nv-markerTriangle')\n          .attr('transform', function(d) { return 'translate(' + x0(d) + ',' + (availableHeight / 2) + ')' })\n          .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n          .on('mouseover', function(d,i) {\n              dispatch.elementMouseover({\n                value: d,\n                label: 'Previous',\n                pos: [x1(d), availableHeight/2]\n              })\n          })\n          .on('mouseout', function(d,i) {\n              dispatch.elementMouseout({\n                value: d,\n                label: 'Previous'\n              })\n          });\n\n      d3.transition(marker)\n          .attr('transform', function(d) { return 'translate(' + (x1(d) - x1(0)) + ',' + (availableHeight / 2) + ')' });\n\n      marker.exit().remove();\n",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1600,
            1601,
            1602,
            1603,
            1604,
            1605,
            1606,
            1607,
            1608,
            1609,
            1610,
            1611,
            1612,
            1613,
            1614,
            1615,
            1616,
            1617,
            1618,
            1619,
            1620,
            1621,
            1622,
            1623,
            1624,
            1625,
            1626,
            1627,
            1628,
            1629,
            1630,
            1631,
            1632,
            1633,
            1634,
            1635,
            1636,
            1637,
            1638,
            1639,
            1640,
            1641,
            1642,
            1643,
            1644,
            1645,
            1646,
            1647,
            1648,
            1649,
            1650,
            1651,
            1652,
            1653,
            1654,
            1655,
            1656,
            1657,
            1658,
            1659,
            1660,
            1661,
            1662,
            1663,
            1664,
            1665,
            1666,
            1667,
            1668,
            1669,
            1670,
            1671,
            1672,
            1673,
            1674,
            1675,
            1676,
            1677,
            1678,
            1679,
            1680,
            1681,
            1682,
            1683,
            1684,
            1685,
            1686,
            1687,
            1688,
            1689
        ],
        "matched_text": "/* // THIS IS THE PREVIOUS BULLET IMPLEMENTATION, WILL REMOVE SHORTLY"
    },
    {
        "satd_id": 21671822,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1716
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21671822,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " ranges (bad, satisfactory, good)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2053
        ],
        "matched_text": "  // ranges (bad, satisfactory, good)"
    },
    {
        "satd_id": 21671823,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider deprecating by adding necessary features to multiBar model",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2912
        ],
        "matched_text": "//TODO: consider deprecating by adding necessary features to multiBar model"
    },
    {
        "satd_id": 21671826,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: store old scales for transitions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9847
        ],
        "matched_text": "  //TODO: store old scales for transitions"
    },
    {
        "satd_id": 21671831,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: make values customizeable in EVERY model in this fashion",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            13372
        ],
        "matched_text": "               .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion"
    },
    {
        "satd_id": 21671842,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1057
        ],
        "matched_text": "      //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component"
    },
    {
        "satd_id": 21671845,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " *Adding noise to make duplicates very unlikely\n *Injecting series and point index for reference",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11045,
            11046
        ],
        "matched_text": "                // *Adding noise to make duplicates very unlikely"
    },
    {
        "satd_id": 21671849,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " Find the tooltips, mark them for removal by this class (so others cleanups won't find it)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            822
        ],
        "matched_text": "              // Find the tooltips, mark them for removal by this class (so others cleanups won't find it)"
    },
    {
        "satd_id": 21671851,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: see if this is necessary at all",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4581
        ],
        "matched_text": "      tree.size([height, depth * childIndent]); //TODO: see if this is necessary at all"
    },
    {
        "satd_id": 21671858,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: better width calculations that don't assume always uniform data spacing;w",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3917
        ],
        "matched_text": "           //TODO: better width calculations that don't assume always uniform data spacing;w"
    },
    {
        "satd_id": 21671859,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1164
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.right,width) + 12) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21671859,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider calculating this based on largest tick width... OR at least expose this on chart",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1206
        ],
        "matched_text": "              .attr('y', rotateYLabel ? (-Math.max(margin.left,width) + axisLabelDistance) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart"
    },
    {
        "satd_id": 21671893,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9665,
            9666,
            9667
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671893,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "disable tooltips when value ~= 0\n// TODO: consider removing points from voronoi that have 0 value instead of this hack\n 100 will not be good for very small numbers... will have to think about making this valu dynamic, based on data range",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9681,
            9682,
            9683
        ],
        "matched_text": "    //disable tooltips when value ~= 0"
    },
    {
        "satd_id": 21671897,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4509
        ],
        "matched_text": "    , columns = [{key:'key', label: 'Name', type:'text'}] //TODO: consider functions like chart.addColumn, chart.removeColumn, instead of a block like this"
    },
    {
        "satd_id": 21671910,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "clean-up and prevent duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2416
        ],
        "matched_text": "      wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3048
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3070
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3082
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (d.series + .5) / data.length), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            3867
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7729
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7751
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7763
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8697
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8709
        ],
        "matched_text": "              pos: [x(getX(d,i)) + (x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length), y(getY(d,i) + (stacked ? d.y0 : 0))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671926,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO: Figure out why the value appears to be shifted",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            9968
        ],
        "matched_text": "                pos: [x(getX(d,i)), y(getY(d,i))],  // TODO: Figure out why the value appears to be shifted"
    },
    {
        "satd_id": 21671939,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " Easy way to bind multiple functions to window.onresize\n TODO: give a way to remove a function after its bound, other than removing all of them",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            871,
            872
        ],
        "matched_text": "// Easy way to bind multiple functions to window.onresize"
    },
    {
        "satd_id": 21671942,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            7596,
            7597
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21671942,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "------------------------------------------------------------\n HACK for negative value stacking",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8568,
            8569
        ],
        "matched_text": "      //------------------------------------------------------------"
    },
    {
        "satd_id": 21671949,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " remap and flatten the data for use in calculating the scales' domains\n if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            10956,
            10957
        ],
        "matched_text": "      // remap and flatten the data for use in calculating the scales' domains"
    },
    {
        "satd_id": 21671960,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "temp hack to add noise untill I think of a better way so there are no duplicates",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            11055
        ],
        "matched_text": "                        pointIndex, point]; //temp hack to add noise untill I think of a better way so there are no duplicates"
    },
    {
        "satd_id": 21671964,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: stacked must be all positive or all negative, not both?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            8756
        ],
        "matched_text": "              //TODO: stacked must be all positive or all negative, not both?"
    },
    {
        "satd_id": 21671981,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1410
        ],
        "matched_text": "    , orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21671981,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": " TODO top & bottom",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1796
        ],
        "matched_text": "  var orient = 'left' // TODO top & bottom"
    },
    {
        "satd_id": 21671982,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            2889
        ],
        "matched_text": "      //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue"
    },
    {
        "satd_id": 21671983,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            1291
        ],
        "matched_text": "          .filter(function(d) { return !parseFloat(Math.round(d.__data__*100000)/1000000) && (d.__data__ !== undefined) }) //this is because sometimes the 0 tick is a very small fraction, TODO: think of cleaner technique"
    },
    {
        "satd_id": 21671985,
        "satd_repo": 33884891,
        "satd_sha": "0a460081bc7cba2d05434148f092b87d35aa8cd3",
        "satd_text": "TODO: Make consistent with other event objects",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/nv.d3.js",
        "lines": [
            4873
        ],
        "matched_text": "            dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects"
    },
    {
        "satd_id": 21672015,
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21672019,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672019,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672019,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672019,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672020,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672020,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672020,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672020,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672021,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672021,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672021,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672040,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672040,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672040,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672041,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672041,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672041,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672041,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672042,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672042,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672042,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672073,
        "satd_repo": 33884891,
        "satd_sha": "d243c003b09b3f1ff395592890f32d5269b8f27b",
        "satd_text": " use Airflow 2.0-style imports",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "run_unit_tests.sh",
        "lines": [
            10
        ],
        "matched_text": "# use Airflow 2.0-style imports"
    },
    {
        "satd_id": 21672080,
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21672084,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672084,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672084,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672084,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672085,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672085,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672085,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672085,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672086,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672086,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672086,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672105,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672105,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672105,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672106,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672106,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672106,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672106,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672107,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672107,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672107,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672138,
        "satd_repo": 33884891,
        "satd_sha": "adcccfa26ff666f4a787670441caf4c49f8ccef5",
        "satd_text": " use Airflow 2.0-style imports",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "run_unit_tests.sh",
        "lines": [
            10
        ],
        "matched_text": "# use Airflow 2.0-style imports"
    },
    {
        "satd_id": 21672145,
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21672149,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672149,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672149,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672149,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672150,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672150,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672150,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672150,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672151,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672151,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672151,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672170,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672170,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672170,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672171,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672171,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672171,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672171,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " ------------------------------------------------------------------------\n\n #TODO #FIXME Airflow 2.0\n\n Old import machinary below.\n\n This is deprecated but should be kept until Airflow 2.0\n for compatibility.\n\n ------------------------------------------------------------------------",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47
        ],
        "matched_text": "# ------------------------------------------------------------------------"
    },
    {
        "satd_id": 21672172,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            86,
            87
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672172,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/macros/__init__.py",
        "lines": [
            74,
            75
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672172,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": "#########################################################\n TODO FIXME Remove in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            136,
            137
        ],
        "matched_text": "        ##########################################################"
    },
    {
        "satd_id": 21672203,
        "satd_repo": 33884891,
        "satd_sha": "851adc5547597ec51743be4bc47d634c77d6dc17",
        "satd_text": " use Airflow 2.0-style imports",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "run_unit_tests.sh",
        "lines": [
            10
        ],
        "matched_text": "# use Airflow 2.0-style imports"
    },
    {
        "satd_id": 21672220,
        "satd_repo": 33884891,
        "satd_sha": "717a4aeee3bd0883067c82a3174ad8e2b7dbe8ec",
        "satd_text": " todo: put this in a password file",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/sqoop_hook.py",
        "lines": [
            87
        ],
        "matched_text": "        # todo: put this in a password file"
    },
    {
        "satd_id": 21672274,
        "satd_repo": 33884891,
        "satd_sha": "40b3fffa07134afe9c87608e6439589db133edb0",
        "satd_text": " TODO(jlowin) without a way to know what Job ran which tasks,\n there is a danger that another Job started running a task\n that was also queued to this executor. This is the last chance\n to check if that hapened. The most probable way is that a\n Scheduler tried to run a task that was originally queued by a\n Backfill. This fix reduces the probability of a collision but\n does NOT eliminate it.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/base_executor.py",
        "lines": [
            88,
            89,
            90,
            91,
            92,
            93,
            94
        ],
        "matched_text": "            # TODO(jlowin) without a way to know what Job ran which tasks,"
    },
    {
        "satd_id": 21672279,
        "satd_repo": 33884891,
        "satd_sha": "385add2bf3eb7cd6103cfec0e5516234eeb72443",
        "satd_text": "TODO raise an error in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            2982
        ],
        "matched_text": "            #TODO raise an error in Airflow 2.0"
    },
    {
        "satd_id": 21672281,
        "satd_repo": 33884891,
        "satd_sha": "43bdd7a4c876f9ac2d4c357d9c30c0956a1b0d76",
        "satd_text": " TODO(jlowin) without a way to know what Job ran which tasks,\n there is a danger that another Job started running a task\n that was also queued to this executor. This is the last chance\n to check if that hapened. The most probable way is that a\n Scheduler tried to run a task that was originally queued by a\n Backfill. This fix reduces the probability of a collision but\n does NOT eliminate it.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/base_executor.py",
        "lines": [
            88,
            89,
            90,
            91,
            92,
            93,
            94
        ],
        "matched_text": "            # TODO(jlowin) without a way to know what Job ran which tasks,"
    },
    {
        "satd_id": 21672347,
        "satd_repo": 33884891,
        "satd_sha": "f1ff65c8cde913fd9bfa8b21f83c7300b8b0effd",
        "satd_text": " Create a nice friendly array to work with out of the breakpoints object.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/footable.js",
        "lines": [
            300
        ],
        "matched_text": "            // Create a nice friendly array to work with out of the breakpoints object."
    },
    {
        "satd_id": 21672415,
        "satd_repo": 33884891,
        "satd_sha": "e23a1100c2626f676a994eb1d52a54c6fc58e189",
        "satd_text": " Create a nice friendly array to work with out of the breakpoints object.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/footable.js",
        "lines": [
            300
        ],
        "matched_text": "            // Create a nice friendly array to work with out of the breakpoints object."
    },
    {
        "satd_id": 21672459,
        "satd_repo": 33884891,
        "satd_sha": "7da6a94ebc77b6b763485c5f9072a8ebce5af8d7",
        "satd_text": " The scheduler can run multiple threads in parallel to schedule dags.\n This defines how many threads will run. However airflow will never\n use more threads than the amount of cpu cores available.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            333,
            334,
            335
        ],
        "matched_text": "# The scheduler can run multiple threads in parallel to schedule dags."
    },
    {
        "satd_id": 21672460,
        "satd_repo": 33884891,
        "satd_sha": "a36861a5f7f296656302942db83dd65a66dd5949",
        "satd_text": " The scheduler can run multiple threads in parallel to schedule dags.\n This defines how many threads will run. However airflow will never\n use more threads than the amount of cpu cores available.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            333,
            334,
            335
        ],
        "matched_text": "# The scheduler can run multiple threads in parallel to schedule dags."
    },
    {
        "satd_id": 21672473,
        "satd_repo": 33884891,
        "satd_sha": "975b90ec3ce6410a0b578b7d031dc3d92874bcb2",
        "satd_text": " todo: create ignore list",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/models.py",
        "lines": [
            268
        ],
        "matched_text": "                                # todo: create ignore list"
    },
    {
        "satd_id": 21672474,
        "satd_repo": 33884891,
        "satd_sha": "975b90ec3ce6410a0b578b7d031dc3d92874bcb2",
        "satd_text": " todo: raise exception?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            211
        ],
        "matched_text": "        # todo: raise exception?"
    },
    {
        "satd_id": 21672528,
        "satd_text": " render polylines i to i+render_speed\n Adjusts rendering speed",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21672555,
        "satd_repo": 33884891,
        "satd_sha": "58abca243e6f833a9d096446743584099901c3fa",
        "satd_text": " show Airflow's deprecation warnings",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            20
        ],
        "matched_text": "# show Airflow's deprecation warnings"
    },
    {
        "satd_id": 21672556,
        "satd_repo": 33884891,
        "satd_sha": "9c6dbf116ef86ecdf95f4095e0015abdb33959bc",
        "satd_text": " show Airflow's deprecation warnings",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            20
        ],
        "matched_text": "# show Airflow's deprecation warnings"
    },
    {
        "satd_id": 21672559,
        "satd_repo": 33884891,
        "satd_sha": "10ee62233056402bbe5bb84fbf42084b852a57c3",
        "satd_text": " TODO remove *args and **kwargs in Airflow 2.0",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            1602
        ],
        "matched_text": "            # TODO remove *args and **kwargs in Airflow 2.0"
    },
    {
        "satd_id": 21672564,
        "satd_text": " render polylines i to i+render_speed\n Adjusts rendering speed",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21672657,
        "satd_repo": 33884891,
        "satd_sha": "60e22ed50d485eb0bcc556b7826299c6b813efc3",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils.py",
        "lines": [
            716,
            717
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21672657,
        "satd_repo": 33884891,
        "satd_sha": "60e22ed50d485eb0bcc556b7826299c6b813efc3",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dates.py",
        "lines": [
            145,
            146
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21672691,
        "satd_repo": 33884891,
        "satd_sha": "773f52feb9f0dcd29161dc7ec41d5ddc7f69f445",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils.py",
        "lines": [
            716,
            717
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21672691,
        "satd_repo": 33884891,
        "satd_sha": "773f52feb9f0dcd29161dc7ec41d5ddc7f69f445",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils/dates.py",
        "lines": [
            145,
            146
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21672801,
        "satd_repo": 33884891,
        "satd_sha": "d7c95a8ca44b0d72d32004304501efc0572778c7",
        "satd_text": " run with timeout because this creates an infinite loop if not\n caught",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            294,
            295
        ],
        "matched_text": "            # run with timeout because this creates an infinite loop if not"
    },
    {
        "satd_id": 21672805,
        "satd_repo": 33884891,
        "satd_sha": "f0eeb151106f9b179f8d8ea27f3fc0066b968404",
        "satd_text": " run with timeout because this creates an infinite loop if not\n caught",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            294,
            295
        ],
        "matched_text": "            # run with timeout because this creates an infinite loop if not"
    },
    {
        "satd_id": 21672853,
        "satd_repo": 33884891,
        "satd_sha": "4c73677bf1e5bb2bbf07dd95f23c747645d4d91a",
        "satd_text": " read log and remove old logs to get just the latest additions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            243
        ],
        "matched_text": "        # read log and remove old logs to get just the latest additions"
    },
    {
        "satd_id": 21672864,
        "satd_repo": 33884891,
        "satd_sha": "274d4e4f9418be24dce9a3d6b22a2a91902cd6d5",
        "satd_text": " read log and remove old logs to get just the latest additions",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            243
        ],
        "matched_text": "        # read log and remove old logs to get just the latest additions"
    },
    {
        "satd_id": 21672945,
        "satd_repo": 33884891,
        "satd_sha": "23cdab0fcbb81542976e5db6f7ee9b7be905ba5d",
        "satd_text": " The SqlAlchemy pool recycle is the number of seconds a connection\n can be idle in the pool before it is invalidated. This config does\n not apply to sqlite.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            153,
            154,
            155
        ],
        "matched_text": "# The SqlAlchemy pool recycle is the number of seconds a connection"
    },
    {
        "satd_id": 21672947,
        "satd_repo": 33884891,
        "satd_sha": "4f5a6917e86644a2cfc23eafc81d5469b5e3a132",
        "satd_text": " The SqlAlchemy pool recycle is the number of seconds a connection\n can be idle in the pool before it is invalidated. This config does\n not apply to sqlite.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            153,
            154,
            155
        ],
        "matched_text": "# The SqlAlchemy pool recycle is the number of seconds a connection"
    },
    {
        "satd_id": 21672953,
        "satd_repo": 33884891,
        "satd_sha": "5a2dc8f097a5426e47ef1496cbccb129b8c27fec",
        "satd_text": " TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/mysql_to_gcs.py",
        "lines": [
            114
        ],
        "matched_text": "            # TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB."
    },
    {
        "satd_id": 21672962,
        "satd_repo": 33884891,
        "satd_sha": "17bdb488fa3912f8224844ac505d628d21aa88b0",
        "satd_text": " TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/mysql_to_gcs.py",
        "lines": [
            72
        ],
        "matched_text": "            # TODO validate that row isn't > 2MB. BQ enforces a hard row size of 2MB."
    },
    {
        "satd_id": 21672970,
        "satd_repo": 33884891,
        "satd_sha": "dd65ea8bbb98d90e0253c445331a60ac0743d008",
        "satd_text": " TODO: Cleanup remote tempfile\n TODO: kill `mktemp` or `tee` too when they are alive.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/ssh_execute_operator.py",
        "lines": [
            140,
            141
        ],
        "matched_text": "        # TODO: Cleanup remote tempfile"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            90
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            92
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            262
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            266
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            328
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            333
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            348
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            361
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            371
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            7
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            23
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673032,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            38
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673033,
        "satd_text": " TODO pydocs\n TODO pydocs\n TODO pydocs\n TODO pydocs",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21673034,
        "satd_text": " TODO pydocs\n TODO pydocs",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            90
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            92
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            262
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            266
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            328
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            333
        ],
        "matched_text": "        # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            348
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            361
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            371
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            7
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            23
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673035,
        "satd_repo": 33884891,
        "satd_sha": "0c66806072ac07234542dc42e87532715ce732ac",
        "satd_text": " TODO pydocs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/bigquery_check_operator.py",
        "lines": [
            38
        ],
        "matched_text": "    # TODO pydocs"
    },
    {
        "satd_id": 21673065,
        "satd_repo": 33884891,
        "satd_sha": "876011feb465fe97a756447f563753e4b9f9032b",
        "satd_text": " TODO: Cleanup remote tempfile\n TODO: kill `mktemp` or `tee` too when they are alive.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/ssh_execute_operator.py",
        "lines": [
            140,
            141
        ],
        "matched_text": "        # TODO: Cleanup remote tempfile"
    },
    {
        "satd_id": 21673067,
        "satd_repo": 33884891,
        "satd_sha": "60dcc6befe197dd37536295de0f274f5b734a2df",
        "satd_text": " TODO: Cleanup remote tempfile\n TODO: kill `mktemp` or `tee` too when they are alive.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/ssh_execute_operator.py",
        "lines": [
            140,
            141
        ],
        "matched_text": "        # TODO: Cleanup remote tempfile"
    },
    {
        "satd_id": 21673144,
        "satd_repo": 33884891,
        "satd_sha": "3b5183800ea646f2abcd45f9afa91321aebefb99",
        "satd_text": " TODO docs",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            78
        ],
        "matched_text": "    # TODO docs"
    },
    {
        "satd_id": 21673144,
        "satd_repo": 33884891,
        "satd_sha": "3b5183800ea646f2abcd45f9afa91321aebefb99",
        "satd_text": " TODO docs",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/contrib/hooks/bigquery_hook.py",
        "lines": [
            101
        ],
        "matched_text": "    # TODO docs"
    },
    {
        "satd_id": 21673200,
        "satd_repo": 33884891,
        "satd_sha": "58cda9d4094a96e4200f881179904fb0896dc0a3",
        "satd_text": " if the log level is set externally, i.e. either through\n --logging-level or anything, then its value should not be overridden\n by the default \"INFO\" in log_to_stdout",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            434,
            435,
            436
        ],
        "matched_text": "        # if the log level is set externally, i.e. either through"
    },
    {
        "satd_id": 21673205,
        "satd_repo": 33884891,
        "satd_sha": "36614f6303631d94bf9c0d280d9c0c93aec9dea4",
        "satd_text": " if the log level is set externally, i.e. either through\n --logging-level or anything, then its value should not be overridden\n by the default \"INFO\" in log_to_stdout",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            431,
            432,
            433
        ],
        "matched_text": "        # if the log level is set externally, i.e. either through"
    },
    {
        "satd_id": 21673214,
        "satd_repo": 33884891,
        "satd_sha": "b872152026d5723ee4c1cf5a504b706859601ed9",
        "satd_text": " if the log level is set externally, i.e. either through\n --logging-level or anything, then its value should not be overridden\n by the default \"INFO\" in log_to_stdout",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "tests/core.py",
        "lines": [
            410,
            411,
            412
        ],
        "matched_text": "        # if the log level is set externally, i.e. either through"
    },
    {
        "satd_id": 21673224,
        "satd_repo": 33884891,
        "satd_sha": "8c1cab52e053efb11b404e78149e9f5287e7b62c",
        "satd_text": " Hack to allow changing for piece of the code to behave differently while\n the docs are being built. The main objective was to alter the\n behavior of the utils.apply_default that was hiding function headers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            17,
            18,
            19
        ],
        "matched_text": "# Hack to allow changing for piece of the code to behave differently while"
    },
    {
        "satd_id": 21673234,
        "satd_repo": 33884891,
        "satd_sha": "76e99fd9b2b799e5fc4659b9880d620158ca9ab8",
        "satd_text": " Hack to allow changing for piece of the code to behave differently while\n the docs are being built. The main objective was to alter the\n behavior of the utils.apply_default that was hiding function headers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            17,
            18,
            19
        ],
        "matched_text": "# Hack to allow changing for piece of the code to behave differently while"
    },
    {
        "satd_id": 21673239,
        "satd_repo": 33884891,
        "satd_sha": "e5c50a8262da3a0e8c414b19685ded62211b814f",
        "satd_text": " Hack to allow changing for piece of the code to behave differently while\n the docs are being built. The main objective was to alter the\n behavior of the utils.apply_default that was hiding function headers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            17,
            18,
            19
        ],
        "matched_text": "# Hack to allow changing for piece of the code to behave differently while"
    },
    {
        "satd_id": 21673250,
        "satd_repo": 33884891,
        "satd_sha": "dcf0fa49fb5f35de9c99cd46e1ead663432052a2",
        "satd_text": " Hack to allow changing for piece of the code to behave differently while\n the docs are being built. The main objective was to alter the\n behavior of the utils.apply_default that was hiding function headers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            17,
            18,
            19
        ],
        "matched_text": "# Hack to allow changing for piece of the code to behave differently while"
    },
    {
        "satd_id": 21673253,
        "satd_repo": 33884891,
        "satd_sha": "9832bccd82e842e7347125c65305815281e2061d",
        "satd_text": " Hack to allow changing for piece of the code to behave differently while\n the docs are being built. The main objective was to alter the\n behavior of the utils.apply_default that was hiding function headers",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            17,
            18,
            19
        ],
        "matched_text": "# Hack to allow changing for piece of the code to behave differently while"
    },
    {
        "satd_id": 21673298,
        "satd_repo": 33884891,
        "satd_sha": "ae39fdce9a56dee61f5e2f231ef309a18ed4ccee",
        "satd_text": " TODO: verify dag_id",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            96
        ],
        "matched_text": "    # TODO: verify dag_id"
    },
    {
        "satd_id": 21673306,
        "satd_repo": 33884891,
        "satd_sha": "f5e1ae7abc172eb918ad6ae34d22a6c1effcb43d",
        "satd_text": " TODO: verify dag_id",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            95
        ],
        "matched_text": "    # TODO: verify dag_id"
    },
    {
        "satd_id": 21673308,
        "satd_text": " TODO: Needs this be changed with DagRun refactoring\n Checking whether there is a dag for which no task exists\n up to now",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": false,
        "lines": false,
        "matched_text": null
    },
    {
        "satd_id": 21673312,
        "satd_repo": 33884891,
        "satd_sha": "0a98855a0d6f1063bbc93e8217b42c0531f48999",
        "satd_text": " todo: use list or result?",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/contrib/auth/backends/ldap_auth.py",
        "lines": [
            65
        ],
        "matched_text": "        # todo: use list or result?"
    },
    {
        "satd_id": 21673313,
        "satd_repo": 33884891,
        "satd_sha": "0a98855a0d6f1063bbc93e8217b42c0531f48999",
        "satd_text": " todo: BASE or ONELEVEL?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/auth/backends/ldap_auth.py",
        "lines": [
            61
        ],
        "matched_text": "        # todo: BASE or ONELEVEL?"
    },
    {
        "satd_id": 21673319,
        "satd_repo": 33884891,
        "satd_sha": "0a98855a0d6f1063bbc93e8217b42c0531f48999",
        "satd_text": "models.User = User  # hack!\ndel User",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/security/kerberos/kerberos_login.py",
        "lines": [
            68,
            69
        ],
        "matched_text": "models.User = User  # hack!"
    },
    {
        "satd_id": 21673319,
        "satd_repo": 33884891,
        "satd_sha": "0a98855a0d6f1063bbc93e8217b42c0531f48999",
        "satd_text": "models.User = User  # hack!\ndel User",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/default_login.py",
        "lines": [
            47,
            48
        ],
        "matched_text": "#models.User = User  # hack!"
    },
    {
        "satd_id": 21673327,
        "satd_repo": 33884891,
        "satd_sha": "6795c14f56bb52b4db6e812055b3339fb04212f9",
        "satd_text": " todo: use list or result?",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/contrib/auth/backends/ldap_auth.py",
        "lines": [
            65
        ],
        "matched_text": "        # todo: use list or result?"
    },
    {
        "satd_id": 21673328,
        "satd_repo": 33884891,
        "satd_sha": "6795c14f56bb52b4db6e812055b3339fb04212f9",
        "satd_text": " todo: BASE or ONELEVEL?",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/auth/backends/ldap_auth.py",
        "lines": [
            61
        ],
        "matched_text": "        # todo: BASE or ONELEVEL?"
    },
    {
        "satd_id": 21673330,
        "satd_repo": 33884891,
        "satd_sha": "67400063d9dcf7a89b80b27896d5410e3fee70f3",
        "satd_text": "models.User = User  # hack!\ndel User",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/default_login.py",
        "lines": [
            47,
            48
        ],
        "matched_text": "#models.User = User  # hack!"
    },
    {
        "satd_id": 21673360,
        "satd_repo": 33884891,
        "satd_sha": "08a428eab2ae6ccb260727886e47e4511c7a0e24",
        "satd_text": " remove old logs (since they are already in S3)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            186
        ],
        "matched_text": "            # remove old logs (since they are already in S3)"
    },
    {
        "satd_id": 21673366,
        "satd_repo": 33884891,
        "satd_sha": "f265f88c050a294ca92f6c81e8e7a57f928c7839",
        "satd_text": " remove old logs (since they are already in S3)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            186
        ],
        "matched_text": "            # remove old logs (since they are already in S3)"
    },
    {
        "satd_id": 21673372,
        "satd_repo": 33884891,
        "satd_sha": "196a0301e86923e584a70fbbf47ecdb163f97de3",
        "satd_text": " remove old logs (since they are already in S3)",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            186
        ],
        "matched_text": "            # remove old logs (since they are already in S3)"
    },
    {
        "satd_id": 21673406,
        "satd_repo": 33884891,
        "satd_sha": "4a07bf840541eb686363d2d4070a93028e3beb51",
        "satd_text": " hack!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/security/kerberos/kerberos_login.py",
        "lines": [
            68
        ],
        "matched_text": "models.User = User  # hack!"
    },
    {
        "satd_id": 21673416,
        "satd_repo": 33884891,
        "satd_sha": "a75c6baca004597b6ff6b18726f7fb72ac0001ea",
        "satd_text": " TODO: recursive param with walk() filtering",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "scripts/ci/wheel_factory.py",
        "lines": [
            21
        ],
        "matched_text": "    # TODO: recursive param with walk() filtering"
    },
    {
        "satd_id": 21673427,
        "satd_repo": 33884891,
        "satd_sha": "103f6510dac8bdd5c07b354ae90bc6b9ecda383c",
        "satd_text": " hack!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/security/kerberos_login.py",
        "lines": [
            67
        ],
        "matched_text": "models.User = User  # hack!"
    },
    {
        "satd_id": 21673430,
        "satd_repo": 33884891,
        "satd_sha": "befd6c0b9e84438a00d6c1a1d9d9973bb1dcd752",
        "satd_text": " TODO fix this in a better way",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            1497
        ],
        "matched_text": "        sys.setrecursionlimit(5000)  # TODO fix this in a better way"
    },
    {
        "satd_id": 21673442,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673442,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673443,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports the operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673444,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673444,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673445,
        "satd_repo": 33884891,
        "satd_sha": "9f5bddd2422aeda9d4c4fa20c05b906a3b4c9b6d",
        "satd_text": " Imports operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673460,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673460,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673461,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports the operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673462,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673462,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673463,
        "satd_repo": 33884891,
        "satd_sha": "597e1190d03e9b1a53149d86881b717ecd67af2a",
        "satd_text": " Imports operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673467,
        "satd_repo": 33884891,
        "satd_sha": "ab5dd0bcceeb485d7db0ad518b30ffc9f16c1507",
        "satd_text": " vertica-python datatype.py donot provied the full type mapping access.\n Manual hack. Reference: https://github.com/uber/vertica-python/blob/master/vertica_python/vertica/column.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/vertica_to_hive.py",
        "lines": [
            73,
            74
        ],
        "matched_text": "        # vertica-python datatype.py donot provied the full type mapping access."
    },
    {
        "satd_id": 21673475,
        "satd_repo": 33884891,
        "satd_sha": "ab5dd0bcceeb485d7db0ad518b30ffc9f16c1507",
        "satd_text": " TODO Fix this emergency fix",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/__init__.py",
        "lines": [
            9
        ],
        "matched_text": "# TODO Fix this emergency fix"
    },
    {
        "satd_id": 21673479,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673479,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673480,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports the operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673481,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673481,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports the hooks dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports the hooks dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673482,
        "satd_repo": 33884891,
        "satd_sha": "c80efa31c8e4599a3eedd3f07f0b240e3065175b",
        "satd_text": " Imports operators dynamically while keeping the package API clean,\n abstracting the underlying modules",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/__init__.py",
        "lines": [
            1,
            2
        ],
        "matched_text": "# Imports operators dynamically while keeping the package API clean,"
    },
    {
        "satd_id": 21673487,
        "satd_repo": 33884891,
        "satd_sha": "d6a2c7948c1b15818357a7250bc292e68499c51a",
        "satd_text": " vertica-python datatype.py donot provied the full type mapping access.\n Manual hack. Reference: https://github.com/uber/vertica-python/blob/master/vertica_python/vertica/column.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/vertica_to_hive.py",
        "lines": [
            73,
            74
        ],
        "matched_text": "        # vertica-python datatype.py donot provied the full type mapping access."
    },
    {
        "satd_id": 21673495,
        "satd_repo": 33884891,
        "satd_sha": "d6a2c7948c1b15818357a7250bc292e68499c51a",
        "satd_text": " TODO Fix this emergency fix",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/__init__.py",
        "lines": [
            9
        ],
        "matched_text": "# TODO Fix this emergency fix"
    },
    {
        "satd_id": 21673499,
        "satd_repo": 33884891,
        "satd_sha": "4f5fae52a1c63ebaa8092f501ee9f3e8406cd177",
        "satd_text": " TODO Fix this emergency fix",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/__init__.py",
        "lines": [
            9
        ],
        "matched_text": "# TODO Fix this emergency fix"
    },
    {
        "satd_id": 21673500,
        "satd_repo": 33884891,
        "satd_sha": "aa055ccf83c1888ee0a5928e00003326653d75f5",
        "satd_text": " TODO Fix this emergency fix",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/executors/__init__.py",
        "lines": [
            9
        ],
        "matched_text": "# TODO Fix this emergency fix"
    },
    {
        "satd_id": 21673511,
        "satd_repo": 33884891,
        "satd_sha": "df79e591e3acc23c792e9965dcf15171818ba8ee",
        "satd_text": " vertica-python datatype.py donot provied the full type mapping access.\n Manual hack. Reference: https://github.com/uber/vertica-python/blob/master/vertica_python/vertica/column.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/vertica_to_hive.py",
        "lines": [
            73,
            74
        ],
        "matched_text": "        # vertica-python datatype.py donot provied the full type mapping access."
    },
    {
        "satd_id": 21673513,
        "satd_repo": 33884891,
        "satd_sha": "15efd6f9626793412cf2d85a8d34db3118ffeffa",
        "satd_text": " vertica-python datatype.py donot provied the full type mapping access.\n Manual hack. Reference: https://github.com/uber/vertica-python/blob/master/vertica_python/vertica/column.py",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/vertica_to_hive.py",
        "lines": [
            75,
            76
        ],
        "matched_text": "        # vertica-python datatype.py donot provied the full type mapping access."
    },
    {
        "satd_id": 21673544,
        "satd_repo": 33884891,
        "satd_sha": "5f64fcb44e0f370bc45f5faed3fecb2ac5e0b477",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils.py",
        "lines": [
            551,
            552
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21673568,
        "satd_repo": 33884891,
        "satd_sha": "8900e9fabf5c4f043ac3abf339c67082ea7b87b1",
        "satd_text": " To speed up finding an upper limit we grow this exponentially by a\n factor of 2",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/utils.py",
        "lines": [
            551,
            552
        ],
        "matched_text": "        # To speed up finding an upper limit we grow this exponentially by a"
    },
    {
        "satd_id": 21673727,
        "satd_repo": 33884891,
        "satd_sha": "51f60256075bca5b60ef75fb45982343271341e3",
        "satd_text": " remove any duplicate XComs",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/models.py",
        "lines": [
            2170
        ],
        "matched_text": "        # remove any duplicate XComs"
    },
    {
        "satd_id": 21673766,
        "satd_repo": 33884891,
        "satd_sha": "edf3857ca3d523894e55df085a93bca174a173fd",
        "satd_text": "ugly, refactor soon",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/jdbc.js",
        "lines": [
            4
        ],
        "matched_text": "  //ugly, refactor soon"
    },
    {
        "satd_id": 21673774,
        "satd_repo": 33884891,
        "satd_sha": "536c5161c692b1322da43ff9ed5523667a4246ba",
        "satd_text": " Whether the db supports a special type of autocmmit\n TODO should be changed as a method set_autocommit that can be overriden",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/dbapi_hook.py",
        "lines": [
            21,
            22
        ],
        "matched_text": "    # Whether the db supports a special type of autocmmit"
    },
    {
        "satd_id": 21673777,
        "satd_repo": 33884891,
        "satd_sha": "07b02abfef2a25ff5b764d9318db555f41d2e06b",
        "satd_text": " Whether the db supports a special type of autocmmit\n TODO should be changed as a method set_autocommit that can be overriden",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/dbapi_hook.py",
        "lines": [
            21,
            22
        ],
        "matched_text": "    # Whether the db supports a special type of autocmmit"
    },
    {
        "satd_id": 21673805,
        "satd_repo": 33884891,
        "satd_sha": "a732c401ae64d951242ff07cb2f45817e1f112b1",
        "satd_text": "## Tutorial Documentation",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/example_dags/tutorial.py",
        "lines": [
            2
        ],
        "matched_text": "### Tutorial Documentation"
    },
    {
        "satd_id": 21673807,
        "satd_repo": 33884891,
        "satd_sha": "b176105d28dbd169903722ef267fcd3871fa399a",
        "satd_text": " Keeping pandas from truncating long strings",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/plugins/metastore_browser/main.py",
        "lines": [
            21
        ],
        "matched_text": "# Keeping pandas from truncating long strings"
    },
    {
        "satd_id": 21673815,
        "satd_repo": 33884891,
        "satd_sha": "96503bd4043f3221415b1eb00a78221a8e27a74b",
        "satd_text": " Keeping pandas from truncating long strings",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/contrib/plugins/metastore_browser/main.py",
        "lines": [
            21
        ],
        "matched_text": "# Keeping pandas from truncating long strings"
    },
    {
        "satd_id": 21673823,
        "satd_repo": 33884891,
        "satd_sha": "e84be5db32efb34049b86d9f5860e5c3228a0834",
        "satd_text": " Late Imports to aoid circular imort",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/plugins_manager.py",
        "lines": [
            47
        ],
        "matched_text": "    # Late Imports to aoid circular imort"
    },
    {
        "satd_id": 21673828,
        "satd_repo": 33884891,
        "satd_sha": "22ac771af1623b1c16d1a8f98fc2a7724d7be866",
        "satd_text": " Late Imports to aoid circular imort",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/plugins_manager.py",
        "lines": [
            47
        ],
        "matched_text": "    # Late Imports to aoid circular imort"
    },
    {
        "satd_id": 21673849,
        "satd_repo": 33884891,
        "satd_sha": "26706001145617445e2535abad8a86335a9879ac",
        "satd_text": " The scheduler constantly tries to trigger new tasks (look at the\n scheduler section in the docs for more information). This defines\n how often the scheduler should run (in seconds).",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            127,
            128,
            129
        ],
        "matched_text": "# The scheduler constantly tries to trigger new tasks (look at the"
    },
    {
        "satd_id": 21673851,
        "satd_repo": 33884891,
        "satd_sha": "26706001145617445e2535abad8a86335a9879ac",
        "satd_text": " The folder where airflow should store its log files",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            40
        ],
        "matched_text": "# The folder where airflow should store its log files"
    },
    {
        "satd_id": 21673859,
        "satd_repo": 33884891,
        "satd_sha": "26706001145617445e2535abad8a86335a9879ac",
        "satd_text": " The Celery broker URL. Celery supports RabbitMQ, Redis and experimentaly\n a sqlalchemy database. Refer to the Celery documentation for more\n information.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            106,
            107,
            108
        ],
        "matched_text": "# The Celery broker URL. Celery supports RabbitMQ, Redis and experimentaly"
    },
    {
        "satd_id": 21673864,
        "satd_repo": 33884891,
        "satd_sha": "26706001145617445e2535abad8a86335a9879ac",
        "satd_text": " Whether to load the examples that ship with Airflow. It's good to\n get started, but you probably want to set this to False in a production\n environment",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            57,
            58,
            59
        ],
        "matched_text": "# Whether to load the examples that ship with Airflow. It's good to"
    },
    {
        "satd_id": 21673868,
        "satd_repo": 33884891,
        "satd_sha": "6f77f667d1b4b598fa0c4cfadfccd8628afef535",
        "satd_text": " The scheduler constantly tries to trigger new tasks (look at the\n scheduler section in the docs for more information). This defines\n how often the scheduler should run (in seconds).",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            127,
            128,
            129
        ],
        "matched_text": "# The scheduler constantly tries to trigger new tasks (look at the"
    },
    {
        "satd_id": 21673870,
        "satd_repo": 33884891,
        "satd_sha": "6f77f667d1b4b598fa0c4cfadfccd8628afef535",
        "satd_text": " The folder where airflow should store its log files",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/configuration.py",
        "lines": [
            40
        ],
        "matched_text": "# The folder where airflow should store its log files"
    },
    {
        "satd_id": 21673878,
        "satd_repo": 33884891,
        "satd_sha": "6f77f667d1b4b598fa0c4cfadfccd8628afef535",
        "satd_text": " The Celery broker URL. Celery supports RabbitMQ, Redis and experimentaly\n a sqlalchemy database. Refer to the Celery documentation for more\n information.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            106,
            107,
            108
        ],
        "matched_text": "# The Celery broker URL. Celery supports RabbitMQ, Redis and experimentaly"
    },
    {
        "satd_id": 21673883,
        "satd_repo": 33884891,
        "satd_sha": "6f77f667d1b4b598fa0c4cfadfccd8628afef535",
        "satd_text": " Whether to load the examples that ship with Airflow. It's good to\n get started, but you probably want to set this to False in a production\n environment",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "airflow/configuration.py",
        "lines": [
            57,
            58,
            59
        ],
        "matched_text": "# Whether to load the examples that ship with Airflow. It's good to"
    },
    {
        "satd_id": 21673937,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " The network simplex algorithm repeatedly replaces edges of\n the spanning tree with negative cut values until no such\n edge exists.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3064,
            3065,
            3066
        ],
        "matched_text": "  // The network simplex algorithm repeatedly replaces edges of"
    },
    {
        "satd_id": 21673951,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " TODO: remove this when we add back support for ordering clusters",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1634
        ],
        "matched_text": "  // TODO: remove this when we add back support for ordering clusters"
    },
    {
        "satd_id": 21673960,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": "\n * Expand self loops into three dummy nodes. One will sit above the incident\n * node, one will be at the same level, and one below. The result looks like:\n *\n *         /--<--x--->--\\\n *     node              y\n *         \\--<--z--->--/\n *\n * Dummy nodes x, y, z give us the shape of a loop and node y is where we place\n * the label.\n *\n * TODO: consolidate knowledge of dummy node construction.\n * TODO: support minLen = 2\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            2562,
            2563,
            2564,
            2565,
            2566,
            2567,
            2568,
            2569,
            2570,
            2571,
            2572,
            2573,
            2574,
            2575
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21673969,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " TODO original paper removes self loops, but it is not obvious when this would happen",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1969
        ],
        "matched_text": "    // TODO original paper removes self loops, but it is not obvious when this would happen"
    },
    {
        "satd_id": 21673996,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " TODO find a better way to get dimensions for foreignObjects...",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            627
        ],
        "matched_text": "      // TODO find a better way to get dimensions for foreignObjects..."
    },
    {
        "satd_id": 21674002,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": "\n * Replace edge e with edge f in the tree, recalculating the tree root,\n * the nodes' low and lim properties and the edges' cut values.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3286,
            3287,
            3288,
            3289
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21674023,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " TODO: Replace unit increment/decrement with edge weights.\n Edges from child to grandchild's subtree.\n Edges to child from grandchild's subtree.\n Edges from child to nodes outside of child's subtree.\n Edges from nodes outside of child's subtree to child.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3150,
            3151,
            3152,
            3153,
            3154
        ],
        "matched_text": "  // TODO: Replace unit increment/decrement with edge weights."
    },
    {
        "satd_id": 21674060,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " At the moment all modern browsers, that support strict mode, have\n native implementation of Array.prototype.reduce. For instance, IE8\n does not support strict mode, so this check is actually useless.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1210,
            1211,
            1212
        ],
        "matched_text": "      // At the moment all modern browsers, that support strict mode, have"
    },
    {
        "satd_id": 21674108,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": "\n * This function takes a compound layered graph, g, and produces an array of\n * layer graphs. Each entry in the array represents a subgraph of nodes\n * relevant for performing crossing reduction on that layer.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1791,
            1792,
            1793,
            1794,
            1795
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21674150,
        "satd_repo": 33884891,
        "satd_sha": "7eb484a126058ef4c741b79dffef39f8badada99",
        "satd_text": " TODO: use bpodgursky's shortening algorithm here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            422
        ],
        "matched_text": "  // TODO: use bpodgursky's shortening algorithm here"
    },
    {
        "satd_id": 21674178,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " The network simplex algorithm repeatedly replaces edges of\n the spanning tree with negative cut values until no such\n edge exists.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3064,
            3065,
            3066
        ],
        "matched_text": "  // The network simplex algorithm repeatedly replaces edges of"
    },
    {
        "satd_id": 21674192,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " TODO: remove this when we add back support for ordering clusters",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1634
        ],
        "matched_text": "  // TODO: remove this when we add back support for ordering clusters"
    },
    {
        "satd_id": 21674201,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": "\n * Expand self loops into three dummy nodes. One will sit above the incident\n * node, one will be at the same level, and one below. The result looks like:\n *\n *         /--<--x--->--\\\n *     node              y\n *         \\--<--z--->--/\n *\n * Dummy nodes x, y, z give us the shape of a loop and node y is where we place\n * the label.\n *\n * TODO: consolidate knowledge of dummy node construction.\n * TODO: support minLen = 2\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            2562,
            2563,
            2564,
            2565,
            2566,
            2567,
            2568,
            2569,
            2570,
            2571,
            2572,
            2573,
            2574,
            2575
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21674210,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " TODO original paper removes self loops, but it is not obvious when this would happen",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1969
        ],
        "matched_text": "    // TODO original paper removes self loops, but it is not obvious when this would happen"
    },
    {
        "satd_id": 21674237,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " TODO find a better way to get dimensions for foreignObjects...",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            627
        ],
        "matched_text": "      // TODO find a better way to get dimensions for foreignObjects..."
    },
    {
        "satd_id": 21674243,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": "\n * Replace edge e with edge f in the tree, recalculating the tree root,\n * the nodes' low and lim properties and the edges' cut values.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3286,
            3287,
            3288,
            3289
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21674264,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " TODO: Replace unit increment/decrement with edge weights.\n Edges from child to grandchild's subtree.\n Edges to child from grandchild's subtree.\n Edges from child to nodes outside of child's subtree.\n Edges from nodes outside of child's subtree to child.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            3150,
            3151,
            3152,
            3153,
            3154
        ],
        "matched_text": "  // TODO: Replace unit increment/decrement with edge weights."
    },
    {
        "satd_id": 21674301,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " At the moment all modern browsers, that support strict mode, have\n native implementation of Array.prototype.reduce. For instance, IE8\n does not support strict mode, so this check is actually useless.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1210,
            1211,
            1212
        ],
        "matched_text": "      // At the moment all modern browsers, that support strict mode, have"
    },
    {
        "satd_id": 21674349,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": "\n * This function takes a compound layered graph, g, and produces an array of\n * layer graphs. Each entry in the array represents a subgraph of nodes\n * relevant for performing crossing reduction on that layer.\n ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            1791,
            1792,
            1793,
            1794,
            1795
        ],
        "matched_text": "/*"
    },
    {
        "satd_id": 21674391,
        "satd_repo": 33884891,
        "satd_sha": "31bc712706a5d5b96917115aee6836b340caa4a6",
        "satd_text": " TODO: use bpodgursky's shortening algorithm here",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/dagre-d3.js",
        "lines": [
            422
        ],
        "matched_text": "  // TODO: use bpodgursky's shortening algorithm here"
    },
    {
        "satd_id": 21674417,
        "satd_repo": 33884891,
        "satd_sha": "d314b7a671cb9d1c6d4312c9b7ab230132d84ada",
        "satd_text": " hack!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/default_login.py",
        "lines": [
            45
        ],
        "matched_text": "models.User = User  # hack!"
    },
    {
        "satd_id": 21674422,
        "satd_repo": 33884891,
        "satd_sha": "4518dcb3261ffa9de86e0229b593e4aeabeacddb",
        "satd_text": " hack!",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/default_login.py",
        "lines": [
            45
        ],
        "matched_text": "models.User = User  # hack!"
    },
    {
        "satd_id": 21674447,
        "satd_repo": 33884891,
        "satd_sha": "6f50cfb5eb69d9ec9e93a8a34d3af5d498adaf6b",
        "satd_text": " Returns a function, that, as long as it continues to be invoked, will not\n be triggered. The function will be called after it stops being called for\n N milliseconds. If `immediate` is passed, trigger the function on the\n leading edge, instead of the trailing.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/underscore.js",
        "lines": [
            687,
            688,
            689,
            690
        ],
        "matched_text": "  // Returns a function, that, as long as it continues to be invoked, will not"
    },
    {
        "satd_id": 21674594,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " hide lines for better performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            569
        ],
        "matched_text": "      // hide lines for better performance"
    },
    {
        "satd_id": 21674596,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " render polylines i to i+render_speed ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            266
        ],
        "matched_text": "// render polylines i to i+render_speed "
    },
    {
        "satd_id": 21674599,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " Handles a brush event, toggling the display of foreground lines.\n TODO refactor",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            432,
            433
        ],
        "matched_text": "// Handles a brush event, toggling the display of foreground lines."
    },
    {
        "satd_id": 21674612,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " Adjusts rendering speed ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            299
        ],
        "matched_text": "// Adjusts rendering speed "
    },
    {
        "satd_id": 21674617,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " hack to hide ticks beyond extent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            439
        ],
        "matched_text": "  // hack to hide ticks beyond extent"
    },
    {
        "satd_id": 21674634,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " TODO required to avoid a bug",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            152
        ],
        "matched_text": "          // TODO required to avoid a bug"
    },
    {
        "satd_id": 21674696,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": " Need a solution for drawing text that isnt stupid slow",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/webgl-2d.js",
        "lines": [
            940
        ],
        "matched_text": "    // Need a solution for drawing text that isnt stupid slow"
    },
    {
        "satd_id": 21674704,
        "satd_repo": 33884891,
        "satd_sha": "ac1989b34ea476fd122a598eaa41147d004baf07",
        "satd_text": "Last rendered <strong id=\"render-speed\"></strong> lines",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/para/para.html",
        "lines": [
            65
        ],
        "matched_text": "        <!--Last rendered <strong id=\"render-speed\"></strong> lines-->"
    },
    {
        "satd_id": 21674721,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " hide lines for better performance",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            569
        ],
        "matched_text": "      // hide lines for better performance"
    },
    {
        "satd_id": 21674723,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " render polylines i to i+render_speed ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            266
        ],
        "matched_text": "// render polylines i to i+render_speed "
    },
    {
        "satd_id": 21674726,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " Handles a brush event, toggling the display of foreground lines.\n TODO refactor",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            432,
            433
        ],
        "matched_text": "// Handles a brush event, toggling the display of foreground lines."
    },
    {
        "satd_id": 21674739,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " Adjusts rendering speed ",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            299
        ],
        "matched_text": "// Adjusts rendering speed "
    },
    {
        "satd_id": 21674744,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " hack to hide ticks beyond extent",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            439
        ],
        "matched_text": "  // hack to hide ticks beyond extent"
    },
    {
        "satd_id": 21674761,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " TODO required to avoid a bug",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/para/parallel.js",
        "lines": [
            152
        ],
        "matched_text": "          // TODO required to avoid a bug"
    },
    {
        "satd_id": 21674823,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": " Need a solution for drawing text that isnt stupid slow",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/para/webgl-2d.js",
        "lines": [
            940
        ],
        "matched_text": "    // Need a solution for drawing text that isnt stupid slow"
    },
    {
        "satd_id": 21674831,
        "satd_repo": 33884891,
        "satd_sha": "df772e2a59bd45ffcb7bdcda68ca0eafcc3a6cac",
        "satd_text": "Last rendered <strong id=\"render-speed\"></strong> lines",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/templates/airflow/para/para.html",
        "lines": [
            65
        ],
        "matched_text": "        <!--Last rendered <strong id=\"render-speed\"></strong> lines-->"
    },
    {
        "satd_id": 21674854,
        "satd_repo": 33884891,
        "satd_sha": "1d3d060c9fe96bbcf67927ae200b81925356181e",
        "satd_text": " Setting up logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            61
        ],
        "matched_text": "    # Setting up logging"
    },
    {
        "satd_id": 21674863,
        "satd_repo": 33884891,
        "satd_sha": "748af9e254c10b6d4776e6816cd30146c0c3d662",
        "satd_text": " Setting up logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/bin/cli.py",
        "lines": [
            61
        ],
        "matched_text": "    # Setting up logging"
    },
    {
        "satd_id": 21674875,
        "satd_repo": 33884891,
        "satd_sha": "3517af440e9def9de56df52883fa2e87d89e23c7",
        "satd_text": " Cleaning up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/hive2samba_operator.py",
        "lines": [
            57
        ],
        "matched_text": "        # Cleaning up"
    },
    {
        "satd_id": 21674876,
        "satd_repo": 33884891,
        "satd_sha": "068e351c638d8f52261d7736b22ca4d490dc3738",
        "satd_text": " Cleaning up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/hive2ftp_operator.py",
        "lines": [
            57
        ],
        "matched_text": "        # Cleaning up"
    },
    {
        "satd_id": 21674876,
        "satd_repo": 33884891,
        "satd_sha": "068e351c638d8f52261d7736b22ca4d490dc3738",
        "satd_text": " Cleaning up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/hive2samba_operator.py",
        "lines": [
            57
        ],
        "matched_text": "        # Cleaning up"
    },
    {
        "satd_id": 21674877,
        "satd_repo": 33884891,
        "satd_sha": "068e351c638d8f52261d7736b22ca4d490dc3738",
        "satd_text": " Cleaning up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/hive2ftp_operator.py",
        "lines": [
            57
        ],
        "matched_text": "        # Cleaning up"
    },
    {
        "satd_id": 21674877,
        "satd_repo": 33884891,
        "satd_sha": "068e351c638d8f52261d7736b22ca4d490dc3738",
        "satd_text": " Cleaning up",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/operators/hive2samba_operator.py",
        "lines": [
            57
        ],
        "matched_text": "        # Cleaning up"
    },
    {
        "satd_id": 21674888,
        "satd_repo": 33884891,
        "satd_sha": "9fda01c5d23220b57d70ce46451549a9901e437f",
        "satd_text": " Uncomment this to provide low-level (slow) support in oldIE. It will cause script errors on\n charts with more than a few thousand points.\nproceed.call(this);",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/heatmap-canvas.js",
        "lines": [
            167,
            168,
            169
        ],
        "matched_text": "                    // Uncomment this to provide low-level (slow) support in oldIE. It will cause script errors on"
    },
    {
        "satd_id": 21674918,
        "satd_repo": 33884891,
        "satd_sha": "94f23d8edaf78f71451f0a3bdc96c57d2d8ba776",
        "satd_text": " Uncomment this to provide low-level (slow) support in oldIE. It will cause script errors on\n charts with more than a few thousand points.\nproceed.call(this);",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/heatmap-canvas.js",
        "lines": [
            167,
            168,
            169
        ],
        "matched_text": "                    // Uncomment this to provide low-level (slow) support in oldIE. It will cause script errors on"
    },
    {
        "satd_id": 21674982,
        "satd_repo": 33884891,
        "satd_sha": "4631b8e5c08ba54b10802d0a02cd6a4c64f3c620",
        "satd_text": " prevent memory leak on old ie",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/ace.js",
        "lines": [
            18276
        ],
        "matched_text": "        env.editor.container.env = null; // prevent memory leak on old ie"
    },
    {
        "satd_id": 21674993,
        "satd_repo": 33884891,
        "satd_sha": "4631b8e5c08ba54b10802d0a02cd6a4c64f3c620",
        "satd_text": " TODO message",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/ace.js",
        "lines": [
            423
        ],
        "matched_text": "            throw new TypeError(); // TODO message"
    },
    {
        "satd_id": 21674993,
        "satd_repo": 33884891,
        "satd_sha": "4631b8e5c08ba54b10802d0a02cd6a4c64f3c620",
        "satd_text": " TODO message",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/ace.js",
        "lines": [
            834
        ],
        "matched_text": "            throw new TypeError(); // TODO message"
    },
    {
        "satd_id": 21675039,
        "satd_repo": 33884891,
        "satd_sha": "bfffc94874c3279a9238a4ebbdc23f9c1d9a9451",
        "satd_text": " prevent memory leak on old ie",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/www/static/ace.js",
        "lines": [
            18276
        ],
        "matched_text": "        env.editor.container.env = null; // prevent memory leak on old ie"
    },
    {
        "satd_id": 21675050,
        "satd_repo": 33884891,
        "satd_sha": "bfffc94874c3279a9238a4ebbdc23f9c1d9a9451",
        "satd_text": " TODO message",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/ace.js",
        "lines": [
            423
        ],
        "matched_text": "            throw new TypeError(); // TODO message"
    },
    {
        "satd_id": 21675050,
        "satd_repo": 33884891,
        "satd_sha": "bfffc94874c3279a9238a4ebbdc23f9c1d9a9451",
        "satd_text": " TODO message",
        "satd_label": "Requirement-SATD",
        "satd_label_short": "req",
        "file": "airflow/www/static/ace.js",
        "lines": [
            834
        ],
        "matched_text": "            throw new TypeError(); // TODO message"
    },
    {
        "satd_id": 21675087,
        "satd_repo": 33884891,
        "satd_sha": "7c60c4c90195dc8fe8c0e64e7dde9ae9f2870d8c",
        "satd_text": " Hacky but worky",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            211
        ],
        "matched_text": "                        ti.task = task  # Hacky but worky"
    },
    {
        "satd_id": 21675098,
        "satd_repo": 33884891,
        "satd_sha": "f087056f668a753a25159ea7ee517db8582c5433",
        "satd_text": " Hacky but worky",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/jobs.py",
        "lines": [
            208
        ],
        "matched_text": "                        ti.task = task  # Hacky but worky"
    },
    {
        "satd_id": 21675149,
        "satd_repo": 33884891,
        "satd_sha": "19fbce4c15f77ba578a06d8f4a64297092cdb4ae",
        "satd_text": " Todo: add check on 503 return codes. In that case retry request. See __openuri",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "airflow/hooks/presto/presto_client.py",
        "lines": [
            280
        ],
        "matched_text": "            # Todo: add check on 503 return codes. In that case retry request. See __openuri"
    },
    {
        "satd_id": 21675163,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " The name of the Pygments (syntax highlighting) style to use.",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            92
        ],
        "matched_text": "# The name of the Pygments (syntax highlighting) style to use."
    },
    {
        "satd_id": 21675177,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " Add any paths that contain custom static files (such as style sheets) here,\n relative to this directory. They are copied after the builtin static files,\n so a file named \"default.css\" will overwrite the builtin \"default.css\".",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "docs/conf.py",
        "lines": [
            134,
            135,
            136
        ],
        "matched_text": "# Add any paths that contain custom static files (such as style sheets) here,"
    },
    {
        "satd_id": 21675199,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " For \"manual\" documents, if this is true, then toplevel headings are parts,\n not chapters.\nlatex_use_parts = False",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            214,
            215,
            216
        ],
        "matched_text": "# For \"manual\" documents, if this is true, then toplevel headings are parts,"
    },
    {
        "satd_id": 21675202,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " If your documentation needs a minimal Sphinx version, state it here.\nneeds_sphinx = '1.0'",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            25,
            26
        ],
        "matched_text": "# If your documentation needs a minimal Sphinx version, state it here."
    },
    {
        "satd_id": 21675214,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " The theme to use for HTML and HTML Help pages.  See the documentation for\n a list of builtin themes.",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            104,
            105
        ],
        "matched_text": "# The theme to use for HTML and HTML Help pages.  See the documentation for"
    },
    {
        "satd_id": 21675217,
        "satd_repo": 33884891,
        "satd_sha": "e491dab9a5c9df09165e0e28fb1babae9990d873",
        "satd_text": " Custom sidebar templates, maps document names to template names.\nhtml_sidebars = {}",
        "satd_label": "Documentation-SATD",
        "satd_label_short": "doc",
        "file": "docs/conf.py",
        "lines": [
            152,
            153
        ],
        "matched_text": "# Custom sidebar templates, maps document names to template names."
    },
    {
        "satd_id": 21675225,
        "satd_repo": 33884891,
        "satd_sha": "1f6f53872f8d1706bc8257f15104384499c01e0e",
        "satd_text": " Setting up logging",
        "satd_label": "Code|Design-SATD",
        "satd_label_short": "CD",
        "file": "src/flux/bin/flux_bin.py",
        "lines": [
            46
        ],
        "matched_text": "    # Setting up logging"
    }
]
[{"satd_id": 23553897, "satd_repo": 42763345, "satd_sha": "5014eec5a3375647f86fc9b9aa67f4424cdb3a0b", "satd_text": " self._clean_operator()\n self._clean_opclass()\n self._clean_aggregate()\n self._clean_function()", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/upgrade_util.py", "lines": [1309, 1310, 1311, 1312], "matched_text": "            # self._clean_operator()"}, {"satd_id": 23553916, "satd_repo": 42763345, "satd_sha": "59844eb1f3362950f49623f2365c74332fd520b7", "satd_text": " Both the type and its array form shows up as separate types\n We don't need both of them so we remove the array", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/create_changelist.py", "lines": [126, 127], "matched_text": "            # Both the type and its array form shows up as separate types"}, {"satd_id": 23553924, "satd_repo": 42763345, "satd_sha": "59844eb1f3362950f49623f2365c74332fd520b7", "satd_text": "TODO: We need to decide how we want to check for these", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "src/madpack/create_changelist.py", "lines": [221], "matched_text": "    #TODO: We need to decide how we want to check for these"}, {"satd_id": 23553930, "satd_repo": 42763345, "satd_sha": "59844eb1f3362950f49623f2365c74332fd520b7", "satd_text": " Add the functions with formatting", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/create_changelist.py", "lines": [189], "matched_text": "                    # Add the functions with formatting"}, {"satd_id": 23553968, "satd_repo": 42763345, "satd_sha": "8bf15fde06cf534710e8045a4dadff7d38bfa369", "satd_text": " Updating model inline instead of using updatePosition because\n we suspect that updatePosition ends up creating a copy of the\n gradient even if it is passed by reference and hence making it slower.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/task/mlp.hpp", "lines": [234, 235, 236], "matched_text": "            // Updating model inline instead of using updatePosition because"}, {"satd_id": 23553998, "satd_repo": 42763345, "satd_sha": "a595e2218c95685d73dc51f28e9fc1f0193abce9", "satd_text": "\n        Note that the IGD version uses the model in Task (model from the\n        previous iteration) to compute the loss.\n        Minibatch uses the model from Algo (the model based on current\n        iteration) to compute the loss. The difference in loss based on one\n        iteration is not too much, hence doing so here. We therefore don't\n        need to maintain another copy of the model (from previous iteration)\n        in the state. The model for the current iteration, and the loss are\n        both computed in one function now.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/mlp_igd.cpp", "lines": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "matched_text": "    /*"}, {"satd_id": 23554057, "satd_repo": 42763345, "satd_sha": "a8bbe082ca60f87e006eba164ea69b159e1875fc", "satd_text": " ASSUMPTION: 'gradient' will always be of the same type as the\n coefficients. In SVM, the model is just the coefficients, but can be\n more complex with other modules like MLP.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/task/linear_svm.hpp", "lines": [136, 137, 138], "matched_text": "    // ASSUMPTION: 'gradient' will always be of the same type as the"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/viterbi.cpp", "lines": [114, 115], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [299, 300], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [362, 363], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [439, 440], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [492, 493], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [533, 534], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [616, 617], "matched_text": "        // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [741, 742], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [755, 756], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [81, 82], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [117, 118], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [162, 163], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [191, 192], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [348, 349], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [416, 417], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [456, 457], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [501, 502], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [116, 117], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [222, 223], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [328, 329], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [445, 446], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [484, 485], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [52, 53], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [123, 124], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [221, 222], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [247, 248], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [341, 342], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [399, 400], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [534, 535], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554099, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [648, 649], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/viterbi.cpp", "lines": [114, 115], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [299, 300], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [362, 363], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [439, 440], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [492, 493], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [533, 534], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [616, 617], "matched_text": "        // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [741, 742], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [755, 756], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [81, 82], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [117, 118], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [162, 163], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [191, 192], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [348, 349], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [416, 417], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [456, 457], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [501, 502], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [116, 117], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [222, 223], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [328, 329], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [445, 446], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [484, 485], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [52, 53], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [123, 124], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [221, 222], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [247, 248], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [341, 342], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [399, 400], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [534, 535], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554100, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [648, 649], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/viterbi.cpp", "lines": [114, 115], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [299, 300], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [362, 363], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [439, 440], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [492, 493], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [533, 534], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [616, 617], "matched_text": "        // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [741, 742], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [755, 756], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [81, 82], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [117, 118], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [162, 163], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [191, 192], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [348, 349], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [416, 417], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [456, 457], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [501, 502], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [116, 117], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [222, 223], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [328, 329], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [445, 446], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [484, 485], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [52, 53], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [123, 124], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [221, 222], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [247, 248], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [341, 342], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [399, 400], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [534, 535], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554101, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [648, 649], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/viterbi.cpp", "lines": [114, 115], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [299, 300], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [362, 363], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [439, 440], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [492, 493], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [533, 534], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [616, 617], "matched_text": "        // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [741, 742], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [755, 756], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [81, 82], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [117, 118], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [162, 163], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [191, 192], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [348, 349], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [416, 417], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [456, 457], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [501, 502], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [116, 117], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [222, 223], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [328, 329], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [445, 446], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [484, 485], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [52, 53], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [123, 124], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [221, 222], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [247, 248], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [341, 342], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [399, 400], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [534, 535], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554102, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [648, 649], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/viterbi.cpp", "lines": [114, 115], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [299, 300], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [362, 363], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [439, 440], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [492, 493], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [533, 534], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [616, 617], "matched_text": "        // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [741, 742], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/lda/lda.cpp", "lines": [755, 756], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [81, 82], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [117, 118], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [162, 163], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [191, 192], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [348, 349], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [416, 417], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [456, 457], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/matrix_ops.cpp", "lines": [501, 502], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [116, 117], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [222, 223], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [328, 329], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [445, 446], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/svd.cpp", "lines": [484, 485], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [52, 53], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [123, 124], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [221, 222], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [247, 248], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [341, 342], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [399, 400], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [534, 535], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554103, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [648, 649], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554104, "satd_repo": 42763345, "satd_sha": "44f89c9a1f161c884215b48a99780f01b69bed0d", "satd_text": " FIXME: construct_array functions circumvent the abstraction layer. These\n should be replaced with appropriate Allocator:: calls.\n note that curr_tvals.size() could be different from prez_tvals.size()", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/tsa/arima.cpp", "lines": [159, 160, 161], "matched_text": "    // FIXME: construct_array functions circumvent the abstraction layer. These"}, {"satd_id": 23554148, "satd_repo": 42763345, "satd_sha": "4fcb60ed8bea793a98eca802886492d00ef2f676", "satd_text": "#TODO this should be an int not a double", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/mlp_igd.cpp", "lines": [213], "matched_text": "    //#TODO this should be an int not a double"}, {"satd_id": 23554192, "satd_repo": 42763345, "satd_sha": "4fcb60ed8bea793a98eca802886492d00ef2f676", "satd_text": " Cross entropy: RHS term is negative", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/task/mlp.hpp", "lines": [171], "matched_text": "            // Cross entropy: RHS term is negative"}, {"satd_id": 23554272, "satd_repo": 42763345, "satd_sha": "96f9ac042857914aa0e96aed6867741b5fb6b3c4", "satd_text": " FIXME remove the following  special handling for HAWQ after svec is\n removed from catalog", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/upgrade_util.py", "lines": [195, 196], "matched_text": "        # FIXME remove the following  special handling for HAWQ after svec is"}, {"satd_id": 23554273, "satd_repo": 42763345, "satd_sha": "7d4eec9d443c7aef8a63565d520dee0ba773d929", "satd_text": " throws an exception if the coefficients contain NULL values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_utils.cpp", "lines": [18], "matched_text": "    // throws an exception if the coefficients contain NULL values"}, {"satd_id": 23554273, "satd_repo": 42763345, "satd_sha": "7d4eec9d443c7aef8a63565d520dee0ba773d929", "satd_text": " throws an exception if the coefficients contain NULL values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_utils.cpp", "lines": [47], "matched_text": "    // throws an exception if the coefficients contain NULL values"}, {"satd_id": 23554273, "satd_repo": 42763345, "satd_sha": "7d4eec9d443c7aef8a63565d520dee0ba773d929", "satd_text": " throws an exception if the coefficients contain NULL values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_utils.cpp", "lines": [77], "matched_text": "    // throws an exception if the coefficients contain NULL values"}, {"satd_id": 23554273, "satd_repo": 42763345, "satd_sha": "7d4eec9d443c7aef8a63565d520dee0ba773d929", "satd_text": " throws an exception if the coefficients contain NULL values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_utils.cpp", "lines": [106], "matched_text": "    // throws an exception if the coefficients contain NULL values"}, {"satd_id": 23554324, "satd_repo": 42763345, "satd_sha": "a184a8ac6f1d17cc364fecf5e5f8d55e229210b9", "satd_text": " FIXME this enum should be accessed by all modules that may need grouping\n valid status values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "examples/hello_world/iterative/simple_logistic.cpp", "lines": [31, 32], "matched_text": "// FIXME this enum should be accessed by all modules that may need grouping"}, {"satd_id": 23554364, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": "\n * The library provides a simple C API.  Essentially, a new stemmer can\n * be obtained by using \"sb_stemmer_new\".  \"sb_stemmer_stem\" is then\n * used to stem a word, \"sb_stemmer_length\" returns the stemmed\n * length of the last word processed, and \"sb_stemmer_delete\" is\n * used to delete a stemmer.\n *\n * Creating a stemmer is a relatively expensive operation - the expected\n * usage pattern is that a new stemmer is created when needed, used\n * to stem many words, and deleted after some time.\n *\n * Stemmers are re-entrant, but not threadsafe.  In other words, if\n * you wish to access the same stemmer object from multiple threads,\n * you must ensure that all access is protected by a mutex or similar\n * device.\n *\n * libstemmer does not currently incorporate any mechanism for caching the results\n * of stemming operations.  Such caching can greatly increase the performance of a\n * stemmer under certain situations, so suitable patches will be considered for\n * inclusion.\n *\n * The standard libstemmer sources contain an algorithm for each of the supported\n * languages.  The algorithm may be selected using the english name of the\n * language, or using the 2 or 3 letter ISO 639 language codes.  In addition,\n * the traditional \"Porter\" stemming algorithm for english is included for\n * backwards compatibility purposes, but we recommend use of the \"English\"\n * stemmer in preference for new projects.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/stemmer/src/pg_gp/porter_stemmer.c", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "matched_text": "/*"}, {"satd_id": 23554377, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " FIXME - should be able to get a version number for each stemming\n * algorithm (which will be incremented each time the output changes). ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/include/libstemmer.h", "lines": [10, 11], "matched_text": "/* FIXME - should be able to get a version number for each stemming"}, {"satd_id": 23554397, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " this line could be removed ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/runtime/utilities.c", "lines": [386], "matched_text": "        z->l > SIZE(z->p)) /* this line could be removed */"}, {"satd_id": 23554495, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23554495, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23554497, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23554497, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23554508, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23554508, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23554508, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23554508, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23554513, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23554513, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23554548, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23554548, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23554548, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23554548, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23554662, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23554662, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23554673, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23554673, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23554748, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23554748, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23554751, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23554751, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23554812, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " grouping v, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23554812, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " grouping v, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23554879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy, line 193 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [749], "matched_text": "            if (ret == 0) goto lab9; /* call tidy, line 193 */"}, {"satd_id": 23554879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy, line 193 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [755], "matched_text": "            if (ret == 0) goto lab9; /* call tidy, line 193 */"}, {"satd_id": 23554882, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " among, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23554882, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " among, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554895, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23554934, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call LONG, line 174 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [609], "matched_text": "                    if (ret == 0) goto lab0; /* call LONG, line 174 */"}, {"satd_id": 23554934, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call LONG, line 174 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [611], "matched_text": "                    if (ret == 0) goto lab0; /* call LONG, line 174 */"}, {"satd_id": 23554987, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23554987, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23554991, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23554991, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23555084, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555084, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555084, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555084, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555116, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23555116, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23555205, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555205, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555230, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555230, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555230, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555230, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555248, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555248, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555264, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call R1, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555264, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call R1, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555298, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555298, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555309, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555309, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555310, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555310, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23555389, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23555425, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23555434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23555493, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23555493, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23555625, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call shortv, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555625, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call shortv, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555636, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " atmark, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555636, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " atmark, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555671, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <+, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555671, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <+, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555736, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555736, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23555847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23555879, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23555884, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23555892, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556096, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23556127, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23556132, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556138, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556140, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556161, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " do, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556161, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " do, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556227, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556227, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556403, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556433, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556595, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23556617, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23556623, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23556625, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556625, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556633, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556648, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " unset standard_suffix_removed, line 130 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [822], "matched_text": "    z->B[0] = 0; /* unset standard_suffix_removed, line 130 */"}, {"satd_id": 23556648, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " unset standard_suffix_removed, line 130 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [828], "matched_text": "    z->B[0] = 0; /* unset standard_suffix_removed, line 130 */"}, {"satd_id": 23556655, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " or, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556655, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " or, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23556769, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23556795, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23556835, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy_up, line 215 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [685], "matched_text": "                if (ret == 0) goto lab10; /* call tidy_up, line 215 */"}, {"satd_id": 23556942, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556942, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23556944, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23556944, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23556955, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556955, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556955, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556955, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23556960, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556960, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23556995, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556995, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23556995, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23556995, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23557109, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23557109, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23557120, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23557120, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23557195, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23557195, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23557198, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23557198, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23557259, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " grouping v, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23557259, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " grouping v, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23557326, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy, line 193 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [749], "matched_text": "            if (ret == 0) goto lab9; /* call tidy, line 193 */"}, {"satd_id": 23557326, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy, line 193 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [755], "matched_text": "            if (ret == 0) goto lab9; /* call tidy, line 193 */"}, {"satd_id": 23557329, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " among, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23557329, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " among, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557342, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557381, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call LONG, line 174 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [609], "matched_text": "                    if (ret == 0) goto lab0; /* call LONG, line 174 */"}, {"satd_id": 23557381, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call LONG, line 174 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [611], "matched_text": "                    if (ret == 0) goto lab0; /* call LONG, line 174 */"}, {"satd_id": 23557434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23557434, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23557438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23557438, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23557531, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23557531, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23557531, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23557531, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23557563, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23557563, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23557652, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23557652, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23557677, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557677, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557677, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557677, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557695, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23557695, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " substring, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23557711, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call R1, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23557711, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call R1, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23557745, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23557745, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " [, line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23557756, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23557756, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23557757, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23557757, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " ], line 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23557847, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23557877, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558044, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558080, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23558089, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558093, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558148, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23558148, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " next, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23558280, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call shortv, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558280, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call shortv, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558291, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " atmark, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558291, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " atmark, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558326, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <+, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558326, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <+, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558391, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558391, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " test, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558502, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558534, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23558539, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558547, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558725, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23558747, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23558753, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23558755, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558755, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " <-, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558763, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558778, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " unset standard_suffix_removed, line 130 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [822], "matched_text": "    z->B[0] = 0; /* unset standard_suffix_removed, line 130 */"}, {"satd_id": 23558778, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " unset standard_suffix_removed, line 130 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [828], "matched_text": "    z->B[0] = 0; /* unset standard_suffix_removed, line 130 */"}, {"satd_id": 23558785, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " or, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558785, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " or, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23558897, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23558917, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " call tidy_up, line 213 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [679], "matched_text": "                if (ret == 0) goto lab10; /* call tidy_up, line 213 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23558921, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [447], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [452], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [457], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [176], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [178], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [539], "matched_text": "                    z->c++; /* next, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 2, s_4_43, -1, -1, 0}"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 5, s_2_43, -1, 4, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [237], "matched_text": "/* 43 */ { 3, s_4_43, -1, 2, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [160], "matched_text": "            z->bra = z->c; /* [, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [162], "matched_text": "            among_var = find_among(z, a_0, 11); /* substring, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [164], "matched_text": "            z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [449], "matched_text": "        {    /* gopast */ /* grouping v, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [454], "matched_text": "        {    /* gopast */ /* non v, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [459], "matched_text": "        z->I[1] = z->c; /* setmark p2, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [178], "matched_text": "                z->ket = z->c; /* ], line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [180], "matched_text": "                {   int ret = slice_from_s(z, 1, s_5); /* <-, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [219], "matched_text": "/* 43 */ { 3, s_4_43, -1, -1, 0}"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [278], "matched_text": "/* 43 */ { 3, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [421], "matched_text": "/* 43 */ { 4, s_7_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [540], "matched_text": "                        z->c = ret; /* next, line 43 */"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [181], "matched_text": "/* 43 */ { 7, s_5_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [351], "matched_text": "/* 43 */ { 5, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [175], "matched_text": "/* 43 */ { 6, s_2_43, -1, 4, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [288], "matched_text": "/* 43 */ { 3, s_3_43, -1, 3, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [449], "matched_text": "/* 43 */ { 7, s_4_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [237], "matched_text": "/* 43 */ { 4, s_4_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [236], "matched_text": "/* 43 */ { 8, s_6_43, -1, 1, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [412], "matched_text": "/* 43 */ { 4, s_8_43, 39, 2, 0},"}, {"satd_id": 23559070, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [585], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [587], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [578], "matched_text": "                z->c++; /* next, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 6, s_6_81, 73, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [741], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [589], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [591], "matched_text": "                among_var = find_among_b(z, a_3, 13); /* substring, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [393], "matched_text": "            if (!(find_among_b(z, a_1, 6))) return 0; /* among, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [585], "matched_text": "                    z->c = ret; /* next, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [459], "matched_text": "/* 81 */ { 2, s_7_81, -1, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [389], "matched_text": "/* 81 */ { 7, s_6_81, 73, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [487], "matched_text": "/* 81 */ { 2, s_4_81, -1, 1, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [747], "matched_text": "            {   int ret = slice_from_s(z, 1, s_8); /* <-, line 81 */"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [450], "matched_text": "/* 81 */ { 6, s_8_81, 78, 2, 0},"}, {"satd_id": 23559101, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [307], "matched_text": "                z->c++; /* next, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [574], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [575], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_english.c", "lines": [582], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [572], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [299], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [301], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [303], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_german.c", "lines": [305], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 6, s_6_80, 73, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 4, s_4_80, -1, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [312], "matched_text": "                    z->c = ret; /* next, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [578], "matched_text": "            {   int m_test = z->l - z->c; /* test, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [579], "matched_text": "                {    /* gopast */ /* grouping v, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_english.c", "lines": [586], "matched_text": "            {   int ret = slice_del(z); /* delete, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [578], "matched_text": "                {   int ret = slice_from_s(z, 1, s_13); /* <-, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [305], "matched_text": "        z->ket = z->c; /* [, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [307], "matched_text": "        among_var = find_among_b(z, a_1, 7); /* substring, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [309], "matched_text": "        z->bra = z->c; /* ], line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_german.c", "lines": [311], "matched_text": "            if (ret == 0) goto lab0; /* call R1, line 80 */"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [458], "matched_text": "/* 80 */ { 3, s_7_80, -1, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [388], "matched_text": "/* 80 */ { 7, s_6_80, 73, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [486], "matched_text": "/* 80 */ { 5, s_4_80, -1, 1, 0},"}, {"satd_id": 23559106, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 80 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [449], "matched_text": "/* 80 */ { 6, s_8_80, 78, 2, 0},"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [703], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_hungarian.c", "lines": [615], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_finnish.c", "lines": [394], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_hungarian.c", "lines": [619], "matched_text": "    {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559112, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " delete, line 81 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [707], "matched_text": "            {   int ret = slice_del(z); /* delete, line 81 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [337], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [338], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [340], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_porter.c", "lines": [346], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 3, s_8_45, 39, 2, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [576], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [581], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 5, s_2_45, -1, 6, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 6, s_4_45, -1, 2, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [590], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [592], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_2_romanian.c", "lines": [601], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_KOI8_R_russian.c", "lines": [239], "matched_text": "/* 45 */ { 3, s_4_45, 44, 2, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_dutch.c", "lines": [168], "matched_text": "                    {   int ret = slice_from_s(z, 1, s_0); /* <-, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [456], "matched_text": "                z->bra = z->c; /* [, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [458], "matched_text": "                z->ket = z->c; /* ], line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_french.c", "lines": [460], "matched_text": "                {   int ret = slice_from_s(z, 1, s_7); /* <-, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [280], "matched_text": "/* 45 */ { 6, s_6_45, -1, 6, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_italian.c", "lines": [423], "matched_text": "/* 45 */ { 4, s_7_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [339], "matched_text": "                    if (z->c != z->I[0]) return 0; /* atmark, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [340], "matched_text": "                    {   int m_test = z->l - z->c; /* test, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [342], "matched_text": "                            if (ret == 0) return 0; /* call shortv, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_porter.c", "lines": [348], "matched_text": "                        int ret = insert_s(z, z->c, z->c, 1, s_4); /* <+, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_portuguese.c", "lines": [353], "matched_text": "/* 45 */ { 2, s_6_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [177], "matched_text": "/* 45 */ { 6, s_2_45, -1, 6, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [290], "matched_text": "/* 45 */ { 2, s_3_45, -1, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [451], "matched_text": "/* 45 */ { 9, s_4_45, 44, 1, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [592], "matched_text": "            {   int c3 = z->c; /* or, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [594], "matched_text": "                {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_romanian.c", "lines": [603], "matched_text": "                {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_russian.c", "lines": [239], "matched_text": "/* 45 */ { 6, s_4_45, 43, 1, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [238], "matched_text": "/* 45 */ { 4, s_6_45, -1, 9, 0}"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [414], "matched_text": "/* 45 */ { 4, s_8_45, 39, 2, 0},"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [578], "matched_text": "        {    /* gopast */ /* grouping v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [583], "matched_text": "        {    /* gopast */ /* non v, line 45 */"}, {"satd_id": 23559114, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23559135, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " do, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [564], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23559135, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " do, line 43 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [566], "matched_text": "    {   int c5 = z->c; /* do, line 43 */"}, {"satd_id": 23559201, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_ISO_8859_1_spanish.c", "lines": [586], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23559201, "satd_repo": 42763345, "satd_sha": "647c6f2829f98206ebad4b537bb4deb6623a70ce", "satd_text": " setmark p2, line 45 ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/libstemmer/src_c/stem_UTF_8_spanish.c", "lines": [588], "matched_text": "        z->I[2] = z->c; /* setmark p2, line 45 */"}, {"satd_id": 23559774, "satd_repo": 42763345, "satd_sha": "98c0972db774b1f1a066ec9f758685b52b3edf3e", "satd_text": " navtree functions created by doxygen have been overloaded in this file and\n should be loaded after the navtree.js file is loaded in header.html\n The changes below are borrowed primarily from the Eigen documentation page\n (https://github.com/bravegag/eigen-magma/blob/master/doc/eigen_navtree_hacks.js)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/navtree_hack.js", "lines": [1, 2, 3, 4], "matched_text": "// navtree functions created by doxygen have been overloaded in this file and"}, {"satd_id": 23559777, "satd_repo": 42763345, "satd_sha": "98c0972db774b1f1a066ec9f758685b52b3edf3e", "satd_text": " hack in the navigation tree ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/header.html", "lines": [18], "matched_text": "<!-- hack in the navigation tree -->"}, {"satd_id": 23559827, "satd_repo": 42763345, "satd_sha": "560477633711af92752cec2cec7f1b816507a4d2", "satd_text": " reach here only if surrogates are not used", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [396], "matched_text": "        // reach here only if surrogates are not used"}, {"satd_id": 23559865, "satd_repo": 42763345, "satd_sha": "2eafabe16e7c9aab9f56c325572db4f450c30001", "satd_text": " ncompete is not needed in plotting", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [707], "matched_text": "    frame(i,6) = 0; // ncompete is not needed in plotting"}, {"satd_id": 23559869, "satd_repo": 42763345, "satd_sha": "7bda699e3879ff69b6c00746a341542a8e494bb2", "satd_text": " FIXME: currently the prediction for root node is set by using the stats\n of either the first variable (when root is a leaf) or the max of all\n variables (when root is internal). This could result in fewer count than\n actually seen by root node and cause incorrect prediction.\n The easiest solution is to update the root node prediction after\n tree train using dependent variable distribution.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/DT_impl.hpp", "lines": [573, 574, 575, 576, 577, 578], "matched_text": "    // FIXME: currently the prediction for root node is set by using the stats"}, {"satd_id": 23559894, "satd_repo": 42763345, "satd_sha": "ca7a1799a0744e65e21f2e89c6e3f65f1efb58b4", "satd_text": " if all are too small then we finish in this layer\n FIXME: currently assuming that the first variable will\n receive all the rows. This is not necessarily True and\n could result in fewer count than actually seen by root node.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23559976, "satd_repo": 42763345, "satd_sha": "8b088da2a88401f8ab596915bbc3d662aaa0db39", "satd_text": " If the current node's risk is smaller than alpha, then the risk can\n         * never decrease more than alpha by splitting. Remove the current\n         * node's subtree and make the current node a leaf.\n        node_complexities[me] = alpha;\n        return SubTreeInfo(me, 0, risk, risk, alpha);\n    if (dt.feature_indices(me) >= 0) {\n        SubTreeInfo left = prune_tree(dt, 2*me+1, alpha,\n                                      adjusted_risk - alpha,\n                                      node_complexities);\n        double left_improve_per_split = (risk - left.sum_risk) / (left.n_split + 1);\n        double left_child_improve = risk - left.risk;\n        if (left_improve_per_split < left_child_improve)\n            left_improve_per_split = left_child_improve;\n        adjusted_risk = left_improve_per_split > estimated_complexity ?\n                        estimated_complexity : left_improve_per_split;\n\n        SubTreeInfo right = prune_tree(dt, 2*me+2, alpha, adjusted_risk - alpha,\n                                       node_complexities);\n        /*\n         * Closely follow rpart's algorithm, in rpart/src/partition.c\n         *\n         * If the average improvement of risk per split is larger\n         * than the sub-tree's average improvement, the current\n         * split is important. And we need to manually increase\n         * the value of the current split's improvement, which\n         * aims at keeping the current split if possible.\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23559977, "satd_repo": 42763345, "satd_sha": "8b088da2a88401f8ab596915bbc3d662aaa0db39", "satd_text": " FIXME: Remove after finalzing code", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [384], "matched_text": "// FIXME: Remove after finalzing code"}, {"satd_id": 23559991, "satd_repo": 42763345, "satd_sha": "32a86c68e423d24bc3148e953a80b1f1116a1498", "satd_text": " Unfortunately, the STL does not have a decrease-key function,\n so we are wasting a bit of performance here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [89, 90], "matched_text": "            // Unfortunately, the STL does not have a decrease-key function,"}, {"satd_id": 23559991, "satd_repo": 42763345, "satd_sha": "32a86c68e423d24bc3148e953a80b1f1116a1498", "satd_text": " Unfortunately, the STL does not have a decrease-key function,\n so we are wasting a bit of performance here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [126, 127], "matched_text": "            // Unfortunately, the STL does not have a decrease-key function,"}, {"satd_id": 23560000, "satd_repo": 42763345, "satd_sha": "8961f201f376a49b298d8249ec59e987452271c4", "satd_text": " complexity is not needed in plotting\n ncompete is not needed in plotting\n nsurrogate is not needed in plotting", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [518, 519, 520], "matched_text": "    frame(i,5) = 1; // complexity is not needed in plotting"}, {"satd_id": 23560013, "satd_repo": 42763345, "satd_sha": "2fcc0a5d2cf0341501d341101b9772d129317cb3", "satd_text": " ------------------------------------------------------------\n Prune the tree model using cost-complexity parameter\n ------------------------------------------------------------", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [320, 321, 322], "matched_text": "// ------------------------------------------------------------"}, {"satd_id": 23560020, "satd_repo": 42763345, "satd_sha": "2fcc0a5d2cf0341501d341101b9772d129317cb3", "satd_text": "\n     * FIXME Completely confused by what rpart is doing\n     * with the adjusted_risk\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [415, 416, 417, 418], "matched_text": "    /*"}, {"satd_id": 23560023, "satd_repo": 42763345, "satd_sha": "2fcc0a5d2cf0341501d341101b9772d129317cb3", "satd_text": "\n     * Before splitting, do a simple check. If the current\n     * node's risk is smaller than alpha, then the risk can\n     * never decrease more than alpha by splitting. No need\n     * to try split in this case.\n     *\n     * FIXME Not completely sure what 'rpart' is doing here\n     * with adjusted_risk\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/decision_tree.cpp", "lines": [393, 394, 395, 396, 397, 398, 399, 400, 401], "matched_text": "    /*"}, {"satd_id": 23560070, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/DT_impl.hpp", "lines": [848, 849], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560091, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": "TODO: Check if this default constructor works", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "src/modules/recursive_partitioning/DT_impl.hpp", "lines": [73], "matched_text": "//TODO: Check if this default constructor works"}, {"satd_id": 23560125, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": " FIXME -1 and -2 should be replaced by enum values\n -1 means leaf, -2 mean non-existing node", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/DT_proto.hpp", "lines": [99, 100], "matched_text": "    // FIXME -1 and -2 should be replaced by enum values"}, {"satd_id": 23560136, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": " FIXME perhaps we should always store index instead? (simplied expand)\n elements are of integer type for categorical", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/recursive_partitioning/DT_proto.hpp", "lines": [102, 103], "matched_text": "    // FIXME perhaps we should always store index instead? (simplied expand)"}, {"satd_id": 23560180, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": " FIXME deallocate memory for datum_ptr and mData!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [34], "matched_text": "            // FIXME deallocate memory for datum_ptr and mData!"}, {"satd_id": 23560196, "satd_repo": 42763345, "satd_sha": "bc9f6f123e649259eb8381a16ae2c56efaeb890f", "satd_text": " NativeMatrix\n MutableNativeMatrix\n MappedColumnVector and MutableMappedColumnVector\n FIXME: This looks gross. We want to express this without hurting our eyes.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23560228, "satd_repo": 42763345, "satd_sha": "7ad6d164f62bb04e35162b348f06dcbe1a2e32e8", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/Ordinal_impl.hpp", "lines": [94, 95], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560236, "satd_repo": 42763345, "satd_sha": "7ad6d164f62bb04e35162b348f06dcbe1a2e32e8", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/Ordinal_impl.hpp", "lines": [305, 306], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/GLM_impl.hpp", "lines": [88, 89], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/MultiResponseGLM_impl.hpp", "lines": [94, 95], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [73, 74], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [167, 168], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [401, 402], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560286, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [608, 609], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560294, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/GLM_impl.hpp", "lines": [207, 208], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23560294, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/MultiResponseGLM_impl.hpp", "lines": [229, 230], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23560294, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [180, 181], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23560328, "satd_repo": 42763345, "satd_sha": "5df0599968b1f30a005a2c9e15382223efbc147b", "satd_text": " In the parser, we need to call the lexer and therefore need the\n         * lexer class declaration. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/src/sql.yy", "lines": [55, 56], "matched_text": "        /* In the parser, we need to call the lexer and therefore need the"}, {"satd_id": 23560354, "satd_repo": 42763345, "satd_sha": "490408eba11c666b75c6f103fb3a4cf5621ab754", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/GLM_impl.hpp", "lines": [94, 95], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23560360, "satd_repo": 42763345, "satd_sha": "490408eba11c666b75c6f103fb3a4cf5621ab754", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/glm/GLM_impl.hpp", "lines": [206, 207], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23560411, "satd_repo": 42763345, "satd_sha": "611af24e44831852beade1307cdde1e96ad4aab9", "satd_text": " List of option tuples: long name, short name (None if no short\n name), and help string.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/PyXB.sh", "lines": [21, 22], "matched_text": "-    # List of option tuples: long name, short name (None if no short"}, {"satd_id": 23560411, "satd_repo": 42763345, "satd_sha": "611af24e44831852beade1307cdde1e96ad4aab9", "satd_text": " List of option tuples: long name, short name (None if no short\n name), and help string.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/PyXB.sh", "lines": [55, 56], "matched_text": "-    # List of option tuples: long name, short name (None if no short"}, {"satd_id": 23560418, "satd_repo": 42763345, "satd_sha": "611af24e44831852beade1307cdde1e96ad4aab9", "satd_text": " Import each test into its own module, then add the test\n cases in it to a complete suite.", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/patch/PyXB.sh", "lines": [99, 100], "matched_text": "-        # Import each test into its own module, then add the test"}, {"satd_id": 23560424, "satd_repo": 42763345, "satd_sha": "611af24e44831852beade1307cdde1e96ad4aab9", "satd_text": " Stupid little command to automatically update the version number\n where it needs to be updated.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/PyXB.sh", "lines": [15, 16], "matched_text": "-# Stupid little command to automatically update the version number"}, {"satd_id": 23560430, "satd_repo": 42763345, "satd_sha": "611af24e44831852beade1307cdde1e96ad4aab9", "satd_text": " Make sure log messages are supported", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/PyXB.sh", "lines": [75], "matched_text": "-        # Make sure log messages are supported"}, {"satd_id": 23560434, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": "throw std::runtime_error(\"Inconsistent numbers of independent \"\n                         \"variables.\");", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/clustered_errors.cpp", "lines": [107, 108], "matched_text": "        //throw std::runtime_error(\"Inconsistent numbers of independent \""}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/clustered_errors.cpp", "lines": [34, 35], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1247, 1248], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1561, 1562], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [212, 213], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [468, 469], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560438, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [868, 869], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/clustered_errors.cpp", "lines": [34, 35], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1247, 1248], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1561, 1562], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [212, 213], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [468, 469], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560444, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [868, 869], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/clustered_errors.cpp", "lines": [34, 35], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1247, 1248], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1561, 1562], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [212, 213], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [468, 469], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560452, "satd_repo": 42763345, "satd_sha": "47b4ea7423da41ebedc8fdf3dc17e39f7b3ac5f3", "satd_text": " Early return because of an exception has been \"thrown\" \n (actually \"warning\") in the previous invocations", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [868, 869], "matched_text": "    // Early return because of an exception has been \"thrown\" "}, {"satd_id": 23560472, "satd_repo": 42763345, "satd_sha": "e40bb5dda6f66261d58fc8f456ba122511889a70", "satd_text": " Avoid unused parameter warning, the function does nothing\n This function is included here since the igd optimizer uses this function\n for the binomial case.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_gaussian_igd.cpp", "lines": [96, 97, 98], "matched_text": "    // Avoid unused parameter warning, the function does nothing"}, {"satd_id": 23560480, "satd_repo": 42763345, "satd_sha": "0ac316ffc1f80362115f2e24c5b8089e64bc94a7", "satd_text": " When no split points provided, simply return 0 (single group)\n This can be used to deal with the very small strata case", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/coxph_improved.cpp", "lines": [154, 155], "matched_text": "    // When no split points provided, simply return 0 (single group)"}, {"satd_id": 23560542, "satd_repo": 42763345, "satd_sha": "a190ee3be6b727ca535898d32eedf2e11634d2c3", "satd_text": " PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat\n only need column entries for the categorical variables (others are same\n as f). Since, passing a smaller matrix into the transition function is\n faster, for the no interaction case, we don't need to input the whole\n matrix into this function. For the interaction case, since it is unknown\n which indices have interaction, we require entries for all columns in the\n matrices.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [572, 573, 574, 575, 576, 577, 578], "matched_text": "    // PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat"}, {"satd_id": 23560542, "satd_repo": 42763345, "satd_sha": "a190ee3be6b727ca535898d32eedf2e11634d2c3", "satd_text": " PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat\n only need column entries for the categorical variables (others are same\n as f). Since, passing a smaller matrix into the transition function is\n faster, for the no interaction case, we don't need to input the whole\n matrix into this function. For the interaction case, since it is unknown\n which indices have interaction, we require entries for all columns in the\n matrices.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [988, 989, 990, 991, 992, 993, 994], "matched_text": "    // PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat"}, {"satd_id": 23560542, "satd_repo": 42763345, "satd_sha": "a190ee3be6b727ca535898d32eedf2e11634d2c3", "satd_text": " PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat\n only need column entries for the categorical variables (others are same\n as f). Since, passing a smaller matrix into the transition function is\n faster, for the no interaction case, we don't need to input the whole\n matrix into this function. For the interaction case, since it is unknown\n which indices have interaction, we require entries for all columns in the\n matrices.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/marginal_cox.cpp", "lines": [308, 309, 310, 311, 312, 313, 314], "matched_text": "    // PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat"}, {"satd_id": 23560578, "satd_repo": 42763345, "satd_sha": "c11b3f812439f705e8e3fcb0ccb2d8ce20483799", "satd_text": " PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat\n only need column entries for the categorical variables (others are same\n as f). Since, passing a smaller matrix into the transition function is\n faster, for the no interaction case, we don't need to input the whole\n matrix into this function. For the interaction case, since it is unknown\n which indices have interaction, we require entries for all columns in the\n matrices.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [572, 573, 574, 575, 576, 577, 578], "matched_text": "    // PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat"}, {"satd_id": 23560578, "satd_repo": 42763345, "satd_sha": "c11b3f812439f705e8e3fcb0ccb2d8ce20483799", "satd_text": " PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat\n only need column entries for the categorical variables (others are same\n as f). Since, passing a smaller matrix into the transition function is\n faster, for the no interaction case, we don't need to input the whole\n matrix into this function. For the interaction case, since it is unknown\n which indices have interaction, we require entries for all columns in the\n matrices.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [988, 989, 990, 991, 992, 993, 994], "matched_text": "    // PERFORMANCE TWEAK: for the no interaction case, f_set_mat and f_unset_mat"}, {"satd_id": 23560611, "satd_repo": 42763345, "satd_sha": "8cdce809a1ebcfe14fa1e2f6e2c243f7927dedb4", "satd_text": " symbols in comments correspond to the design document\n N\n L\n M", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/modules/regress/marginal.cpp", "lines": [748, 749, 750, 751], "matched_text": "    // symbols in comments correspond to the design document"}, {"satd_id": 23560616, "satd_repo": 42763345, "satd_sha": "8cdce809a1ebcfe14fa1e2f6e2c243f7927dedb4", "satd_text": " X_transp_AX is actually it's inverse - this is a hack added at the end of\n the final function", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [622, 623], "matched_text": "    // X_transp_AX is actually it's inverse - this is a hack added at the end of"}, {"satd_id": 23560672, "satd_repo": 42763345, "satd_sha": "77e3bfe772443688e982929d956b6e6eb4a1c98b", "satd_text": " FIXME this enum should be accessed by all modules that may need grouping\n valid status values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [31, 32], "matched_text": "// FIXME this enum should be accessed by all modules that may need grouping"}, {"satd_id": 23560672, "satd_repo": 42763345, "satd_sha": "77e3bfe772443688e982929d956b6e6eb4a1c98b", "satd_text": " FIXME this enum should be accessed by all modules that may need grouping\n valid status values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [31, 32], "matched_text": "// FIXME this enum should be accessed by all modules that may need grouping"}, {"satd_id": 23560674, "satd_repo": 42763345, "satd_sha": "77e3bfe772443688e982929d956b6e6eb4a1c98b", "satd_text": " update marginal effects and delta using discrete differences just for\n categorical variables\n if (state.numRows == 100) {\n         dberr << \"Delta before: \" << current_delta << std::endl;\n }", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/marginal.cpp", "lines": [288, 289, 290, 291, 292], "matched_text": "    // update marginal effects and delta using discrete differences just for"}, {"satd_id": 23560794, "satd_repo": 42763345, "satd_sha": "fba49a21dbc0a808192ee3e70bdfac3e8f7a6e59", "satd_text": "\nstatic ArrayType * addNewSV(ArrayType * spvs, float8 * ind, int nsvs, int dim)\n    int i;\n    float8 * spvs_data = (float8 *)ARR_DATA_PTR(spvs);\n\n    if (nsvs % blocksize == 0) {\n        ArrayType * ret_arr =\n        construct_zero_array((nsvs+blocksize)*dim, FLOAT8OID,8);\n        float8 * ret = (float8 *)ARR_DATA_PTR(ret_arr);\n\n        memcpy(ret, spvs_data, sizeof(float8) * nsvs * dim);\n        for (i=0; i!=dim; i++) ret[nsvs*dim + i] = ind[i];\n\n        return ret_arr;\n    } else {\n        for (i=0; i!=dim; i++) spvs_data[nsvs*dim + i] = ind[i];\n        return spvs;\n    }\n// ----------------------------------------------------------------------\n\n * This is the online support vector regression learning algorithm.\n * The function updates the support vector model as it processes each new\n * This function is wrapped in an aggregate function to process all the\n * training examples stored in a table.\n    float8 p;             // prediction for data point\n    float8 diff;          // difference between p and target label\n    float8 error;         // absolute value of diff\n    float8 weight;        // the weight of new support vector\n\n    int i;\n\n    // Get the input arguments and check for errors\n    HeapTupleHeader t = PG_GETARG_HEAPTUPLEHEADER(0);\n    ArrayType * ind_arr = PG_GETARG_ARRAYTYPE_P(1);\n    float8 label = PG_GETARG_FLOAT8(2);\n    text * kernel = PG_GETARG_TEXT_P(3);\n    float8 eta = PG_GETARG_FLOAT8(4);\n    float8 nu = PG_GETARG_FLOAT8(5);\n    float8 slambda = PG_GETARG_FLOAT8(6);\n    float8 kernel_param = PG_GETARG_FLOAT8(7);\n\n    if (eta <= 0 || eta > 1 || nu <= 0 || nu > 1 || eta * slambda > 1)\n        ereport(ERROR,\n                (errcode(ERRCODE_INVALID_PARAMETER_VALUE),\n                 errmsg(\"function \\\"%s\\\" called with invalid parameter\",\n                        format_procedure(fcinfo->flinfo->fn_oid))));\n\n    if (ARR_NULLBITMAP(ind_arr) || ARR_NDIM(ind_arr) != 1 ||\n        ARR_ELEMTYPE(ind_arr) != FLOAT8OID)\n        ereport(ERROR,\n                (errcode(ERRCODE_INVALID_PARAMETER_VALUE),\n                 errmsg(\"function \\\"%s\\\" called with invalid parameter\",\n                        format_procedure(fcinfo->flinfo->fn_oid))));\n\n    float8 * ind = (float8 *)ARR_DATA_PTR(ind_arr);\n\n    // Read the attributes of the input support vector model\n    bool nil[10] = { 0,0,0,0,0,0,0,0,0,0 };\n\n    int32 inds = DatumGetInt32(GetAttributeByName(t, \"inds\", &nil[0]));\n    float8 cum_err =DatumGetFloat8(GetAttributeByName(t,\"cum_err\",&nil[1]));\n    float8 epsilon =DatumGetFloat8(GetAttributeByName(t,\"epsilon\",&nil[2]));\n    float8 rho = DatumGetFloat8(GetAttributeByName(t, \"rho\", &nil[3]));\n    float8 b = DatumGetFloat8(GetAttributeByName(t, \"b\", &nil[4]));\n    int32 nsvs = DatumGetInt32(GetAttributeByName(t, \"nsvs\", &nil[5]));\n    int32 ind_dim =DatumGetInt32(GetAttributeByName(t, \"ind_dim\", &nil[6]));\n    ArrayType * weights_arr =\n    DatumGetArrayTypeP(GetAttributeByName(t, \"weights\", &nil[7]));\n    ArrayType * supp_vecs_arr =\n    DatumGetArrayTypeP(GetAttributeByName(t,\"individuals\",&nil[8]));\n    Oid koid = DatumGetUInt32(GetAttributeByName(t, \"kernel_oid\",&nil[9]));\n\n    for (i=0; i!=10; i++)\n        if (nil[i]) elog(ERROR, \"error reading support vector model\");\n\n    // The first time this function is called, the initial state doesn't\n    // tell us the dimension of the data points; this needs to be extracted\n    // from the ind argument.\n    if (ind_dim == 0) {\n        int ndims = ARR_NDIM(ind_arr);\n        int * dims = ARR_DIMS(ind_arr);\n        ind_dim = ArrayGetNItems(ndims, dims);\n    }\n#ifndef HQ_VERSION\n    // The first time this function is called, we need to retrieve the\n    // oid of the kernel function. This is an expensive operation that\n    // we only want to do once at the begining of an aggregate.\n    if (koid == 0) {\n        Oid argtypes[3] = { FLOAT8ARRAYOID, FLOAT8ARRAYOID, FLOAT8OID};\n        List * funcname = textToQualifiedNameList(kernel);\n        koid = LookupFuncName(funcname, 3, argtypes, false);\n    }\n#endif\n    // Also, initially the weights_arr and supp_vecs_arr arrays\n    // are empty, so we can't do a dimension check until there are\n    // support vectors.\n    if (nsvs > 0) {\n        if (ARR_NULLBITMAP(weights_arr) || ARR_NDIM(weights_arr) != 1 ||\n            ARR_ELEMTYPE(weights_arr) != FLOAT8OID ||\n            ARR_NULLBITMAP(supp_vecs_arr) ||\n            ARR_NDIM(supp_vecs_arr) != 1 ||\n            ARR_ELEMTYPE(supp_vecs_arr) != FLOAT8OID)\n            ereport(ERROR,\n                    (errcode(ERRCODE_INVALID_PARAMETER_VALUE),\n                     errmsg(\"function \\\"%s\\\" called with invalid parameters\",\n                            format_procedure(fcinfo->flinfo->fn_oid))));\n    }\n\n    float8 * weights = (float8 *)ARR_DATA_PTR(weights_arr);\n\n    // This is the main regression update algorithm\n#ifdef HQ_VERSION\n    p = svm_predict_eval_hawq(kernel,weights,supp_vecs_arr,ind_arr,nsvs,ind_dim, kernel_param) + b;\n#else\n    p = svm_predict_eval(koid,weights,supp_vecs_arr,ind_arr,nsvs,ind_dim, kernel_param) + b;\n#endif\n\n    diff = label - p;\n    error = fabs(diff);\n\n    inds++;\n    cum_err = cum_err + error;\n\n    float8 cap = 0.1 + 1 / (1 - eta * slambda);\n\n    if (error > epsilon) {\n        // unlike the original algorithm in Kivinen et al, this\n        // rescaling is only done when we make a large enough error\n        for (i=0; i!=nsvs; i++) {\n            // we need to avoid underflows; cap is designed to\n            // make sure we never go below DBL_MIN\n            if (fabs(weights[i]) < (cap + 0.1) * DBL_MIN) {\n                weights[i] = 0;\n                continue;\n            }\n            weights[i] = weights[i] * (1 - eta * slambda);\n        }\n\n        weight = diff < 0 ? -eta : eta;\n        weights_arr = addNewWeight(weights_arr,weight,nsvs);\n        supp_vecs_arr = addNewSV(supp_vecs_arr,ind,nsvs,ind_dim);\n        nsvs++;\n        b = b + weight;\n        epsilon = epsilon + (1 - nu) * eta;\n    } else {\n        epsilon = epsilon - eta * nu;\n    }\n\n    // Package up the attributes and return the resultant composite object\n    Datum values[10];\n    values[0] = Int32GetDatum(inds);\n    values[1] = Float8GetDatum(cum_err);\n    values[2] = Float8GetDatum(epsilon);\n    values[3] = Float8GetDatum(rho);\n    values[4] = Float8GetDatum(b);\n    values[5] = Int32GetDatum(nsvs);\n    values[6] = Int32GetDatum(ind_dim);\n    values[7] = PointerGetDatum(weights_arr);\n    values[8] = PointerGetDatum(supp_vecs_arr);\n    values[9] = UInt32GetDatum(koid);\n\n    TupleDesc tuple;\n    if (get_call_result_type(fcinfo, NULL, &tuple) != TYPEFUNC_COMPOSITE)\n        ereport(ERROR,\n                (errcode( ERRCODE_FEATURE_NOT_SUPPORTED ),\n                 errmsg( \"function returning record called in context \"\n                        \"that cannot accept type record\" )));\n    tuple = BlessTupleDesc(tuple);\n\n    bool * isnulls = palloc0(10 * sizeof(bool));\n    HeapTuple ret = heap_form_tuple(tuple, values, isnulls);\n\n    for (i=0; i!=10; i++)\n        if (isnulls[i])\n            ereport(ERROR,\n                    (errcode(ERRCODE_INVALID_PARAMETER_VALUE),\n                     errmsg(\"function \\\"%s\\\" produced null results\",\n                            format_procedure(fcinfo->flinfo->fn_oid))));\n\n    PG_RETURN_DATUM(HeapTupleGetDatum(ret));\n// ----------------------------------------------------------------------\n\n * This is the online support vector classification algorithm.\n * The algorithm is set in the nu-SV classification setting.\n * The function updates the support vector model as it processes each new\n * This function is wrapped in an aggregate function to process all the\n * training examples stored in a table.\n    float8 p;             // label * prediction for data point\n    int i;\n\n    // Get the input arguments and check for errors\n    HeapTupleHeader t = PG_GETARG_HEAPTUPLEHEADER(0);\n    ArrayType * ind_arr = PG_GETARG_ARRAYTYPE_P(1);\n    float8 label = PG_GETARG_FLOAT8(2);\n    text * kernel = PG_GETARG_TEXT_P(3);\n    float8 eta = PG_GETARG_FLOAT8(4);     // learning rate\n    float8 nu = PG_GETARG_FLOAT8(5);  /* compression parameter; about nu\n                                       * fraction of the training data will\n                                       * become support vectors\n                                       ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23560817, "satd_repo": 42763345, "satd_sha": "58d7406ad04678d3ea45e4b1c734cdfb2f67d323", "satd_text": " work-around for HAWQ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/madpack.py", "lines": [1294], "matched_text": "                # work-around for HAWQ"}, {"satd_id": 23560844, "satd_repo": 42763345, "satd_sha": "d65d3ddfda319c9d69307a90d05efb5485d24d00", "satd_text": " we hard-code comparision and selection of the distance function since\n we are currently limited in not being able to access the catalog\n in a function executed at the segments. This is a limitation in HAWQ\n and will probably be eliminated in a future HAWQ release", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [221, 222, 223, 224], "matched_text": "    // we hard-code comparision and selection of the distance function since"}, {"satd_id": 23560864, "satd_repo": 42763345, "satd_sha": "6b841a1962ab132bef72f29a461f09e134450acb", "satd_text": " ------------------------------------------------------\n                      const HandleMap<const ColumnVector, TransparentHandle<double> >& inCoef,\n                      const ColumnVector &diagonal_of_inverse_of_X_transp_AX,\n                      const double &logLikelihood, const double &conditionNo, int status,\n                      const uint64_t &numRows);\n  public:\n                                             dbal::DoZero, dbal::ThrowBadAlloc>(arraySize(inWidthOfX));\n                                   \"states\");\n  private:\n  public:\n            // \"larger than 65535.\");\n                \"larger than 65535.\" << std::endl;\n            \"conjugate-gradient step, while updating coefficients.\"\n            \"Input data is likely of poor numerical condition.\"\n              << std::endl;\n                         decomposition.pseudoInverse().diagonal(), state.logLikelihood,\n                         decomposition.conditionNo(), state.status, state.numRows);\n  public:\n                                             dbal::DoZero, dbal::ThrowBadAlloc>(arraySize(inWidthOfX));\n                                   \"states\");\n  private:\n  public:\n            // \"larger than 65535.\");\n                \"larger than 65535.\" << std::endl;\n        // \"calulation. Input data is likely of poor numerical condition.\");\n            \" calulation. Input data is likely of poor\"\n            \" numerical condition.\"\n            \" Newton step. while updating coefficients.\"\n            \" Input data is likely of poor numerical condition.\"\n  public:\n                                             dbal::DoZero, dbal::ThrowBadAlloc>(arraySize(inWidthOfX));\n                                   \"states\");\n            + static_cast<double>(inOtherState.numRows);\n  private:\n  public:\n            // \"larger than 65535.\");\n                \" larger than 65535.\" << std::endl;\n        // \"incremental-gradient iteration. Input data is likely of poor \"\n        // \"numerical condition.\");\n            \" incremental-gradient iteration. Input data is likely of poor\"\n            \" numerical condition.\" << std::endl;\n                                         -std::abs(waldZStats(i)));\n  public:\n                                             dbal::DoZero, dbal::ThrowBadAlloc>(arraySize(inWidthOfX));\n                                   \"states\");\n  private:\n  public:\n    MutableNativeColumnVector stdErr(\n                                         -std::abs(waldZStats(i)));\n                                    \"larger than 65535.\");\n    // We first handle the trivial case where this function is called with one\n      This is written a little strangely because it prevents Eigen warnings.\n      The following two lines are equivalent to:\n      Matrix variance = bread*state.meat*bread;\n      but eigen throws a warning on that.\n     * Computing the results for robust variance\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23560928, "satd_repo": 42763345, "satd_sha": "8fb0968c1f3046c5313c14386cc61761afea4659", "satd_text": " FIXME this enum should be accessed by all modules that may need grouping", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [31], "matched_text": "// FIXME this enum should be accessed by all modules that may need grouping"}, {"satd_id": 23560933, "satd_repo": 42763345, "satd_sha": "1d9fa33ec1e74d5b37fe02efe4054a5ff36d2771", "satd_text": " TODO: Find how to resolve if there are two events with same time of death", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "src/modules/stats/cox_prop_hazards.cpp", "lines": [513], "matched_text": "    // TODO: Find how to resolve if there are two events with same time of death"}, {"satd_id": 23561076, "satd_repo": 42763345, "satd_sha": "6a544f460cd8023d82b42b2365c090a600782424", "satd_text": " Preconditioned CG: Uses an incomplete LUT preconditioner\n For the incomplete LUT preconditioner. You might want to see Eigen docs\n for factors like fill-in which will make the algorithm more suitable\n for handling tougher linear systgems", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/modules/linear_systems/sparse_linear_systems.cpp", "lines": [709, 710, 711, 712], "matched_text": "      // Preconditioned CG: Uses an incomplete LUT preconditioner"}, {"satd_id": 23561158, "satd_repo": 42763345, "satd_sha": "2ba9108b8dfca1cfab5c6a362b44fc38765d6267", "satd_text": "elog(INFO, \"meat, bread: %i, %i, %f, %f\", static_cast<int>(i),  static_cast<int>(j),  static_cast<float>(meat(i,j)),  static_cast<float>(bread(i,j)));", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/clustered_errors.cpp", "lines": [169], "matched_text": "            //elog(INFO, \"meat, bread: %i, %i, %f, %f\", static_cast<int>(i),  static_cast<int>(j),  static_cast<float>(meat(i,j)),  static_cast<float>(bread(i,j)));"}, {"satd_id": 23561255, "satd_repo": 42763345, "satd_sha": "3b36aeeaf7626e16085b6ddb444b1feb0b5a5f00", "satd_text": "\n\t\tThis is written a little strangely because it prevents Eigen warnings.\n\t\tThe following two lines are equivalent to:\n\t\tMatrix variance = bread*state.meat*bread;\n\t\tbut eigen throws a warning on that.\n\t", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1279, 1280, 1281, 1282, 1283, 1284], "matched_text": "\t/*"}, {"satd_id": 23561260, "satd_repo": 42763345, "satd_sha": "3b36aeeaf7626e16085b6ddb444b1feb0b5a5f00", "satd_text": " This should be faster than adding an identity", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1571], "matched_text": "  // This should be faster than adding an identity"}, {"satd_id": 23561264, "satd_repo": 42763345, "satd_sha": "3b36aeeaf7626e16085b6ddb444b1feb0b5a5f00", "satd_text": " TODO: Change the average code so it won't overflow", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [1517], "matched_text": "  // TODO: Change the average code so it won't overflow"}, {"satd_id": 23561266, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [71, 72], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561266, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [165, 166], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561266, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [390, 391], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561266, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [592, 593], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561278, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " \n\tRobust Linear Regression: Huber-White Sandwich estimator \n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [259, 260], "matched_text": "/* "}, {"satd_id": 23561290, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": "\n\t\tThis is written a little strangely because it prevents Eigen warnings. \n\t\tThe following two lines are equivalent to: \n\t\tMatrix variance = bread*state.meat*bread;\n\t\tbut eigen throws a warning on that. \n\t", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [612, 613, 614, 615, 616, 617], "matched_text": "\t/*"}, {"satd_id": 23561292, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": "Compute the robust variance with the White sandwich estimator", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [606], "matched_text": "\t//Compute the robust variance with the White sandwich estimator"}, {"satd_id": 23561304, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": "*\n     * @brief Initialize the robust variance calculation state.\n     *\n     * This function is only called for the first iteration, for the first row.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [225, 226, 227, 228, 229], "matched_text": "    /**"}, {"satd_id": 23561326, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " Note: The above 2 lines could have been written as:\n        ColumnVector t1 = -coef*x;\n\n        but this creates warnings. These warnings are somehow related to the factor\n        that x is of an immutable type. The following alternative could resolve\n        the warnings (although not necessary the best alternative):\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [425, 426, 427, 428, 429, 430, 431], "matched_text": "    /* Note: The above 2 lines could have been written as:"}, {"satd_id": 23561326, "satd_repo": 42763345, "satd_sha": "1d70aa9c3c8803a9496d8fe232808865b0b1d0ca", "satd_text": " Note: The above 2 lines could have been written as:\n        ColumnVector t1 = -coef*x;\n\n        but this creates warnings. These warnings are somehow related to the factor\n        that x is of an immutable type. The following alternative could resolve\n        the warnings (although not necessary the best alternative):\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [619, 620, 621, 622, 623, 624, 625], "matched_text": "    /* Note: The above 2 lines could have been written as:"}, {"satd_id": 23561357, "satd_repo": 42763345, "satd_sha": "a5c80c1a59f50266ca73986d9e686248a20bed2a", "satd_text": " Note that we use CASCADE option here. This might be dangerous because\n it may drop some undetected dependent objects (eg. UDCast, UDOp, etc)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/upgrade_util.py", "lines": [242, 243], "matched_text": "        # Note that we use CASCADE option here. This might be dangerous because"}, {"satd_id": 23561434, "satd_repo": 42763345, "satd_sha": "60e85ba6b509153a9a254f68a7026ef47a1ce28a", "satd_text": "\n  Some utility functions shared by multiple optimizers\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/share/shared_utils.hpp", "lines": [2, 3, 4], "matched_text": "/*"}, {"satd_id": 23561446, "satd_repo": 42763345, "satd_sha": "60e85ba6b509153a9a254f68a7026ef47a1ce28a", "satd_text": " avoid unused parameter warning,\n actually does absolutely nothing", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_gaussian_igd.cpp", "lines": [64, 65], "matched_text": "    // avoid unused parameter warning,"}, {"satd_id": 23561446, "satd_repo": 42763345, "satd_sha": "60e85ba6b509153a9a254f68a7026ef47a1ce28a", "satd_text": " avoid unused parameter warning,\n actually does absolutely nothing", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_gaussian_igd.cpp", "lines": [78, 79], "matched_text": "    // avoid unused parameter warning,"}, {"satd_id": 23561458, "satd_repo": 42763345, "satd_sha": "08b9c8ec09fc07347063e85e34d19c5b11d6cb35", "satd_text": " solve in place, subject to change if gradient is somehow needed\n ldlt decomposition is chosen for its numerical stability, see \n http://eigen.tuxfamily.org/dox-3.0/TutorialLinearAlgebra.html", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/algo/newton.hpp", "lines": [74, 75, 76], "matched_text": "    // solve in place, subject to change if gradient is somehow needed"}, {"satd_id": 23561512, "satd_repo": 42763345, "satd_sha": "08b9c8ec09fc07347063e85e34d19c5b11d6cb35", "satd_text": " lambda is changing if warm-up is used\n so needs to update it everytime", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/elastic_net_gaussian_fista.cpp", "lines": [185, 186], "matched_text": "        // lambda is changing if warm-up is used"}, {"satd_id": 23561553, "satd_repo": 42763345, "satd_sha": "08b9c8ec09fc07347063e85e34d19c5b11d6cb35", "satd_text": " used for mirror truncation\n used for remove tiny values", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/elastic_net/state/igd.hpp", "lines": [128, 129], "matched_text": "    typename HandleTraits<Handle>::ColumnVectorTransparentHandleMap theta; // used for mirror truncation"}, {"satd_id": 23561600, "satd_repo": 42763345, "satd_sha": "ea25812c0b3a0eca89647f41b9ff6f4c44f8b69b", "satd_text": " FIXME: HAYING: stepsize is hard-coded here now", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [777], "matched_text": "\t\t// FIXME: HAYING: stepsize is hard-coded here now"}, {"satd_id": 23561603, "satd_repo": 42763345, "satd_sha": "790237fa9226ec16940024f61d898ac09e44f0b3", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [68, 69], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561603, "satd_repo": 42763345, "satd_sha": "790237fa9226ec16940024f61d898ac09e44f0b3", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [162, 163], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561603, "satd_repo": 42763345, "satd_sha": "790237fa9226ec16940024f61d898ac09e44f0b3", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [396, 397], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23561637, "satd_repo": 42763345, "satd_sha": "ffd0161fa39c4b3329cf4a79a26c88b5e800ff13", "satd_text": "*\n     * @brief Rebind to a new storage array.\n     *\n     * Array layout (iteration refers to one aggregate-function call):\n     * Inter-iteration components (updated in final function):\n     * - 0: dimension (dimension of the model)\n     * - 1: stepsize (step size of gradient steps)\n     * - 2: lambda (regularization term)\n     * - 3: totalRows (needed for amortizing lambda)\n     * - 4: model (coefficients)\n     *\n     * Intra-iteration components (updated in transition step):\n     * - 4 + dimension: numRows (number of rows processed in this iteration)\n     * - 5 + dimension: loss (sum of loss for each rows)\n     * - 6 + dimension: incrModel (volatile model for incrementally update)\n     * - 6 + 2 * dimension: gradient (volatile temp variable to have model type)\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/type/state.hpp", "lines": [352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "matched_text": "    /**"}, {"satd_id": 23561643, "satd_repo": 42763345, "satd_sha": "4ee6c4446c30112c3a094eb8f569131584c97890", "satd_text": "\n     * call ExtractDatumLen to make sure enough space, this checking is unnecessary,\n     * it is used to prevent gcc from optimizing out the ExtractDatumLen function call.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [263, 264, 265, 266], "matched_text": "    /*"}, {"satd_id": 23561669, "satd_repo": 42763345, "satd_sha": "6eba45f43fc920c71224563085566993ca236815", "satd_text": "\n     * We'd better make sure that this struct is 8bytes aligned,\n     * If the there is no the reserved field, (char*)&fmtransval.storage - (char*)&fmtransval\n     * is not equal to sizeof(fmtransval). This is not coincident with one's intuition\n     * and is also error prone when coding.\n     *\n     * Another reason to make the address of storage 8bytes aligned is that when we\n     * store a structure in storage, 8bytes aligned address leads high performance when\n     * cpu access main memory.\n     *\n     * If there is any chance someone may change the compiler option -fpack-struct,\n     * for struct like this, we'd better make every field well aligned and packed.\n     *\n     * The default option makes sure that the first byte address of 8bytes types like int64\n     * are 8bytes aligned. And 4bytes types like int32 are 4bytes aligned. So we only\n     * need to make sure the first byte address of storage 8bytes aligned.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/fm.c", "lines": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "matched_text": "    /*"}, {"satd_id": 23561671, "satd_repo": 42763345, "satd_sha": "6eba45f43fc920c71224563085566993ca236815", "satd_text": "\n     * the following checking may be inefficiency, but by doing this centrally,\n     * we can avoid spreading the checking code everywhere.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/fm.c", "lines": [120, 121, 122, 123], "matched_text": "    /*"}, {"satd_id": 23561671, "satd_repo": 42763345, "satd_sha": "6eba45f43fc920c71224563085566993ca236815", "satd_text": "\n     * the following checking may be inefficiency, but by doing this centrally,\n     * we can avoid spreading the checking code everywhere.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [88, 89, 90, 91], "matched_text": "    /*"}, {"satd_id": 23561675, "satd_repo": 42763345, "satd_sha": "a194c199cd0988026432d56259edd4a32919c235", "satd_text": "*\n * @brief Compute the k columns of a matrix that are closest to a vector\n *\n * For performance, we cheat here: For the following four distance functions, we\n * take a special shortcut.\n * FIXME: FunctionHandle should be tuned so that this shortcut no longer\n * impacts performance by more than, say, ~10%.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [147, 148, 149, 150, 151, 152, 153, 154], "matched_text": "/**"}, {"satd_id": 23561679, "satd_repo": 42763345, "satd_sha": "a194c199cd0988026432d56259edd4a32919c235", "satd_text": " Unfortunately, the STL does not have a decrease-key function,\n so we are wasting a bit of performance here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [78, 79], "matched_text": "            // Unfortunately, the STL does not have a decrease-key function,"}, {"satd_id": 23561709, "satd_repo": 42763345, "satd_sha": "27e3d53370f8d12f8752387d074413b3beeab983", "satd_text": " For performance, we cheat here: For the following four distance\n functions, we take a special shortcut\n FIXME: FunctionHandle should be tuned so that this shortcut no longer\n     impacts performance by more than, say, ~10%.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [102, 103, 104, 105], "matched_text": "    // For performance, we cheat here: For the following four distance"}, {"satd_id": 23561721, "satd_repo": 42763345, "satd_sha": "a28a866ed0327fda55a2c852f81eda0489de0abf", "satd_text": "*\n     * @brief Trivial (empty) subclass of AnyType that enforces lazy conversion\n     *     to PostgreSQL Datums\n     *\n     * The purpose to use arguments of type FunctionArgument instead of type\n     * AnyType is to enforce a \"lazy\" conversion to PostgreSQL Datums. This is\n     * solely for performance reasons: When a C++ function is called via a\n     * FunctionHandle, then it is desirable to keep the reference instead of\n     * temporarily converting to a backend representation.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/FunctionHandle_proto.hpp", "lines": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "matched_text": "    /**"}, {"satd_id": 23561780, "satd_repo": 42763345, "satd_sha": "44790adfd72c266eb267d78e4d369b9c34e2c241", "satd_text": " the lbfgs minimize function, we want to maximize loglikelihood", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/linear_crf.cpp", "lines": [875], "matched_text": "    // the lbfgs minimize function, we want to maximize loglikelihood"}, {"satd_id": 23561810, "satd_repo": 42763345, "satd_sha": "44790adfd72c266eb267d78e4d369b9c34e2c241", "satd_text": " FIXME: We currently need to copy the coefficient to a native array\n This should be transparent to user code", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/crf/linear_crf.cpp", "lines": [935, 936], "matched_text": "    // FIXME: We currently need to copy the coefficient to a native array"}, {"satd_id": 23561834, "satd_repo": 42763345, "satd_sha": "eb7490f1968b846b2c2b4b6b2e2f72b74cef9f7f", "satd_text": " the invoker function will handle the exceptions from this function\n TODO: Don't we need args for \"next\"?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [116, 117], "matched_text": "    // the invoker function will handle the exceptions from this function"}, {"satd_id": 23561838, "satd_repo": 42763345, "satd_sha": "eb7490f1968b846b2c2b4b6b2e2f72b74cef9f7f", "satd_text": " TODO: we may use a better way to handle the errors\n     * from SRF_IS_FIRSTCALL and SRF_PERCALL_SETUP\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [99, 100, 101], "matched_text": "    /* TODO: we may use a better way to handle the errors"}, {"satd_id": 23561852, "satd_repo": 42763345, "satd_sha": "361b03d7730dca7a708445ce0d25b0863267eb33", "satd_text": "We cast the gradient into a vector to make the Newton step calculations much easier.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [296], "matched_text": "    //We cast the gradient into a vector to make the Newton step calculations much easier."}, {"satd_id": 23561860, "satd_repo": 42763345, "satd_sha": "361b03d7730dca7a708445ce0d25b0863267eb33", "satd_text": " Note: The above 2 lines could have been written as:\n        ColumnVector t1 = -coef*x;\n\n        but this creates warnings. These warnings are somehow related to the factor\n        that x is of an immutable type. The following alternative could resolve\n        the warnings (although not necessary the best alternative):\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [282, 283, 284, 285, 286, 287, 288], "matched_text": "    /* Note: The above 2 lines could have been written as:"}, {"satd_id": 23561878, "satd_repo": 42763345, "satd_sha": "361b03d7730dca7a708445ce0d25b0863267eb33", "satd_text": " We use the intra-iteration field gradient for storing the diagonal\n of X^T A X, so that we don't have to recompute it in the result function.\n Likewise, we store the condition number.\n FIXME: This feels a bit like a hack.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/multilogistic.cpp", "lines": [397, 398, 399, 400], "matched_text": "    // We use the intra-iteration field gradient for storing the diagonal"}, {"satd_id": 23561952, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " Specialize for the maximum-alignment dummy type. There is no supported\n architecture at the moment for which 16 bytes would not be enough.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/ByteStream_proto.hpp", "lines": [22, 23], "matched_text": "// Specialize for the maximum-alignment dummy type. There is no supported"}, {"satd_id": 23561973, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " FIXME: Remove this.\n\ntemplate <class Derived, class Storage, template <class T> class TypeTraits>\ninline\nvoid\nDynamicStructBase<Derived,\n    DynamicStructRootContainer<Storage, TypeTraits>, Mutable>::initialize() {\n\n    mByteStream.seek(0, std::ios_base::beg);\n    mByteStream >> static_cast<Derived&>(*this);\n    if (mByteStream.eof()) {\n        typename Container_type::StreamBuf_type& streamBuf\n            = mContainer.streambuf();\n        streamBuf.resize(mByteStream.tell(), streamBuf.size());\n        mByteStream.seek(0, std::ios_base::beg);\n        mByteStream >> static_cast<Derived&>(*this);\n\n        if (mByteStream.eof())\n            throw std::runtime_error(\"Out-of-bounds byte-string access \"\n                \"detected during initialization of mutable dynamic struct.\");\n    }\n}\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/DynamicStruct_impl.hpp", "lines": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "matched_text": "/* FIXME: Remove this."}, {"satd_id": 23562005, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " FIXME: Eigen can only be included here because it depends on the memory\n allocator", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/dbal_impl.hpp", "lines": [10, 11], "matched_text": "// FIXME: Eigen can only be included here because it depends on the memory"}, {"satd_id": 23562016, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " FIXME: This looks gross. We want to express this without hurting our eyes.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits_impl.hpp", "lines": [345], "matched_text": "// FIXME: This looks gross. We want to express this without hurting our eyes."}, {"satd_id": 23562019, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [67, 68], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23562019, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " The following checks were introduced with MADLIB-138. It still seems\n useful to have clear error messages in case of infinite input values.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/LinearRegression_impl.hpp", "lines": [158, 159], "matched_text": "    // The following checks were introduced with MADLIB-138. It still seems"}, {"satd_id": 23562023, "satd_repo": 42763345, "satd_sha": "eb655f41dcad0197ad5f503fa3af86ff4d80a51f", "satd_text": " FIXME: This looks gross. We want to express this without hurting our eyes.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits_impl.hpp", "lines": [345], "matched_text": "// FIXME: This looks gross. We want to express this without hurting our eyes."}, {"satd_id": 23562143, "satd_repo": 42763345, "satd_sha": "192371a277bef7fbaeaf26d76574ec7028f1ec06", "satd_text": " Having zero checking here to reduce dependency to the caller.\n This can be removed if it affects performance in the future,\n with the expectation that callers should do the zero checking.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/algo/igd.hpp", "lines": [58, 59, 60], "matched_text": "    // Having zero checking here to reduce dependency to the caller."}, {"satd_id": 23562187, "satd_repo": 42763345, "satd_sha": "192371a277bef7fbaeaf26d76574ec7028f1ec06", "satd_text": " HAYING: A chance for improvement by reusing the e computed in gradient.\n Perhaps we can add a book-keeping data structure in the model...\n Note: the value of e is different from the e in gradient if the\n model passed in is different, which IS the case for IGD\n Note 2: this can actually be a problem of having the computation \n around model (algo/ & task/) detached from the model classes ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/task/lmf.hpp", "lines": [84, 85, 86, 87, 88, 89], "matched_text": "    // HAYING: A chance for improvement by reusing the e computed in gradient."}, {"satd_id": 23562188, "satd_repo": 42763345, "satd_sha": "192371a277bef7fbaeaf26d76574ec7028f1ec06", "satd_text": " Please refer to the design document for an explanation of the following", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/modules/convex/task/lmf.hpp", "lines": [70], "matched_text": "    // Please refer to the design document for an explanation of the following"}, {"satd_id": 23562190, "satd_repo": 42763345, "satd_sha": "192371a277bef7fbaeaf26d76574ec7028f1ec06", "satd_text": " Not currently used.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/convex/task/lmf.hpp", "lines": [94], "matched_text": "// Not currently used."}, {"satd_id": 23562244, "satd_repo": 42763345, "satd_sha": "1afb10fa907f3ecabf288465131c2bc931a1e8be", "satd_text": " Import TR1 names (currently used from boost). This can go away once we make\n the switch to C++11.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/sample/weighted_sample.cpp", "lines": [16, 17], "matched_text": "// Import TR1 names (currently used from boost). This can go away once we make"}, {"satd_id": 23562249, "satd_repo": 42763345, "satd_sha": "1afb10fa907f3ecabf288465131c2bc931a1e8be", "satd_text": " FIXME: Once we have more modular states (independent of transition/merge\n function), implement using the logic from the transition function", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/sample/weighted_sample.cpp", "lines": [87, 88], "matched_text": "    // FIXME: Once we have more modular states (independent of transition/merge"}, {"satd_id": 23562275, "satd_repo": 42763345, "satd_sha": "a3461c2de404542016d12fd7f1a457c5ab30ec78", "satd_text": " It might actually be faster if (state.num.sum() > 0) was instead moved\n to the end of both of the following two if-clauses (as it is a rare\n condition). But we go for readability here.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [75, 76, 77], "matched_text": "        // It might actually be faster if (state.num.sum() > 0) was instead moved"}, {"satd_id": 23562285, "satd_repo": 42763345, "satd_sha": "e55ff9e047bbdd0d07f3db55176164dc522b457d", "satd_text": " FIXME: it would be nice to declare this as a template function (so it\n works for dense and sparse vectors), and the C++ AL takes care of the\n rest...", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [75, 76, 77], "matched_text": "    // FIXME: it would be nice to declare this as a template function (so it"}, {"satd_id": 23562285, "satd_repo": 42763345, "satd_sha": "e55ff9e047bbdd0d07f3db55176164dc522b457d", "satd_text": " FIXME: it would be nice to declare this as a template function (so it\n works for dense and sparse vectors), and the C++ AL takes care of the\n rest...", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [86, 87, 88], "matched_text": "    // FIXME: it would be nice to declare this as a template function (so it"}, {"satd_id": 23562285, "satd_repo": 42763345, "satd_sha": "e55ff9e047bbdd0d07f3db55176164dc522b457d", "satd_text": " FIXME: it would be nice to declare this as a template function (so it\n works for dense and sparse vectors), and the C++ AL takes care of the\n rest...", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [97, 98, 99], "matched_text": "    // FIXME: it would be nice to declare this as a template function (so it"}, {"satd_id": 23562285, "satd_repo": 42763345, "satd_sha": "e55ff9e047bbdd0d07f3db55176164dc522b457d", "satd_text": " FIXME: it would be nice to declare this as a template function (so it\n works for dense and sparse vectors), and the C++ AL takes care of the\n rest...", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/linalg/metric.cpp", "lines": [108, 109, 110], "matched_text": "    // FIXME: it would be nice to declare this as a template function (so it"}, {"satd_id": 23562328, "satd_repo": 42763345, "satd_sha": "e55ff9e047bbdd0d07f3db55176164dc522b457d", "satd_text": " FIXME: The following include should be further up. Currently dependent on\n Allocator", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [210, 211], "matched_text": "// FIXME: The following include should be further up. Currently dependent on"}, {"satd_id": 23562337, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": " FIXME: MADLIB-513: Pending Boost bug 6934, we currently do not support the", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [108], "matched_text": "// FIXME: MADLIB-513: Pending Boost bug 6934, we currently do not support the"}, {"satd_id": 23562337, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": " FIXME: MADLIB-513: Pending Boost bug 6934, we currently do not support the", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [30], "matched_text": "// FIXME: MADLIB-513: Pending Boost bug 6934, we currently do not support the"}, {"satd_id": 23562343, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to override the domain check for\n *     quantile\n *\n * FIXME: No boost bug filed so far\n * Boost does not catch the case where scale is NaN.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [648, 649, 650, 651, 652, 653, 654], "matched_text": "/**"}, {"satd_id": 23562346, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": " FIXME: MADLIB-513: Pending Boost bug 6934, we currently do not support the\n No need to make this visable beyond this translation unit.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23562347, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to check the corner cases for the pdf\n *\n * FIXME: No boost bug filed so far\n ", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/modules/prob/boost.hpp", "lines": [711, 712, 713, 714, 715], "matched_text": "/**"}, {"satd_id": 23562347, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to check the corner cases for the pdf\n *\n * FIXME: No boost bug filed so far\n ", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/modules/prob/boost.hpp", "lines": [765, 766, 767, 768, 769], "matched_text": "/**"}, {"satd_id": 23562347, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to check the corner cases for the pdf\n *\n * FIXME: No boost bug filed so far\n ", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/modules/prob/boost.hpp", "lines": [808, 809, 810, 811, 812], "matched_text": "/**"}, {"satd_id": 23562348, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to override the domain check for\n *     quantile\n *\n * FIXME: No boost bug filed so far\n * Boost does not catch the case where lambda is NaN.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [422, 423, 424, 425, 426, 427, 428], "matched_text": "/**"}, {"satd_id": 23562353, "satd_repo": 42763345, "satd_sha": "66b39ba8c049adafe9ec53fcfbaeae30d6bb4832", "satd_text": "*\n * @brief Due to boost bug XXX, we need to override the domain check for\n *     quantile\n *\n * FIXME: No boost bug filed so far\n * Boost does not catch the case where the location parameter is NaN.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [458, 459, 460, 461, 462, 463, 464], "matched_text": "/**"}, {"satd_id": 23562368, "satd_repo": 42763345, "satd_sha": "9184beedcde6eaba85336cf65466184bfc0e3a61", "satd_text": "*\n * @brief Due to boost bug XXX, we need to override the domain check for\n *     quantile\n *\n * FIXME: No boost bug filed so far\n * Boost does not catch the case where sigma is NaN.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [333, 334, 335, 336, 337, 338, 339], "matched_text": "/**"}, {"satd_id": 23562394, "satd_repo": 42763345, "satd_sha": "2a44075df1ce72b2b803f15d2b722d41e9c51272", "satd_text": " Some Boost error messages contain a space before the punctuation mark,\n which we will remove.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/BoostIntegration/MathToolkit_impl.hpp", "lines": [59, 60], "matched_text": "    // Some Boost error messages contain a space before the punctuation mark,"}, {"satd_id": 23562419, "satd_repo": 42763345, "satd_sha": "2a44075df1ce72b2b803f15d2b722d41e9c51272", "satd_text": " FIXME: If A is approximately 1, we will face a loss of significance.\n         *  ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [249, 250], "matched_text": "        /* FIXME: If A is approximately 1, we will face a loss of significance."}, {"satd_id": 23562455, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " In the following we make several definitions that allow certain object\n methods to be called as a plain functions. This makes using Eigen more\n similar to Armadillo.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenIntegration/EigenIntegration.hpp", "lines": [44, 45, 46], "matched_text": "// In the following we make several definitions that allow certain object"}, {"satd_id": 23562483, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " It is an anonymous type, but PostgreSQL has it in its own cache\n In this case lookup_rowtype_tupdesc_noerror(RECORDOID, ...)\n does currently not perform any actions that could rise an exception.\n We might not want to rely on that, however (at the expense of\n performance).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_impl.hpp", "lines": [311, 312, 313, 314, 315], "matched_text": "        // It is an anonymous type, but PostgreSQL has it in its own cache"}, {"satd_id": 23562487, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " If the function is SECURITY DEFINER then fmgr_info_cxt() has\n set up flinfo so that what we will actually\n call fmgr_security_definer() in fmgr.c, which then calls the\n \"real\" function. Because of this additional layer, and since\n fmgr_security_definer() uses the fn_extra field of\n struct FmgrInfo in an opaque way (it points to a struct that is\n local to fmgr.c), we only initialize the cache if the function\n is *not* SECURITY DEFINER.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_impl.hpp", "lines": [521, 522, 523, 524, 525, 526, 527, 528], "matched_text": "            // If the function is SECURITY DEFINER then fmgr_info_cxt() has"}, {"satd_id": 23562501, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " See get_func_arg_info(). We expect the arrays to be 1-D\n arrays of the right types; verify that.\n Ensure that array is not toasted. We do not worry about\n a possible memory leak here. This code will be run only\n once per entry function (into the C++ AL) and query, and\n memory will already be garbage collected once the currenty\n entry point is left.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_impl.hpp", "lines": [240, 241, 242, 243, 244, 245, 246], "matched_text": "                // See get_func_arg_info(). We expect the arrays to be 1-D"}, {"satd_id": 23562511, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " BACKEND: Since we pass HASH_FIND, this function call will never perform\n an allocation. There is nothing in the code path that would raise an\n exception (including oid_hash()), so we are *not* wrapping in a PG_TRY()\n block for performance reasons.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_impl.hpp", "lines": [134, 135, 136, 137], "matched_text": "    // BACKEND: Since we pass HASH_FIND, this function call will never perform"}, {"satd_id": 23562511, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " BACKEND: Since we pass HASH_FIND, this function call will never perform\n an allocation. There is nothing in the code path that would raise an\n exception (including oid_hash()), so we are *not* wrapping in a PG_TRY()\n block for performance reasons.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_impl.hpp", "lines": [203, 204, 205, 206], "matched_text": "    // BACKEND: Since we pass HASH_FIND, this function call will never perform"}, {"satd_id": 23562523, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": "*\n * @brief Cached information about the PostgreSQL system catalog\n *\n * In order to guarantee tyoe-safety through reflection/type-introspection, the\n * C++ AL has to call many PostgreSQL functions that are tagged as expensive due\n * to lookups in the type cache or even in the system catalog. We therefore wrap\n * all catalog lookups in this class and store the results in our own cache.\n * There is one cache per entry point into the C++ AL, i.e., one per function\n * that is called from the backend. If a UDF based on this AL calls another such\n * UDF, the same cache is reused.\n * Each cache is stored in the \\c fn_extra field of struct \\c FmgrInfo (or in\n * the \\c user_fctx field of struct \\c FuncCallContext). As such, the cache only\n * lives till the end of the current query (see\n * <http://www.postgresql.org/docs/current/static/plhandler.html>).\n *\n * @note\n *     In order to not leave defined C++ behavior, this must be a plain-old data\n *     (POD) for the following reason: We store a pointer to our cached\n *     information in the fn_extra field of struct FmgrInfo (or in\n *     the user_fctx field of struct FuncCallContext). We cannot do any\n *     cleanup but instead rely on the PostgreSQL garbage collector.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_proto.hpp", "lines": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "matched_text": "/**"}, {"satd_id": 23562528, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": "*\n     * Tuple descriptor if it's a composite type (row type).  NULL if not\n     * composite. This is not a reference-counted TupleDesc and we rely\n     * on the PostgreSQL garbage collection for cleanup.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/SystemInformation_proto.hpp", "lines": [55, 56, 57, 58, 59], "matched_text": "    /**"}, {"satd_id": 23562554, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " FIXME: This seems excessively complicated. It should be simpler.\n Template specification has to be done by dbconnector", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenIntegration/HandleMap_proto.hpp", "lines": [16, 17], "matched_text": "// FIXME: This seems excessively complicated. It should be simpler."}, {"satd_id": 23562568, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " FIXME: This seems excessively complicated. It should be simpler.\n Template specification has to be done by dbconnector", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenIntegration/HandleMap_proto.hpp", "lines": [16, 17], "matched_text": "// FIXME: This seems excessively complicated. It should be simpler."}, {"satd_id": 23562582, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " Simplified macro to declare an OID <-> C++ type mapping. The return type name\n and the SystemInformation pointer are always NULL", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [64, 65], "matched_text": "// Simplified macro to declare an OID <-> C++ type mapping. The return type name"}, {"satd_id": 23562585, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " FIXME: The following is not the right place...", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [191], "matched_text": "// FIXME: The following is not the right place..."}, {"satd_id": 23562586, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " We need to make _oldContext volatile because if an exception occurs, the\n register holding its value might have been overwritten (and the variable\n value is read from in the PG_CATCH block). On the other hand, no need to make\n _errorData volatile: If no PG exception occurs, no register will be\n overwritten. If an exception occurs, _errorData will be set before it is read\n again.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [97, 98, 99, 100, 101, 102], "matched_text": "// We need to make _oldContext volatile because if an exception occurs, the"}, {"satd_id": 23562588, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " namespace eigen_integration\n namespace dbal\n namespace madlib\n FIXME: This is messy, having Sparse vector here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23562592, "satd_repo": 42763345, "satd_sha": "24622004a771897eec5906a6505218976e04f305", "satd_text": " FIXME: This should be further up. Currently dependency on Allocator", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [188], "matched_text": "// FIXME: This should be further up. Currently dependency on Allocator"}, {"satd_id": 23562676, "satd_repo": 42763345, "satd_sha": "0f054a8456f97fdad351e99705f20e6b8ad6c00d", "satd_text": " Unfortunately, we have to clean up some #defines in PostgreSQL headers. They\n interfere with C++ code.\n From c.h:", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [44, 45, 46], "matched_text": "// Unfortunately, we have to clean up some #defines in PostgreSQL headers. They"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562705, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562708, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [79], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562708, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [191], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562708, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [103], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562720, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562731, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562744, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": "*\n * @brief Update the corrected sum of squares\n *\n * For numerical stability, we should not compute the sample variance in the\n * naive way. The literature has many examples where this gives bad results\n * even with moderately sized inputs.\n *\n * See:\n *\n * B. P. Welford (1962). \"Note on a method for calculating corrected sums of\n * squares and products\". Technometrics 4(3):419\u2013420.\n *\n * Chan, Tony F.; Golub, Gene H.; LeVeque, Randall J. (1979), \"Updating\n * Formulae and a Pairwise Algorithm for Computing Sample Variances.\", Technical\n * Report STAN-CS-79-773, Department of Computer Science, Stanford University.\n * ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "matched_text": "/**"}, {"satd_id": 23562744, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": "*\n * @brief Update the corrected sum of squares\n *\n * For numerical stability, we should not compute the sample variance in the\n * naive way. The literature has many examples where this gives bad results\n * even with moderately sized inputs.\n *\n * See:\n *\n * B. P. Welford (1962). \"Note on a method for calculating corrected sums of\n * squares and products\". Technometrics 4(3):419\u2013420.\n *\n * Chan, Tony F.; Golub, Gene H.; LeVeque, Randall J. (1979), \"Updating\n * Formulae and a Pairwise Algorithm for Computing Sample Variances.\", Technical\n * Report STAN-CS-79-773, Department of Computer Science, Stanford University.\n * ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "matched_text": "/**"}, {"satd_id": 23562752, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Think of using proper iterators. Add some safety. Overflow checks.", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "src/modules/stats/one_way_anova.cpp", "lines": [114], "matched_text": "    // FIXME: Think of using proper iterators. Add some safety. Overflow checks."}, {"satd_id": 23562753, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability\n See Ogita et al., \"Accurate Sum and Dot Product\", SIAM Journal on\n Scientific Computing (SISC), 26(6):1955-1988, 2005.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [191, 192, 193], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562753, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability\n See Ogita et al., \"Accurate Sum and Dot Product\", SIAM Journal on\n Scientific Computing (SISC), 26(6):1955-1988, 2005.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [103, 104, 105], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562754, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Same function used for t_test. Factor out.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [164], "matched_text": "// FIXME: Same function used for t_test. Factor out."}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562755, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562773, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": "*\n * @brief Update the corrected sum of squares\n *\n * For numerical stability, we should not compute the sample variance in the\n * naive way. The literature has many examples where this gives bad results\n * even with moderately sized inputs.\n *\n * See:\n *\n * B. P. Welford (1962). \"Note on a method for calculating corrected sums of\n * squares and products\". Technometrics 4(3):419\u2013420.\n *\n * Chan, Tony F.; Golub, Gene H.; LeVeque, Randall J. (1979), \"Updating\n * Formulae and a Pairwise Algorithm for Computing Sample Variances.\", Technical\n * Report STAN-CS-79-773, Department of Computer Science, Stanford University.\n * ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "matched_text": "/**"}, {"satd_id": 23562773, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": "*\n * @brief Update the corrected sum of squares\n *\n * For numerical stability, we should not compute the sample variance in the\n * naive way. The literature has many examples where this gives bad results\n * even with moderately sized inputs.\n *\n * See:\n *\n * B. P. Welford (1962). \"Note on a method for calculating corrected sums of\n * squares and products\". Technometrics 4(3):419\u2013420.\n *\n * Chan, Tony F.; Golub, Gene H.; LeVeque, Randall J. (1979), \"Updating\n * Formulae and a Pairwise Algorithm for Computing Sample Variances.\", Technical\n * Report STAN-CS-79-773, Department of Computer Science, Stanford University.\n * ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "matched_text": "/**"}, {"satd_id": 23562780, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability\n See Ogita et al., \"Accurate Sum and Dot Product\", SIAM Journal on\n Scientific Computing (SISC), 26(6):1955-1988, 2005.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [191, 192, 193], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562780, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: Use compensated sums for numerical stability\n See Ogita et al., \"Accurate Sum and Dot Product\", SIAM Journal on\n Scientific Computing (SISC), 26(6):1955-1988, 2005.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [103, 104, 105], "matched_text": "    // FIXME: Use compensated sums for numerical stability"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562781, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/chi_squared_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/kolmogorov_smirnov_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/mann_whitney_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.cpp", "lines": [26, 27], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/one_way_anova.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.cpp", "lines": [27, 28], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/t_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562794, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562798, "satd_repo": 42763345, "satd_sha": "12f1713c084200ea8b3c5053fa7196e4f060e423", "satd_text": " FIXME: The following epsilon is hard-coded", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/stats/wilcoxon_signed_rank_test.cpp", "lines": [80], "matched_text": "    // FIXME: The following epsilon is hard-coded"}, {"satd_id": 23562830, "satd_repo": 42763345, "satd_sha": "814469bc5569d3f89e102d06d0826f3b470fed7a", "satd_text": " initialize the four temporary arrays", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/textfex_viterbi/src/pg_gp/viterbi_top1.c", "lines": [46], "matched_text": "        // initialize the four temporary arrays"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/kolmogorov.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/kolmogorov.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [70, 71], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562898, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562917, "satd_repo": 42763345, "satd_sha": "5ff5aedd1640f9a7219520b223778f229b05b76c", "satd_text": " FIXME: Add some justification/do some tests.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [157], "matched_text": "    // FIXME: Add some justification/do some tests."}, {"satd_id": 23562921, "satd_repo": 42763345, "satd_sha": "b9fd40205d2781f9999863a605ee62382ce6419d", "satd_text": " FIXME: Add some justification/do some tests.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [157], "matched_text": "    // FIXME: Add some justification/do some tests."}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/kolmogorov.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/kolmogorov.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [70, 71], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562923, "satd_repo": 42763345, "satd_sha": "1d363c91c4c3e6d0579a1ffd61e49f62d40b5637", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23562955, "satd_repo": 42763345, "satd_sha": "78b566cee1346acb84664ef1f2b351c0f741ec72", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Exceptions/NoSolutionFoundException_proto.hpp", "lines": [27], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23562955, "satd_repo": 42763345, "satd_sha": "78b566cee1346acb84664ef1f2b351c0f741ec72", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [82], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23562964, "satd_repo": 42763345, "satd_sha": "0707994b24f07df05e04ab2f07a2586338221101", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Exceptions/NoSolutionFoundException_proto.hpp", "lines": [27], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23562964, "satd_repo": 42763345, "satd_sha": "0707994b24f07df05e04ab2f07a2586338221101", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [82], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23562977, "satd_repo": 42763345, "satd_sha": "d84fe71ee81f0a49ef3f3ccd6d6b1e868ef560ec", "satd_text": "\n     * Once the direct function calls have leaked enough memory, let's do some\n     * garbage collection...\n     * The 50k bound here is arbitrary, and motivated by ResetExprContext()\n     * in execUtils.c\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kmeans/src/pg_gp/kmeans.c", "lines": [77, 78, 79, 80, 81, 82], "matched_text": "    /*"}, {"satd_id": 23562997, "satd_repo": 42763345, "satd_sha": "2f268443a2439b648bf14f9b288e37758b8e5c67", "satd_text": "\n     * Once the direct function calls have leaked enough memory, let's do some\n     * garbage collection...\n     * The 50k bound here is arbitrary, and motivated by ResetExprContext()\n     * in execUtils.c\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kmeans/src/pg_gp/kmeans.c", "lines": [77, 78, 79, 80, 81, 82], "matched_text": "    /*"}, {"satd_id": 23563033, "satd_repo": 42763345, "satd_sha": "69b75806df3ae218f3034a67daf61e44c9b758c4", "satd_text": "\n * Postgres8.4 doesn't have such macro, so we add here\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [30, 31, 32], "matched_text": "/*"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71, 72], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563037, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71, 72], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563038, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71, 72], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563039, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21, 22], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71, 72], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22, 23], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25, 26], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563040, "satd_repo": 42763345, "satd_sha": "5c5089ad554cf9aed825241325ad92b931dcc7e1", "satd_text": " Workaround for Doxygen: A header file that does not declare namespaces is to\n be ignored if and only if it is processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.hpp", "lines": [7, 8], "matched_text": "// Workaround for Doxygen: A header file that does not declare namespaces is to"}, {"satd_id": 23563045, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Note: We also use MADLIB_EIGEN_LINALGTYPES_HPP for a workaround for Doxygen:\n *_{impl|proto}.hpp files should be ingored if not included by\n EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenLinAlgTypes.hpp", "lines": [8, 9, 10], "matched_text": "// Note: We also use MADLIB_EIGEN_LINALGTYPES_HPP for a workaround for Doxygen:"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [154], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563047, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563049, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [154], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563053, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563058, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [154], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563064, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563067, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563070, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " We are doing a Cholesky decomposition of a matrix with\n pivoting. This is faster than the PartialPivLU that\n Eigen's inverse() method would use", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [125, 126, 127], "matched_text": "            // We are doing a Cholesky decomposition of a matrix with"}, {"satd_id": 23563072, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: No hard-coded constant here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [123], "matched_text": "        // FIXME: No hard-coded constant here"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [154], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563075, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563079, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [154], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563082, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563086, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563089, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [93], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563089, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [42], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563091, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563096, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [93], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563096, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [42], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563098, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563099, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief Base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "matched_text": "/**"}, {"satd_id": 23563107, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563107, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563107, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563107, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563114, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [20], "matched_text": "   #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563114, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [31], "matched_text": "   #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563114, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [42], "matched_text": " #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563125, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563135, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [360], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23563135, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [165], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23563135, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [247], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563137, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563145, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief Thin wrapper around \\c palloc() that returns a 16-byte-aligned\n *     pointer.\n *\n * @internal \n *     This function uses the PostgreSQL palloc() and palloc0() macros. They\n *     call MemoryContextAllocImpl() or MemoryContextAllocZeroImpl(),\n *     respectively, which then call, by default, AllocSetAlloc() from\n *     utils/mmgr/aset.c.\n *\n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c palloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "matched_text": "/**"}, {"satd_id": 23563146, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "\n             * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n             * our own message. After unwinding the C++ stack, the PostgreSQL\n             * exception will be re-thrown into the PostgreSQL C code.\n             *\n             * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n             * per se, but it is good practise to keep the exception mechanisms clearly\n             * separated.\n             ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [344, 345, 346, 347, 348, 349, 350, 351, 352], "matched_text": "            /*"}, {"satd_id": 23563149, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief Thin wrapper around \\c repalloc() that returns a 16-byte-aligned\n *     pointer.\n *\n * @tparam ZM Initialize memory block by overwriting with zeros?\n * \n * @internal \n *     This function uses the PostgreSQL repalloc() macro. This calls\n *     MemoryContextReallocImpl, which again calls, by default,\n *     AllocSetRealloc() from utils/mmgr/aset.c.\n *\n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c repalloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "matched_text": "/**"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563156, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563161, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Don't ereport errors. We set typmod < 0, and this should\n not cause an error because compound types in another\n compound can never be transient. (I think)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [303, 304, 305], "matched_text": "            // Don't ereport errors. We set typmod < 0, and this should"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563163, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563166, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [177, 178, 179, 180, 181, 182], "matched_text": "        // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23563166, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGType.cpp", "lines": [46, 47, 48, 49, 50, 51], "matched_text": "        // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23563173, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: get_call_result_type is tagged as expensive in funcapi.c\n It seems not to be necessary to release the tupleDesc\n E.g., in plython.c ReleaseTupleDesc() is not called", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [459, 460, 461], "matched_text": "        // FIXME: get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563192, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563198, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: Add support for multi-dimensional array", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [47], "matched_text": "    // FIXME: Add support for multi-dimensional array"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563199, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563200, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563205, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n *\n * @file NewDelete.cpp\n *\n * @brief Global overrides of operator new and operator delete.\n *\n * We override the C++ global memory allocation and deallocation functions. We\n * map them to ultimately use the PostgreSQL memory routines to protect against\n * memory leaks.\n * See header file \\c <new> and \u00a718.4.1 of the C++ Standard.\n *\n * @note\n *     This is merely a precaution. C++ objects should still be properly\n *     deallocated. We still make the promise to user code that all destructors\n *     will be properly called.\n *\n * @internal\n *     Declaring operator new and delete as inline and making this file a\n *     header file caused crahes when compiled with GCC 4.6. So be careful if\n *     you want to revert the decision to put the global operator new/delete\n *     in its own translation unit.\n *\n *\n * The default behavior of\n *\n * - <tt>void *operator new[](std::size_t inSize) throw (std::bad_alloc)</tt>\n * - <tt>void *operator new[](std::size_t, const std::nothrow_t&) throw()</tt>\n * - <tt>void operator delete[](void *inPtr) throw()</tt>\n * - <tt>void operator delete[](void *inPtr, const std::nothrow_t&) throw()</tt>\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/NewDelete.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23563207, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief operator new for PostgreSQL. Never throws.\n *\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/NewDelete.cpp", "lines": [65, 66, 67, 68, 69, 70, 71], "matched_text": "/**"}, {"satd_id": 23563207, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief operator new for PostgreSQL. Never throws.\n *\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGNewDelete.cpp", "lines": [50, 51, 52, 53, 54, 55, 56], "matched_text": "/**"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563214, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563221, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563226, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563231, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563237, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief Handle without any meta data (essentially, a constant pointer)\n *\n * A TransparentHandle is simply a (constant) pointer. It is used whenever we\n * need a type that conforms to the handle policy, but no meta data is required.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [10, 11, 12, 13, 14, 15], "matched_text": "/**"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563238, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563244, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563252, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [97], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563257, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563265, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Unfortunately, we have to clean up some #defines in PostgreSQL headers\n From c.h ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [134, 135], "matched_text": "// Unfortunately, we have to clean up some #defines in PostgreSQL headers"}, {"satd_id": 23563266, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: For now we make use of TR1 but not of C++11. Import all TR1 names into std.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [39], "matched_text": "// FIXME: For now we make use of TR1 but not of C++11. Import all TR1 names into std."}, {"satd_id": 23563283, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": "*\n * @brief An STL allocator that uses malloc for its allocations\n *\n * The declaration of this class is taken from C++ Standard \u00a720.4.1. The\n * allocate() and deallocate() members have been implemented using std::malloc()\n * and std::free().\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/utils/MallocAllocator.hpp", "lines": [14, 15, 16, 17, 18, 19, 20], "matched_text": "/**"}, {"satd_id": 23563297, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Note: We also use MADLIB_DBAL_HPP for a workaround for Doxygen:\n *_{impl|proto}.hpp files should be ingored if not included by\n EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/dbal.hpp", "lines": [11, 12, 13], "matched_text": "// Note: We also use MADLIB_DBAL_HPP for a workaround for Doxygen:"}, {"satd_id": 23563301, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " (before C++11). We therefore use the Boost implementation\n Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23563306, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563306, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563306, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563306, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563318, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " We use the intra-iteration field X_transp_Az for storing the diagonal\n of X^T A X, so that we don't have to recompute it in the result function.\n Likewise, we store the condition number.\n FIXME: This feels a bit like a hack.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [571, 572, 573, 574], "matched_text": "    // We use the intra-iteration field X_transp_Az for storing the diagonal"}, {"satd_id": 23563320, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563320, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563320, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563320, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563322, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: HAYING: stepsize if hard-coded here now", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [694], "matched_text": "\t\t// FIXME: HAYING: stepsize if hard-coded here now"}, {"satd_id": 23563337, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: We currently need to copy the coefficient to a native array\n This should be transparent to user code", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [852, 853], "matched_text": "    // FIXME: We currently need to copy the coefficient to a native array"}, {"satd_id": 23563347, "satd_repo": 42763345, "satd_sha": "0344d364560a23d64a9c9045f683674aa53738b5", "satd_text": " FIXME: Is it better to have the const_cast in the mutable class\n and declare mPtr as const?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/utils/Reference.hpp", "lines": [27, 28], "matched_text": "    // FIXME: Is it better to have the const_cast in the mutable class"}, {"satd_id": 23563353, "satd_repo": 42763345, "satd_sha": "60802a876ccd7d751c164309ad39620efa5ba86f", "satd_text": "\n * Postgres8.4 doesn't have such macro, so we add here\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [30, 31, 32], "matched_text": "/*"}, {"satd_id": 23563386, "satd_repo": 42763345, "satd_sha": "e5d1d4f3d382cd7d948a0c3a3c5c4e1ea7defda8", "satd_text": "\n * \tThe step function for aggregating splitting criteria values based on our touched-up\n * \t(attribute, class) distribution information:\n *  \n *  The following table contains the original data used for the first  \n *  calculation of golf dataset.\n *\n *  fid | fval | class | is_cont | split_value | le | gt | assigned_nid \n * -----+------+-------+---------+-------------+----+----+--------------\n *      |      |       |         |             | 14 |    |            1\n *      |      |     2 |         |             |  9 |    |            1\n *      |      |     1 |         |             |  5 |    |            1\n *    4 |      |       |         |             | 14 |    |            1\n *    4 |      |     2 |         |             |  9 |    |            1\n *    4 |      |     1 |         |             |  5 |    |            1\n *    4 |    2 |       | f       |             |  6 |    |            1\n *    4 |    2 |     2 | f       |             |  3 |    |            1\n *    4 |    2 |     1 | f       |             |  3 |    |            1\n *    4 |    1 |       | f       |             |  8 |    |            1\n *    4 |    1 |     2 | f       |             |  6 |    |            1\n *    4 |    1 |     1 | f       |             |  2 |    |            1\n *    3 |      |       |         |             | 14 |    |            1\n *    3 |      |     2 |         |             |  9 |    |            1\n *    3 |      |     1 |         |             |  5 |    |            1\n *    3 |    3 |       | f       |             |  5 |    |            1\n *    3 |    3 |     2 | f       |             |  2 |    |            1\n *    3 |    3 |     1 | f       |             |  3 |    |            1\n *    3 |    2 |       | f       |             |  5 |    |            1\n *    3 |    2 |     2 | f       |             |  3 |    |            1\n *    3 |    2 |     1 | f       |             |  2 |    |            1\n *    3 |    1 |       | f       |             |  4 |    |            1\n *    3 |    1 |     2 | f       |             |  4 |    |            1\n *    3 |    1 |     1 | f       |             |    |    |            1\n *    2 |   96 |       | t       |          96 | 14 |    |            1\n *    2 |   96 |     2 | t       |          96 |  9 |    |            1\n *    2 |   96 |     1 | t       |          96 |  5 |    |            1\n *    2 |   95 |       | t       |          95 | 13 |  1 |            1\n *    2 |   95 |     2 | t       |          95 |  8 |  1 |            1\n *    2 |   95 |     1 | t       |          95 |  5 |    |            1\n *    2 |   90 |       | t       |          90 | 12 |  2 |            1\n *    2 |   90 |     2 | t       |          90 |  8 |  1 |            1\n *    2 |   90 |     1 | t       |          90 |  4 |  1 |            1\n *    2 |   85 |       | t       |          85 | 10 |  4 |            1\n *    2 |   85 |     2 | t       |          85 |  7 |  2 |            1\n *    2 |   85 |     1 | t       |          85 |  3 |  2 |            1\n *    2 |   80 |       | t       |          80 |  9 |  5 |            1\n *    2 |   80 |     2 | t       |          80 |  7 |  2 |            1\n *    2 |   80 |     1 | t       |          80 |  2 |  3 |            1\n *    2 |   78 |       | t       |          78 |  6 |  8 |            1\n *    2 |   78 |     2 | t       |          78 |  5 |  4 |            1\n *    2 |   78 |     1 | t       |          78 |  1 |  4 |            1\n *    2 |   75 |       | t       |          75 |  5 |  9 |            1\n *    2 |   75 |     2 | t       |          75 |  4 |  5 |            1\n *    2 |   75 |     1 | t       |          75 |  1 |  4 |            1\n *    2 |   70 |       | t       |          70 |  4 | 10 |            1\n *    2 |   70 |     2 | t       |          70 |  3 |  6 |            1\n *    2 |   70 |     1 | t       |          70 |  1 |  4 |            1\n *    2 |   65 |       | t       |          65 |  1 | 13 |            1\n *    2 |   65 |     2 | t       |          65 |  1 |  8 |            1\n *    2 |   65 |     1 | t       |          65 |    |  5 |            1\n *    1 |   85 |       | t       |          85 | 14 |    |            1\n *    1 |   85 |     2 | t       |          85 |  9 |    |            1\n *    1 |   85 |     1 | t       |          85 |  5 |    |            1\n *    1 |   83 |       | t       |          83 | 13 |  1 |            1\n *    1 |   83 |     2 | t       |          83 |  9 |    |            1\n *    1 |   83 |     1 | t       |          83 |  4 |  1 |            1\n *    1 |   81 |       | t       |          81 | 12 |  2 |            1\n *    1 |   81 |     2 | t       |          81 |  8 |  1 |            1\n *    1 |   81 |     1 | t       |          81 |  4 |  1 |            1\n *    1 |   80 |       | t       |          80 | 11 |  3 |            1\n *    1 |   80 |     2 | t       |          80 |  7 |  2 |            1\n *    1 |   80 |     1 | t       |          80 |  4 |  1 |            1\n *    1 |   75 |       | t       |          75 | 10 |  4 |            1\n *    1 |   75 |     2 | t       |          75 |  7 |  2 |            1\n *    1 |   75 |     1 | t       |          75 |  3 |  2 |            1\n *    1 |   72 |       | t       |          72 |  8 |  6 |            1\n *    1 |   72 |     2 | t       |          72 |  5 |  4 |            1\n *    1 |   72 |     1 | t       |          72 |  3 |  2 |            1\n *    1 |   71 |       | t       |          71 |  6 |  8 |            1\n *    1 |   71 |     2 | t       |          71 |  4 |  5 |            1\n *    1 |   71 |     1 | t       |          71 |  2 |  3 |            1\n *    1 |   70 |       | t       |          70 |  5 |  9 |            1\n *    1 |   70 |     2 | t       |          70 |  4 |  5 |            1\n *    1 |   70 |     1 | t       |          70 |  1 |  4 |            1\n *    1 |   69 |       | t       |          69 |  4 | 10 |            1\n *    1 |   69 |     2 | t       |          69 |  3 |  6 |            1\n *    1 |   69 |     1 | t       |          69 |  1 |  4 |            1\n *    1 |   68 |       | t       |          68 |  3 | 11 |            1\n *    1 |   68 |     2 | t       |          68 |  2 |  7 |            1\n *    1 |   68 |     1 | t       |          68 |  1 |  4 |            1\n *    1 |   65 |       | t       |          65 |  2 | 12 |            1\n *    1 |   65 |     2 | t       |          65 |  1 |  8 |            1\n *    1 |   65 |     1 | t       |          65 |  1 |  4 |            1\n *    1 |   64 |       | t       |          64 |  1 | 13 |            1\n *    1 |   64 |     2 | t       |          64 |  1 |  8 |            1\n *    1 |   64 |     1 | t       |          64 |    |  5 |            1\n * (87 rows)\n * \n\n *\n * The rows are grouped by (assigned_nid, fid, splitvalue). For each group, we will\n * calculate a SCV based on the specified splitting criteria. For discrete attributes,\n * only less is used. Both less and great will be used for continuous values.\n *\n * Given the format of the input data stream, SCV calculation is different from using\n * the SCV formulas directly.\n *\n * For infogain and gainratio, there are (number_of_classes + 1) rows for\n * each distinct value of an attribute. The first row is the sub-total count (STC)\n * of cases for a (fval, class) pair. We will simply record it in the agg state.\n * For each of the successive rows in that group, we calculate the partial SVC with\n * this formula:\n *     (count) * log (STC/count)\n *\n * If TC is the total count of records.\n * Entropy is defined as (STC1/TC) * ( (count1/STC1)*log(STC1/count1) + (count2/STC1)*log(STC1/count2) )+\n * (STC2/TC) * ( (count3/STC2)*log(STC2/count3) + (count4/STC2)*log(STC2/count4) )= \n * (count1*log(STC1/count1)+count2*log(STC1/count2)+count3*log(STC2/count3+count4*log(STC2/count4)/TC.\n *\n * As a result, in final function, we can calculate (accumulated value)/TC to get entropy. \n *\n * For gini, it is very similar to infogain. The only difference is that we calculate the partial\n * SVC with the formula : (count*count)/STC. \n *\n * Gini is defined as (STC1/TC) * ( 1- (count1/STC1)^2-(count2/STC1)^2) + \n * (STC2/TC) * ( 1-(count3/STC2)^2-(count4/STC2)^2 ) = (STC1/TC + STC2/TC) - ( count1^2/STC1 + count2^2/STC1\n * + count3^2/STC2 + count4^2/STC2)/TC = 1- ( count1^2/STC1 + count2^2/STC1\n * + count3^2/STC2 + count4^2/STC2)/TC.\n *\n * As a result, in final function, we can calculate 1-(accumulated value)/TC to get gini. \n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719], "matched_text": "/*"}, {"satd_id": 23563397, "satd_repo": 42763345, "satd_sha": "e5d1d4f3d382cd7d948a0c3a3c5c4e1ea7defda8", "satd_text": "\n     * For the following data, such as entropy, gini and split info, we need to combine\n     * the accumulated value from multiple segments.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [1118, 1119, 1120, 1121], "matched_text": "    /*"}, {"satd_id": 23563430, "satd_repo": 42763345, "satd_sha": "75e449b9039afb25606b0b78aaec477e54ff9746", "satd_text": "\n     * For the following data, such as entropy, gini and split info, we need to combine\n     * the accumulated value from multiple segments.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [1118, 1119, 1120, 1121], "matched_text": "    /*"}, {"satd_id": 23563454, "satd_repo": 42763345, "satd_sha": "f8d94b749cd0a632209e5c652ef507da29ea492d", "satd_text": "*\n *  svec_svec_tanimoto_distance - Computes the Tanimoto similarity between two SVECs.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [745, 746, 747], "matched_text": "/**"}, {"satd_id": 23563485, "satd_repo": 42763345, "satd_sha": "3ff8e7efc10cfdd0c656f325ad7fc0291364024b", "satd_text": "*\n *  svec_svec_tanimoto_distance - Computes the Tanimoto similarity between two SVECs.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [745, 746, 747], "matched_text": "/**"}, {"satd_id": 23563519, "satd_repo": 42763345, "satd_sha": "bf60547fd34bc7266d6a38037505289b6a8c5b89", "satd_text": " silence Python 2.6 buggy warnings about Exception.message", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [119], "matched_text": "# silence Python 2.6 buggy warnings about Exception.message"}, {"satd_id": 23563569, "satd_repo": 42763345, "satd_sha": "19f769ef89f9c38e2581203575f75f9d55b7f12f", "satd_text": "\n     * For the following data, such as entropy, gini and split info, we need to combine\n     * the accumulated value from multiple segments.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/decision_tree/src/pg_gp/decision_tree.c", "lines": [767, 768, 769, 770], "matched_text": "    /*"}, {"satd_id": 23563591, "satd_repo": 42763345, "satd_sha": "a3107ece76384cf8f832f03c6252d66d19e4e0d5", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [25], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563602, "satd_repo": 42763345, "satd_sha": "b0d4032a5d8c5d9079f56fd42e4de204c1b140a0", "satd_text": " FIXME: HAYING: stepsize if hard-coded here now", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [688], "matched_text": "\t\t// FIXME: HAYING: stepsize if hard-coded here now"}, {"satd_id": 23563619, "satd_repo": 42763345, "satd_sha": "c51a225e028180b302735f2fe304852fbd4c2c57", "satd_text": " HAYING: stepsize if hard-coded here now", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/igd/logistic_igd.cpp", "lines": [190], "matched_text": "\t\t// HAYING: stepsize if hard-coded here now"}, {"satd_id": 23563623, "satd_repo": 42763345, "satd_sha": "c51a225e028180b302735f2fe304852fbd4c2c57", "satd_text": " HAYING: the wrapper is too heavy to understand", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/igd/logistic_igd.cpp", "lines": [235], "matched_text": "            db.allocator( // HAYING: the wrapper is too heavy to understand"}, {"satd_id": 23563635, "satd_repo": 42763345, "satd_sha": "c51a225e028180b302735f2fe304852fbd4c2c57", "satd_text": " See MADLIB-138. At least on certain platforms and with certain versions,\n LAPACK will run into an infinite loop if pinv() is called for non-finite\n matrices. We extend the check also to the dependent variables.\n HAYING: Can I remove this if I don't need pinv()?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/igd/logistic_igd.cpp", "lines": [223, 224, 225, 226], "matched_text": "    // See MADLIB-138. At least on certain platforms and with certain versions,"}, {"satd_id": 23563639, "satd_repo": 42763345, "satd_sha": "c51a225e028180b302735f2fe304852fbd4c2c57", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/igd/logistic_igd.cpp", "lines": [14, 15], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23563661, "satd_repo": 42763345, "satd_sha": "468b373636e758bdf467a4619c01370b589f13ad", "satd_text": " FIXME: We currently need to copy the coefficient to a native array\n This should be transparent to user code", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [611, 612], "matched_text": "    // FIXME: We currently need to copy the coefficient to a native array"}, {"satd_id": 23563665, "satd_repo": 42763345, "satd_sha": "468b373636e758bdf467a4619c01370b589f13ad", "satd_text": " We use the intra-iteration field X_transp_Az for storing the diagonal\n of X^T A X, so that we don't have to recompute it in the result function.\n Likewise, we store the condition number.\n FIXME: This feels a bit like a hack.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [565, 566, 567, 568], "matched_text": "    // We use the intra-iteration field X_transp_Az for storing the diagonal"}, {"satd_id": 23563673, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Note: We also use MADLIB_EIGEN_LINALGTYPES_HPP for a workaround for Doxygen:\n *_{impl|proto}.hpp files should be ingored if not included by\n EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenLinAlgTypes.hpp", "lines": [8, 9, 10], "matched_text": "// Note: We also use MADLIB_EIGEN_LINALGTYPES_HPP for a workaround for Doxygen:"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [150], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563675, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563677, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [150], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563681, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563686, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [150], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563692, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563695, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563698, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " We are doing a Cholesky decomposition of a matrix with\n pivoting. This is faster than the PartialPivLU that\n Eigen's inverse() method would use", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [121, 122, 123], "matched_text": "            // We are doing a Cholesky decomposition of a matrix with"}, {"satd_id": 23563698, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " We are doing a Cholesky decomposition of a matrix with\n pivoting. This is faster than the PartialPivLU that\n Eigen's inverse() method would use", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenTypes.hpp", "lines": [260, 261, 262], "matched_text": "                    // We are doing a Cholesky decomposition of a matrix with"}, {"satd_id": 23563700, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " FIXME: No hard-coded constant here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [119], "matched_text": "        // FIXME: No hard-coded constant here"}, {"satd_id": 23563700, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " FIXME: No hard-coded constant here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenTypes.hpp", "lines": [258], "matched_text": "                // FIXME: No hard-coded constant here"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [150], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563705, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563708, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [17], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [96], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [108], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [150], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563710, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [45], "matched_text": "#endif // MADLIB_EIGEN_LINALGTYPES_HPP (workaround for Doxygen)"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563714, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563717, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [93], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563717, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [42], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563719, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563724, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [93], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563724, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBAL_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [42], "matched_text": "#endif // MADLIB_DBAL_HPP (workaround for Doxygen)"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenPlugin.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/EigenTypes_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/HandleMap_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenLinAlgTypes/SymmetricPositiveDefiniteEigenDecomposition_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_impl.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563726, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [7], "matched_text": "// Workaround for Doxygen: Ignore if not included by EigenLinAlgTypes.hpp"}, {"satd_id": 23563727, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": "*\n * @brief Base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBase.hpp", "lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "matched_text": "/**"}, {"satd_id": 23563727, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": "*\n * @brief Base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/OutputStreamBufferBase_proto.hpp", "lines": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "matched_text": "/**"}, {"satd_id": 23563729, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " Note: We also use MADLIB_DBAL_HPP for a workaround for Doxygen:\n *_{impl|proto}.hpp files should be ingored if not included by\n EigenLinAlgTypes.hpp", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/dbal.hpp", "lines": [11, 12, 13], "matched_text": "// Note: We also use MADLIB_DBAL_HPP for a workaround for Doxygen:"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [98], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563732, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_impl.hpp", "lines": [26], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AbstractionLayer_proto.hpp", "lines": [46], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [385], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_proto.hpp", "lines": [86], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [584], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_proto.hpp", "lines": [98], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [74], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_proto.hpp", "lines": [48], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_impl.hpp", "lines": [35], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/OutputStreamBuffer_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGException_proto.hpp", "lines": [22], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_impl.hpp", "lines": [30], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TransparentHandle_proto.hpp", "lines": [53], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/TypeTraits.hpp", "lines": [106], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_impl.hpp", "lines": [72], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563736, "satd_repo": 42763345, "satd_sha": "28eca407a7f9cd7602e00d89ac0f61a5dfd45b51", "satd_text": " MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/UDF_proto.hpp", "lines": [40], "matched_text": "#endif // MADLIB_DBCONNECTOR_HPP (workaround for Doxygen)"}, {"satd_id": 23563743, "satd_repo": 42763345, "satd_sha": "f94fa11a7f2b60dd713baa5007a231ac61135acf", "satd_text": " Unfortunately, we have to clean up some #defines in PostgreSQL headers\n From c.h ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [134, 135], "matched_text": "// Unfortunately, we have to clean up some #defines in PostgreSQL headers"}, {"satd_id": 23563753, "satd_repo": 42763345, "satd_sha": "ca1b3778bd9b936bc3db90e9b578571ab55be205", "satd_text": " FIXME: Add support for multi-dimensional array", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/ArrayHandle_impl.hpp", "lines": [38], "matched_text": "    // FIXME: Add support for multi-dimensional array"}, {"satd_id": 23563754, "satd_repo": 42763345, "satd_sha": "5729884c46661dba892878785d6d3ce074705f3e", "satd_text": "*\n *\n * @file NewDelete.cpp\n *\n * @brief Global overrides of operator new and operator delete.\n *\n * We override the C++ global memory allocation and deallocation functions. We\n * map them to ultimately use the PostgreSQL memory routines to protect against\n * memory leaks.\n * See header file <new> and \u00a718.4.1 of the C++ Standard.\n *\n * @note\n *     This is merely a precaution. C++ objects should still be properly\n *     deallocated. We still make the promise to user code that all destructors\n *     will be properly called.\n *\n * @internal\n *     Declaring operator new and delete as inline and making this file a\n *     header file caused crahes when compiled with GCC 4.6. So be careful if\n *     you want to revert the decision to put the global operator new/delete\n *     in its own translation unit.\n *\n *\n * The default behavior of\n *\n * - <tt>void *operator new[](std::size_t inSize) throw (std::bad_alloc)</tt>\n * - <tt>void *operator new[](std::size_t, const std::nothrow_t&) throw()</tt>\n * - <tt>void operator delete[](void *inPtr) throw()</tt>\n * - <tt>void operator delete[](void *inPtr, const std::nothrow_t&) throw()</tt>\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/NewDelete.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23563761, "satd_repo": 42763345, "satd_sha": "5729884c46661dba892878785d6d3ce074705f3e", "satd_text": "*\n * @brief An STL allocator that uses malloc for its allocations\n *\n * The declaration of this class is taken from C++ Standard \u00a720.4.1. The\n * allocate() and deallocate() members have been implemented using std::malloc()\n * and std::free().\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/utils/MallocAllocator.hpp", "lines": [14, 15, 16, 17, 18, 19, 20], "matched_text": "/**"}, {"satd_id": 23563769, "satd_repo": 42763345, "satd_sha": "5729884c46661dba892878785d6d3ce074705f3e", "satd_text": " FIXME: get_call_result_type is tagged as expensive in funcapi.c\n tupleDesc can be NULL if the return type is not composite", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23563780, "satd_repo": 42763345, "satd_sha": "5729884c46661dba892878785d6d3ce074705f3e", "satd_text": " FIXME: For now we make use of TR1 but not of C++11. Import all TR1 names into std.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/dbconnector.hpp", "lines": [36], "matched_text": "// FIXME: For now we make use of TR1 but not of C++11. Import all TR1 names into std."}, {"satd_id": 23563789, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " Don't ereport errors. We set typmod < 0, and this should\n not cause an error because compound types in another\n compound can never be transient. (I think)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [311, 312, 313], "matched_text": "                    // Don't ereport errors. We set typmod < 0, and this should"}, {"satd_id": 23563793, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c\n It seems not to be necessary to release the tupleDesc\n E.g., in plython.c ReleaseTupleDesc() is not called", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [256, 257, 258], "matched_text": "        // FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23563794, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/AnyType_impl.hpp", "lines": [127, 128, 129, 130, 131, 132], "matched_text": "        // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23563794, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGType.cpp", "lines": [46, 47, 48, 49, 50, 51], "matched_text": "        // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23563808, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "*\n *\n * Postgres is a platform where the C interface supports reflection, so all we\n * need to do is to include the PostgreSQL database abstraction layer and the\n * default declarations.\n *\n * @par Platform notes\n * We can be sure that all code in the core library will use our overloads:\n * - With the normal POSIX linking (e.g., on Linux), there is only one namespace\n *   for symbols. Since the connector library is loaded before the core library.\n * - On Mac OS X, operator new and delete are exempt from the usual two-level\n *   namespace. See:\n *   http://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/CppRuntimeEnv/Articles/LibCPPDeployment.html\n *   We can therefore be sure that all code in the core library will use our\n *   overloads.\n * - FIXME: Check!\n *   On Solaris, we use direct binding in general, but mark\n *   <tt>operator new</tt> and <tt>delete</tt> as exempt.\n *   http://download.oracle.com/docs/cd/E19253-01/817-1984/aehzq/index.html\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGMain.cpp", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "matched_text": " *//* -------------------------------------------------------------------- *//**"}, {"satd_id": 23563808, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "*\n *\n * Postgres is a platform where the C interface supports reflection, so all we\n * need to do is to include the PostgreSQL database abstraction layer and the\n * default declarations.\n *\n * @par Platform notes\n * We can be sure that all code in the core library will use our overloads:\n * - With the normal POSIX linking (e.g., on Linux), there is only one namespace\n *   for symbols. Since the connector library is loaded before the core library.\n * - On Mac OS X, operator new and delete are exempt from the usual two-level\n *   namespace. See:\n *   http://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/CppRuntimeEnv/Articles/LibCPPDeployment.html\n *   We can therefore be sure that all code in the core library will use our\n *   overloads.\n * - FIXME: Check!\n *   On Solaris, we use direct binding in general, but mark\n *   <tt>operator new</tt> and <tt>delete</tt> as exempt.\n *   http://download.oracle.com/docs/cd/E19253-01/817-1984/aehzq/index.html\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/main.cpp", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "matched_text": " *//* -------------------------------------------------------------------- *//**"}, {"satd_id": 23563810, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "*\n * @brief operator new for PostgreSQL. Never throws.\n *\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGNewDelete.cpp", "lines": [50, 51, 52, 53, 54, 55, 56], "matched_text": "/**"}, {"satd_id": 23563810, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "*\n * @brief operator new for PostgreSQL. Never throws.\n *\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/main.cpp", "lines": [83, 84, 85, 86, 87, 88, 89], "matched_text": "/**"}, {"satd_id": 23563812, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "\n * The default behavior of\n *\n *   void *operator new[](std::size_t inSize) throw (std::bad_alloc)\n *   void *operator new[](std::size_t, const std::nothrow_t&) throw()\n *   void operator delete[](void *inPtr) throw()\n *   void operator delete[](void *inPtr, const std::nothrow_t&) throw()\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGNewDelete.cpp", "lines": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "matched_text": "/*"}, {"satd_id": 23563812, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "\n * The default behavior of\n *\n *   void *operator new[](std::size_t inSize) throw (std::bad_alloc)\n *   void *operator new[](std::size_t, const std::nothrow_t&) throw()\n *   void operator delete[](void *inPtr) throw()\n *   void operator delete[](void *inPtr, const std::nothrow_t&) throw()\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/main.cpp", "lines": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "matched_text": "/*"}, {"satd_id": 23563817, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "\n             * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n             * our own message. After unwinding the C++ stack, the PostgreSQL\n             * exception will be re-thrown into the PostgreSQL C code.\n             *\n             * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n             * per se, but it is good practise to keep the exception mechanisms clearly\n             * separated.\n             ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [302, 303, 304, 305, 306, 307, 308, 309, 310], "matched_text": "            /*"}, {"satd_id": 23563827, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " FIXME: No hard-coded constant here", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenTypes.hpp", "lines": [209], "matched_text": "                // FIXME: No hard-coded constant here"}, {"satd_id": 23563833, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": "\n             * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n             * our own message. After unwinding the C++ stack, the PostgreSQL\n             * exception will be re-thrown into the PostgreSQL C code.\n             *\n             * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n             * per se, but it is good practise to keep the exception mechanisms clearly\n             * separated.\n             ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/Allocator_impl.hpp", "lines": [302, 303, 304, 305, 306, 307, 308, 309, 310], "matched_text": "            /*"}, {"satd_id": 23563843, "satd_repo": 42763345, "satd_sha": "91f8f67aa192b13b87171130523cc4c96dc0b9d2", "satd_text": " FIXME: Is it better to have the const_cast in the mutable class\n and declare mPtr as const?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/utils/Reference.hpp", "lines": [27, 28], "matched_text": "    // FIXME: Is it better to have the const_cast in the mutable class"}, {"satd_id": 23563850, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": " FIXME: A compile-time error would be nicer!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/EigenTypes.hpp", "lines": [76], "matched_text": "            // FIXME: A compile-time error would be nicer!"}, {"satd_id": 23563852, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [20], "matched_text": "   #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563852, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [31], "matched_text": "   #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563852, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": "elif EIGEN_MALLOC_ALREADY_ALIGNED", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/patch/Eigen.sh", "lines": [42], "matched_text": " #elif EIGEN_MALLOC_ALREADY_ALIGNED"}, {"satd_id": 23563863, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": " Import commonly used names into the modules namespace", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/dbal.hpp", "lines": [223], "matched_text": "// Import commonly used names into the modules namespace"}, {"satd_id": 23563863, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": " Import commonly used names into the modules namespace", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/common.hpp", "lines": [21], "matched_text": "// Import commonly used names into the modules namespace"}, {"satd_id": 23563876, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": "*\n * @internal\n * @brief Thin wrapper around \\c repalloc() that returns a 16-byte-aligned\n *     pointer.\n * \n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c repalloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [89, 90, 91, 92, 93, 94, 95, 96, 97], "matched_text": "/**"}, {"satd_id": 23563879, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": " Avoid warning that inPtr is not used if Reallocate == true", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [165], "matched_text": "    // Avoid warning that inPtr is not used if Reallocate == true"}, {"satd_id": 23563879, "satd_repo": 42763345, "satd_sha": "110b47f8042ee0e8530e05b589511a71feaec4d0", "satd_text": " Avoid warning that inPtr is not used if Reallocate == true", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [246], "matched_text": "    // Avoid warning that inPtr is not used if Reallocate == true"}, {"satd_id": 23563883, "satd_repo": 42763345, "satd_sha": "5ae9885e446e80333b4d771c4ce5ce89f5290aff", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [22], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563898, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563898, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563900, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563900, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563902, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/boost.cpp", "lines": [21], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563902, "satd_repo": 42763345, "satd_sha": "a2310341f33703823484af414689f424bf317673", "satd_text": " Workaround for Doxygen: Only ignore header file if processed stand-alone", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [71], "matched_text": "// Workaround for Doxygen: Only ignore header file if processed stand-alone"}, {"satd_id": 23563933, "satd_repo": 42763345, "satd_sha": "37cfca5acd0f7d58d84963f59b175534d1ba2082", "satd_text": " silence Python 2.6 buggy warnings about Exception.message", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [119], "matched_text": "# silence Python 2.6 buggy warnings about Exception.message"}, {"satd_id": 23563961, "satd_repo": 42763345, "satd_sha": "285d3c3ea5ae247e02fa85334089adf2bc5d5a1c", "satd_text": " silence Python 2.6 buggy warnings about Exception.message", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [119], "matched_text": "# silence Python 2.6 buggy warnings about Exception.message"}, {"satd_id": 23563975, "satd_repo": 42763345, "satd_sha": "97e754120b7da401310922a1a383f5abaec637d3", "satd_text": " silence Python 2.6 buggy warnings about Exception.message", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [119], "matched_text": "# silence Python 2.6 buggy warnings about Exception.message"}, {"satd_id": 23563981, "satd_repo": 42763345, "satd_sha": "bf880c0b29ed1447fb0620ffa7cbfadb74d18be7", "satd_text": "*\n *  tanimoto - Computes the Tanimoto similarity between two SVECs.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [743, 744, 745], "matched_text": "/**"}, {"satd_id": 23564055, "satd_repo": 42763345, "satd_sha": "9904707cf5987842d1e55204f34bcaeb71ca0e8c", "satd_text": " silence Python 2.6 buggy warnings about Exception.message", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [119], "matched_text": "# silence Python 2.6 buggy warnings about Exception.message"}, {"satd_id": 23564062, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": "*\n * @brief Try to convert this variable into whatever type is requested\n *\n * @note Conversion operators are not generally without side effects. They make\n *     it possible to use AnyType values in abusive ways. For instance,\n *     <tt>if(anyValue)</tt> will convert anyValue into bool, which is probably\n *     not the intended semantic. See, e.g.,\n *     http://www.artima.com/cppsource/safebool.html for how this problem is\n *     usually dealt with when only <tt>operator bool</tt> is needed. Here,\n *     we assume the benefit of a universal conversion operator is higher than\n *     the danger of misuse. In general, AnyType should only be used for\n *     retrieving function arguments and return values. They are not designed\n *     to be used within algorithms.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyType_impl.hpp", "lines": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "matched_text": "/**"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564088, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564089, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564090, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": "\n     * We only declare the variable-length array histo here after some sanity\n     * checking. We risk a stack overflow otherwise. In particular, we need to\n     * make sure that transval->max_mfvs is initialized. It might not be if the\n     * (strict) transition function is never called. (MADLIB-254)\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [368, 369, 370, 371, 372, 373], "matched_text": "    /*"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564092, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564094, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564095, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564110, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": " Cleanup test schema for the module", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/madpack.py", "lines": [965], "matched_text": "            # Cleanup test schema for the module"}, {"satd_id": 23564123, "satd_repo": 42763345, "satd_sha": "575483cf2c0bd10c675fdd117c1e726a64600796", "satd_text": "*\n * @internal\n * @brief Thin wrapper around \\c palloc() that returns a 16-byte-aligned\n *     pointer.\n * \n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c palloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n *\n * We store the address returned by the call to \\c palloc() in the word\n * immediately before the aligned pointer that we return.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "matched_text": "/**"}, {"satd_id": 23564142, "satd_repo": 42763345, "satd_sha": "e1f1289c636398cdaa2084b6c2391689ca9aa85b", "satd_text": "\n     * We only declare the variable-length array histo here after some sanity\n     * checking. We risk a stack overflow otherwise. In particular, we need to\n     * make sure that transval->max_mfvs is initialized. It might not be if the\n     * (strict) transition function is never called. (MADLIB-254)\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [368, 369, 370, 371, 372, 373], "matched_text": "    /*"}, {"satd_id": 23564150, "satd_repo": 42763345, "satd_sha": "a6d7e46318f6faeca9b27876844293771caf49e1", "satd_text": " Cleanup test schema for the module", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/madpack.py", "lines": [965], "matched_text": "            # Cleanup test schema for the module"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564154, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564155, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564157, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564158, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [95], "matched_text": "\t(void) size; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [96], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [101], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [106], "matched_text": "\t(void) element_type; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [132], "matched_text": "\t(void) flag; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [267], "matched_text": "\t(void) elt1; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array_ops/src/pg_gp/array_ops.c", "lines": [398], "matched_text": "\t(void) elt2; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [170], "matched_text": "\t(void) outFuncOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [282], "matched_text": "\t(void) funcOid; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/countmin.c", "lines": [368], "matched_text": "\t(void) transval; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [59], "matched_text": "    (void) numsketches; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [395], "matched_text": "    (void) byVal; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [302], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/SparseData.h", "lines": [317], "matched_text": "\t(void) stop; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1573], "matched_text": "\t(void) lists; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1574], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1575], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1582], "matched_text": "\t(void) nlists; /* avoid warning about unused parameter */"}, {"satd_id": 23564159, "satd_repo": 42763345, "satd_sha": "8ce866a469fec1adcd4bbd1cd7efb11c38afdae6", "satd_text": " avoid warning about unused parameter ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/operators.c", "lines": [1583], "matched_text": "\t(void) widths; /* avoid warning about unused parameter */"}, {"satd_id": 23564176, "satd_repo": 42763345, "satd_sha": "c0b29b05c26b8ab342ef4e61dc58bacc09255d9a", "satd_text": "*\n * @brief Try to convert this variable into whatever type is requested\n *\n * @note Conversion operators are not generally without side effects. They make\n *     it possible to use AnyType values in abusive ways. For instance,\n *     <tt>if(anyValue)</tt> will convert anyValue into bool, which is probably\n *     not the intended semantic. See, e.g.,\n *     http://www.artima.com/cppsource/safebool.html for how this problem is\n *     usually dealt with when only <tt>operator bool</tt> is needed. Here,\n *     we assume the benefit of a universal conversion operator is higher than\n *     the danger of misuse. In general, AnyType should only be used for\n *     retrieving function arguments and return values. They are not designed\n *     to be used within algorithms.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyType_impl.hpp", "lines": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "matched_text": "/**"}, {"satd_id": 23564211, "satd_repo": 42763345, "satd_sha": "c0b29b05c26b8ab342ef4e61dc58bacc09255d9a", "satd_text": "*\n * @internal\n * @brief Thin wrapper around \\c palloc() that returns a 16-byte-aligned\n *     pointer.\n * \n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c palloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n *\n * We store the address returned by the call to \\c palloc() in the word\n * immediately before the aligned pointer that we return.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "matched_text": "/**"}, {"satd_id": 23564224, "satd_repo": 42763345, "satd_sha": "c0b29b05c26b8ab342ef4e61dc58bacc09255d9a", "satd_text": " FIXME: Check whether this code is used at all.\n and copy the values (contruct_array() will do a copy).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23564229, "satd_repo": 42763345, "satd_sha": "7bd88781898d135414b41f1c912ef41f600ad7ae", "satd_text": " FIXME: Check whether this code is used at all.\n and copy the values (contruct_array() will do a copy).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23564231, "satd_repo": 42763345, "satd_sha": "2361c6589d11b0bb1526980c0e0d9aa1472a0538", "satd_text": "*\n * @internal\n * @brief Thin wrapper around \\c palloc() that returns a 16-byte-aligned\n *     pointer.\n * \n * Unless <tt>MAXIMUM_ALIGNOF >= 16</tt>, we waste 16 additional bytes of\n * memory. The call to \\c palloc() might throw a PostgreSQL exception. Thus,\n * this function should only be used inside a \\c PG_TRY() block.\n *\n * We store the address returned by the call to \\c palloc() in the word\n * immediately before the aligned pointer that we return.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "matched_text": "/**"}, {"satd_id": 23564260, "satd_repo": 42763345, "satd_sha": "563aa07688cef2b1ba5958e1b1b669a6e77481be", "satd_text": "\n     * This function is implemented (specialized) only for\n     * ConcreteValue<AnyTypeVector>, hence we declare the return type as\n     * AnyType\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/ConcreteValue_proto.hpp", "lines": [47, 48, 49, 50, 51], "matched_text": "    /*"}, {"satd_id": 23564271, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": "!/bin/sh\n\n By default, doxygen.css contains\n\n     pre.fragment {\n         word-wrap: break-word;\n     }\n\n which makes text in <pre> or \\verbatim environments wrap at white spaces.\n However, long lines are usually intended (e.g., psql output), so we want to\n override this with \"word-warp: normal\"", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/patch/doxygen.css.sh", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "matched_text": "#!/bin/sh"}, {"satd_id": 23564282, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": " FIXME: We have essentially two calls to svd now (pinv calls svd, too).\n This is a waste of processor cycles and energy.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [192, 193], "matched_text": "    // FIXME: We have essentially two calls to svd now (pinv calls svd, too)."}, {"satd_id": 23564283, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": " Do nothing. We will add a bad-allocation exception on top of\n the existing PostgreSQL exception stack.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [107, 108], "matched_text": "            // Do nothing. We will add a bad-allocation exception on top of"}, {"satd_id": 23564284, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [103], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564284, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [184], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564286, "satd_repo": 42763345, "satd_sha": "a09a9d544848b18de6c7be603ed011f52137ad65", "satd_text": "\n         * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n         * our own message. After unwinding the C++ stack, the PostgreSQL\n         * exception will be re-thrown into the PostgreSQL C code.\n         *\n         * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n         * per se, but it is good practise to keep the exception mechanisms clearly\n         * separated.\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [88, 89, 90, 91, 92, 93, 94, 95, 96], "matched_text": "        /*"}, {"satd_id": 23564298, "satd_repo": 42763345, "satd_sha": "bfb4655ae4a8fca755e6120517d5f8b8ddba1a46", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [103], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564298, "satd_repo": 42763345, "satd_sha": "bfb4655ae4a8fca755e6120517d5f8b8ddba1a46", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [184], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564300, "satd_repo": 42763345, "satd_sha": "aeb643ce71b2a439cec8ad8229441d2d8be1a7f7", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [103], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564300, "satd_repo": 42763345, "satd_sha": "aeb643ce71b2a439cec8ad8229441d2d8be1a7f7", "satd_text": " Clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [184], "matched_text": "            // Clean up after ourselves"}, {"satd_id": 23564308, "satd_repo": 42763345, "satd_sha": "ef6e0f544d9be396c0495c58e015d2af38ea85d1", "satd_text": "!/bin/sh\n\n By default, doxygen.css contains\n\n     pre.fragment {\n         word-wrap: break-word;\n     }\n\n which makes text in <pre> or \\verbatim environments wrap at white spaces.\n However, long lines are usually intended (e.g., psql output), so we want to\n override this with \"word-warp: normal\"", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/patch/doxygen.css.sh", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "matched_text": "#!/bin/sh"}, {"satd_id": 23564314, "satd_repo": 42763345, "satd_sha": "83174cbf965d3bfd34d8aae3d10614e837c100a2", "satd_text": "\n         * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n         * our own message. After unwinding the C++ stack, the PostgreSQL\n         * exception will be re-thrown into the PostgreSQL C code.\n         *\n         * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n         * per se, but it is good practise to keep the exception mechanisms clearly\n         * separated.\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [88, 89, 90, 91, 92, 93, 94, 95, 96], "matched_text": "        /*"}, {"satd_id": 23564315, "satd_repo": 42763345, "satd_sha": "83174cbf965d3bfd34d8aae3d10614e837c100a2", "satd_text": " Do nothing. We will add a bad-allocation exception on top of\n the existing PostgreSQL exception stack.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [107, 108], "matched_text": "            // Do nothing. We will add a bad-allocation exception on top of"}, {"satd_id": 23564336, "satd_repo": 42763345, "satd_sha": "c24312ceef47b3de4a3096b6aa56af37dc30cbf4", "satd_text": " FIXME: We have essentially two calls to svd now (pinv calls svd, too).\n This is a waste of processor cycles and energy.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [192, 193], "matched_text": "    // FIXME: We have essentially two calls to svd now (pinv calls svd, too)."}, {"satd_id": 23564362, "satd_repo": 42763345, "satd_sha": "a6ac1aece96b52601ddad54405274ba854a4cdd9", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564362, "satd_repo": 42763345, "satd_sha": "a6ac1aece96b52601ddad54405274ba854a4cdd9", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564367, "satd_repo": 42763345, "satd_sha": "a6ac1aece96b52601ddad54405274ba854a4cdd9", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564367, "satd_repo": 42763345, "satd_sha": "a6ac1aece96b52601ddad54405274ba854a4cdd9", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564543, "satd_repo": 42763345, "satd_sha": "1f3e0febdfb022982aac801bd8080ac95dfb0ea6", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564543, "satd_repo": 42763345, "satd_sha": "1f3e0febdfb022982aac801bd8080ac95dfb0ea6", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564546, "satd_repo": 42763345, "satd_sha": "1f3e0febdfb022982aac801bd8080ac95dfb0ea6", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564546, "satd_repo": 42763345, "satd_sha": "1f3e0febdfb022982aac801bd8080ac95dfb0ea6", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564552, "satd_repo": 42763345, "satd_sha": "fc1b4446c35beef514ea72bd9d3829b15df59e04", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564552, "satd_repo": 42763345, "satd_sha": "fc1b4446c35beef514ea72bd9d3829b15df59e04", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564554, "satd_repo": 42763345, "satd_sha": "fc1b4446c35beef514ea72bd9d3829b15df59e04", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [13, 14], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564554, "satd_repo": 42763345, "satd_sha": "fc1b4446c35beef514ea72bd9d3829b15df59e04", "satd_text": " Floating-point classification functions are in C99 and TR1, but not in the\n official C++ Standard (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [15, 16], "matched_text": "// Floating-point classification functions are in C99 and TR1, but not in the"}, {"satd_id": 23564583, "satd_repo": 42763345, "satd_sha": "4c431680ba62e1e80271bc63ffec7ab25f16c66a", "satd_text": " Do appropriate casts ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/plda/src/pg_gp/plda.c", "lines": [98], "matched_text": "\t/* Do appropriate casts */"}, {"satd_id": 23564586, "satd_repo": 42763345, "satd_sha": "4c431680ba62e1e80271bc63ffec7ab25f16c66a", "satd_text": " \n     * it's very common to be hashing 0 for countmin sketches.  Rather than \n     * hard-code it here, we cache on first lookup.  In future a bigger cache here\n     * would be nice.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [299, 300, 301, 302, 303], "matched_text": "    /* "}, {"satd_id": 23564598, "satd_repo": 42763345, "satd_sha": "c4e7a659ab2ee856996d565dd676a6a1212865d4", "satd_text": "*\n * @brief Abstract base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractOutputStreamBuffer.hpp", "lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "matched_text": "/**"}, {"satd_id": 23564603, "satd_repo": 42763345, "satd_sha": "c4e7a659ab2ee856996d565dd676a6a1212865d4", "satd_text": " --------------------------------------------------------------------------\n *\n * FIXME: Implementing the assertion handlers here is not without issues.\n * On system with a flat namespace (Linux), the main image might also have\n * definitions of the boost assertion handlers, which would be used (unless\n * the connector library is loaded with RTLD_LOCAL ORed in to the call to\n * dlopen).\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/assert.cpp", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15], "matched_text": " *//* --------------------------------------------------------------------------"}, {"satd_id": 23564611, "satd_repo": 42763345, "satd_sha": "c4e7a659ab2ee856996d565dd676a6a1212865d4", "satd_text": " Do appropriate casts ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/plda/src/pg_gp/plda.c", "lines": [98], "matched_text": "\t/* Do appropriate casts */"}, {"satd_id": 23564612, "satd_repo": 42763345, "satd_sha": "c4e7a659ab2ee856996d565dd676a6a1212865d4", "satd_text": " \n     * it's very common to be hashing 0 for countmin sketches.  Rather than \n     * hard-code it here, we cache on first lookup.  In future a bigger cache here\n     * would be nice.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [299, 300, 301, 302, 303], "matched_text": "    /* "}, {"satd_id": 23564623, "satd_repo": 42763345, "satd_sha": "c4e7a659ab2ee856996d565dd676a6a1212865d4", "satd_text": "*\n     * @brief Differentiate between Armadillo warnings and errors.\n     *\n     * Armadillo only uses one output stream. This requires us to provide some\n     * additional checks for disptaching messages correctly.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractDBInterface.hpp", "lines": [9, 10, 11, 12, 13, 14], "matched_text": "    /**"}, {"satd_id": 23564631, "satd_repo": 42763345, "satd_sha": "7022505f7028ef1900e18d0cb2420b549d02c45a", "satd_text": " \n     * it's very common to be hashing 0 for countmin sketches.  Rather than \n     * hard-code it here, we cache on first lookup.  In future a bigger cache here\n     * would be nice.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [299, 300, 301, 302, 303], "matched_text": "    /* "}, {"satd_id": 23564645, "satd_repo": 42763345, "satd_sha": "22aeaf4da73a50e9cf181214a4a49fb0977c2820", "satd_text": "*\n     * @brief Differentiate between Armadillo warnings and errors.\n     *\n     * Armadillo only uses one output stream. This requires us to provide some\n     * additional checks for disptaching messages correctly.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractDBInterface.hpp", "lines": [9, 10, 11, 12, 13, 14], "matched_text": "    /**"}, {"satd_id": 23564659, "satd_repo": 42763345, "satd_sha": "d045f0ece8ddb41ad31fe95db8439a9189ba4704", "satd_text": " Do appropriate casts ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/plda/src/pg_gp/plda.c", "lines": [98], "matched_text": "\t/* Do appropriate casts */"}, {"satd_id": 23564679, "satd_repo": 42763345, "satd_sha": "f6a084c116a4c8a4669f0113fa977b22b4279bc3", "satd_text": "*\n     * @brief Differentiate between Armadillo warnings and errors.\n     *\n     * Armadillo only uses one output stream. This requires us to provide some\n     * additional checks for disptaching messages correctly.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractDBInterface.hpp", "lines": [9, 10, 11, 12, 13, 14], "matched_text": "    /**"}, {"satd_id": 23564686, "satd_repo": 42763345, "satd_sha": "6c64f6dd7a22b0a45e5816fd2270388da699907f", "satd_text": " --------------------------------------------------------------------------\n *\n * FIXME: Implementing the assertion handlers here is not without issues.\n * On system with a flat namespace (Linux), the main image might also have\n * definitions of the boost assertion handlers, which would be used (unless\n * the connector library is loaded with RTLD_LOCAL ORed in to the call to\n * dlopen).\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/assert.cpp", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15], "matched_text": " *//* --------------------------------------------------------------------------"}, {"satd_id": 23564695, "satd_repo": 42763345, "satd_sha": "788c979659885dffd8c2184e25b18b4ee4d02d44", "satd_text": " --------------------------------------------------------------------------\n *\n * FIXME: Implementing the assertion handlers here is not without issues.\n * On system with a flat namespace (Linux), the main image might also have\n * definitions of the boost assertion handlers, which would be used (unless\n * the connector library is loaded with RTLD_LOCAL ORed in to the call to\n * dlopen).\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/assert.cpp", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15], "matched_text": " *//* --------------------------------------------------------------------------"}, {"satd_id": 23564699, "satd_repo": 42763345, "satd_sha": "43d2718b91480fd369679d102b120aaf2278109d", "satd_text": " Do appropriate casts ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/plda/src/pg_gp/plda.c", "lines": [98], "matched_text": "\t/* Do appropriate casts */"}, {"satd_id": 23564709, "satd_repo": 42763345, "satd_sha": "12ee1888f2f6cf714624e5d60dc2e7ba160a36b9", "satd_text": "*\n * @brief Abstract base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractOutputStreamBuffer.hpp", "lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "matched_text": "/**"}, {"satd_id": 23564728, "satd_repo": 42763345, "satd_sha": "a304a64388af4cd8bf37a6aca6ed0b8898ad694d", "satd_text": " \n     * it's very common to be hashing 0 for countmin sketches.  Rather than \n     * hard-code it here, we cache on first lookup.  In future a bigger cache here\n     * would be nice.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [318, 319, 320, 321, 322], "matched_text": "    /* "}, {"satd_id": 23564738, "satd_repo": 42763345, "satd_sha": "b7734abd971b12cf2842a459a449369cea7ba438", "satd_text": "*\n * @brief Abstract base class for an output stream buffer\n *\n * We start out with a 1K buffer that can grow up to 16K. After that, all input\n * is ignored until the next pubsync() call. A convenient way to implicitly call\n * pubsync() is with the endl manipulator.\n *\n * Use this class by passing the pointer of an instance to the\n * ostream constructor. Example: ostream derr(new DerivedOutputStreamBuffer());\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AbstractOutputStreamBuffer.hpp", "lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "matched_text": "/**"}, {"satd_id": 23564747, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Drop the DOCUMENT-END event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [36], "matched_text": "        # Drop the DOCUMENT-END event."}, {"satd_id": 23564750, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23564750, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23564754, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Drop the DOCUMENT-START event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [30], "matched_text": "        # Drop the DOCUMENT-START event."}, {"satd_id": 23564757, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23564757, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23564759, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Construct and return the next document.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [36], "matched_text": "        # Construct and return the next document."}, {"satd_id": 23564763, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Note: we do not check for duplicate keys, because it's too\n CPU-expensive.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/constructor.py", "lines": [331, 332], "matched_text": "        # Note: we do not check for duplicate keys, because it's too"}, {"satd_id": 23564764, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": "if self.analysis.multiline and split    \\\n        and (not self.style or self.style in '\\'\\\"'):\n    self.write_indent()", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [510, 511, 512], "matched_text": "        #if self.analysis.multiline and split    \\"}, {"satd_id": 23564765, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Check document indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [640], "matched_text": "        # Check document indicators."}, {"satd_id": 23564789, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Formatting details.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [81], "matched_text": "        # Formatting details."}, {"satd_id": 23564793, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Emitter expects events obeying the following grammar:\n stream ::= STREAM-START document* STREAM-END\n document ::= DOCUMENT-START node DOCUMENT-END\n node ::= SCALAR | sequence | mapping\n sequence ::= SEQUENCE-START node* SEQUENCE-END\n mapping ::= MAPPING-START (node node)* MAPPING-END", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [2, 3, 4, 5, 6, 7], "matched_text": "# Emitter expects events obeying the following grammar:"}, {"satd_id": 23564808, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Characteristics of the last emitted character:\n  - current position.\n  - is it a whitespace?\n  - is it an indention character\n    (indentation space, '-', '?', or ':')?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [71, 72, 73, 74, 75], "matched_text": "        # Characteristics of the last emitted character:"}, {"satd_id": 23564818, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Leading and trailing whitespace are bad for plain scalars. We also\n do not want to mess with leading whitespaces for block scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [777, 778], "matched_text": "        # Leading and trailing whitespace are bad for plain scalars. We also"}, {"satd_id": 23564823, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " The current indentation level and the stack of previous indents.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [58], "matched_text": "        # The current indentation level and the stack of previous indents."}, {"satd_id": 23564830, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END\n implicit_document ::= block_node DOCUMENT-END*\n explicit_document ::= DIRECTIVE* DOCUMENT-START block_node? DOCUMENT-END*", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [120, 121, 122], "matched_text": "    # stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END"}, {"satd_id": 23564847, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Parse any extra document end indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [158], "matched_text": "        # Parse any extra document end indicators."}, {"satd_id": 23564848, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Parse the document end.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [189], "matched_text": "        # Parse the document end."}, {"satd_id": 23564851, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Yeah, it's ugly and slow.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/reader.py", "lines": [92], "matched_text": "    # Yeah, it's ugly and slow."}, {"satd_id": 23564878, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Note: the order of the following checks is NOT significant.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [188], "matched_text": "        # Note: the order of the following checks is NOT significant."}, {"satd_id": 23564879, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " See the specification for details.\n The specification is really confusing about tabs in plain scalars.\n We just forbid them completely. Do not use tabs in YAML!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1323, 1324, 1325], "matched_text": "        # See the specification for details."}, {"satd_id": 23564889, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " The current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [75], "matched_text": "        # The current indentation level."}, {"satd_id": 23564892, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Remove entries that are no longer possible simple keys. According to\n the YAML specification, simple keys\n - should be limited to a single line,\n - should be no longer than 1024 characters.\n Disabling this procedure will allow simple keys of any length and\n height (may cause problems if indentation is broken though).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [277, 278, 279, 280, 281, 282], "matched_text": "        # Remove entries that are no longer possible simple keys. According to"}, {"satd_id": 23564912, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Indentation functions.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [324], "matched_text": "    # Indentation functions."}, {"satd_id": 23564913, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " We ignore spaces, line breaks and comments.\n If we find a line break in the block context, we set the flag\n `allow_simple_key` on.\n The byte order mark is stripped if it's the first character in the\n stream. We do not yet support BOM inside the stream as the\n specification requires. Any such mark will be considered as a part\n of the document.\n\n TODO: We need to make tab handling rules more sane. A good rule is\n   Tabs cannot precede tokens\n   BLOCK-SEQUENCE-START, BLOCK-MAPPING-START, BLOCK-END,\n   KEY(block), VALUE(block), BLOCK-ENTRY\n So the checking code is\n   if <TAB>:\n       self.allow_simple_keys = False\n We also need to add the check for `allow_simple_keys == True` to\n `unwind_indent` before issuing BLOCK-END.\n Scanners for block, flow, and plain scalars need to be modified.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "matched_text": "        # We ignore spaces, line breaks and comments."}, {"satd_id": 23564914, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Is it the document start?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [176], "matched_text": "        # Is it the document start?"}, {"satd_id": 23564921, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " In the flow context, indentation is ignored. We make the scanner less\n restrictive then specification requires.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [339, 340], "matched_text": "        # In the flow context, indentation is ignored. We make the scanner less"}, {"satd_id": 23564948, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Is it the document end?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [180], "matched_text": "        # Is it the document end?"}, {"satd_id": 23564958, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Instead of checking indentation, we check for document\n separators.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1261, 1262], "matched_text": "            # Instead of checking indentation, we check for document"}, {"satd_id": 23564961, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Block context needs additional checks.\n (Do we really need them? They will be catched by the parser\n anyway.)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [569, 570, 571], "matched_text": "            # Block context needs additional checks."}, {"satd_id": 23564962, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Determine the indentation level and go to the first non-empty line.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [998], "matched_text": "        # Determine the indentation level and go to the first non-empty line."}, {"satd_id": 23564974, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Compare the current indentation and column. It may add some tokens\n and decrease the current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [161, 162], "matched_text": "        # Compare the current indentation and column. It may add some tokens"}, {"satd_id": 23564980, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Past indentation levels.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [78], "matched_text": "        # Past indentation levels."}, {"satd_id": 23564986, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Check if we need to increase indentation.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [351], "matched_text": "        # Check if we need to increase indentation."}, {"satd_id": 23564992, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Can a simple key start at the current position? A simple key may\n start:\n - at the beginning of the line, not counting indentation spaces\n       (in block context),\n - after '{', '[', ',' (in the flow context),\n - after '?', ':', '-' (in the block context).\n In the block context, this flag also signifies if a block collection\n may start at the current position.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [93, 94, 95, 96, 97, 98, 99, 100], "matched_text": "        # Can a simple key start at the current position? A simple key may"}, {"satd_id": 23565006, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " Add DOCUMENT-START or DOCUMENT-END.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [418], "matched_text": "        # Add DOCUMENT-START or DOCUMENT-END."}, {"satd_id": 23565008, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " We allow zero indentation for scalars, but then we need to check for\n document separators at the beginning of the line.\nif indent == 0:\n    indent = 1", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1285, 1286, 1287, 1288], "matched_text": "        # We allow zero indentation for scalars, but then we need to check for"}, {"satd_id": 23565012, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " See the specification for details.\n Note that we loose indentation rules for quoted scalars. Quoted\n scalars don't need to adhere indentation because \" and ' clearly\n mark the beginning and the end of them. Therefore we are less\n restrictive then the specification requires. We only need to check\n that document separators are not included in scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1141, 1142, 1143, 1144, 1145, 1146], "matched_text": "        # See the specification for details."}, {"satd_id": 23565025, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": "*\n *\n * @file GPArmadilloGlue.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to use the system-provided version of LAPACK and BLAS\n * (because these are probably tuned and optimized). One option would be to\n * dynamically load the core library on OR in RTLD_DEEPBIND to the second\n * argument [2]. Unfortunately, this is also a bad idea because, due to the GCC\n * C++ ABI, there would be ugly side-effects on C++ semanticss [3].\n *\n * The solution that we use is to dynamically load armadillo at runtime and OR\n * in RTLD_DEEPBIND to the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.) To make this work, the\n * core library calls madlib_arma_<LAPACK-function>, which is defined in the\n * connector library (i.e., here). The connector library looks up\n * <LAPACK-function> with dlsym() within libarmadillo.so and its dependencies\n * (i.e., LAPACK/BLAS).\n * \n * The RTLD_DEEPBIND ensures that all calls into the external LAPACK library\n * will not call back into the main image in case when symbols with the same\n * name exist there. (E.g., dgesvd calls dlange, which would exists both in the\n * postgres binary and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n * [3] http://gcc.gnu.org/faq.html#dso\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/dbconnector/GPArmadilloGlue.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565027, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [58, 59], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565027, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/dbconnector/GPArmadilloGlue.cpp", "lines": [68, 69], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565046, "satd_repo": 42763345, "satd_sha": "5a28d0c4d642c969ef81ab80211c41f281324558", "satd_text": " FIXME: Default case", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAbstractValue.cpp", "lines": [62], "matched_text": "            // FIXME: Default case"}, {"satd_id": 23565063, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Drop the DOCUMENT-END event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [36], "matched_text": "        # Drop the DOCUMENT-END event."}, {"satd_id": 23565066, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565066, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565070, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Drop the DOCUMENT-START event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [30], "matched_text": "        # Drop the DOCUMENT-START event."}, {"satd_id": 23565073, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565073, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565075, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Construct and return the next document.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [36], "matched_text": "        # Construct and return the next document."}, {"satd_id": 23565079, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Note: we do not check for duplicate keys, because it's too\n CPU-expensive.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/constructor.py", "lines": [331, 332], "matched_text": "        # Note: we do not check for duplicate keys, because it's too"}, {"satd_id": 23565080, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": "if self.analysis.multiline and split    \\\n        and (not self.style or self.style in '\\'\\\"'):\n    self.write_indent()", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [510, 511, 512], "matched_text": "        #if self.analysis.multiline and split    \\"}, {"satd_id": 23565081, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Check document indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [640], "matched_text": "        # Check document indicators."}, {"satd_id": 23565105, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Formatting details.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [81], "matched_text": "        # Formatting details."}, {"satd_id": 23565109, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Emitter expects events obeying the following grammar:\n stream ::= STREAM-START document* STREAM-END\n document ::= DOCUMENT-START node DOCUMENT-END\n node ::= SCALAR | sequence | mapping\n sequence ::= SEQUENCE-START node* SEQUENCE-END\n mapping ::= MAPPING-START (node node)* MAPPING-END", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [2, 3, 4, 5, 6, 7], "matched_text": "# Emitter expects events obeying the following grammar:"}, {"satd_id": 23565124, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Characteristics of the last emitted character:\n  - current position.\n  - is it a whitespace?\n  - is it an indention character\n    (indentation space, '-', '?', or ':')?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [71, 72, 73, 74, 75], "matched_text": "        # Characteristics of the last emitted character:"}, {"satd_id": 23565134, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Leading and trailing whitespace are bad for plain scalars. We also\n do not want to mess with leading whitespaces for block scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [777, 778], "matched_text": "        # Leading and trailing whitespace are bad for plain scalars. We also"}, {"satd_id": 23565139, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " The current indentation level and the stack of previous indents.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [58], "matched_text": "        # The current indentation level and the stack of previous indents."}, {"satd_id": 23565146, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END\n implicit_document ::= block_node DOCUMENT-END*\n explicit_document ::= DIRECTIVE* DOCUMENT-START block_node? DOCUMENT-END*", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [120, 121, 122], "matched_text": "    # stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END"}, {"satd_id": 23565163, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Parse any extra document end indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [158], "matched_text": "        # Parse any extra document end indicators."}, {"satd_id": 23565164, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Parse the document end.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [189], "matched_text": "        # Parse the document end."}, {"satd_id": 23565167, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Yeah, it's ugly and slow.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/reader.py", "lines": [92], "matched_text": "    # Yeah, it's ugly and slow."}, {"satd_id": 23565194, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Note: the order of the following checks is NOT significant.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [188], "matched_text": "        # Note: the order of the following checks is NOT significant."}, {"satd_id": 23565195, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " See the specification for details.\n The specification is really confusing about tabs in plain scalars.\n We just forbid them completely. Do not use tabs in YAML!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1323, 1324, 1325], "matched_text": "        # See the specification for details."}, {"satd_id": 23565205, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " The current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [75], "matched_text": "        # The current indentation level."}, {"satd_id": 23565208, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Remove entries that are no longer possible simple keys. According to\n the YAML specification, simple keys\n - should be limited to a single line,\n - should be no longer than 1024 characters.\n Disabling this procedure will allow simple keys of any length and\n height (may cause problems if indentation is broken though).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [277, 278, 279, 280, 281, 282], "matched_text": "        # Remove entries that are no longer possible simple keys. According to"}, {"satd_id": 23565228, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Indentation functions.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [324], "matched_text": "    # Indentation functions."}, {"satd_id": 23565229, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " We ignore spaces, line breaks and comments.\n If we find a line break in the block context, we set the flag\n `allow_simple_key` on.\n The byte order mark is stripped if it's the first character in the\n stream. We do not yet support BOM inside the stream as the\n specification requires. Any such mark will be considered as a part\n of the document.\n\n TODO: We need to make tab handling rules more sane. A good rule is\n   Tabs cannot precede tokens\n   BLOCK-SEQUENCE-START, BLOCK-MAPPING-START, BLOCK-END,\n   KEY(block), VALUE(block), BLOCK-ENTRY\n So the checking code is\n   if <TAB>:\n       self.allow_simple_keys = False\n We also need to add the check for `allow_simple_keys == True` to\n `unwind_indent` before issuing BLOCK-END.\n Scanners for block, flow, and plain scalars need to be modified.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "matched_text": "        # We ignore spaces, line breaks and comments."}, {"satd_id": 23565230, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Is it the document start?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [176], "matched_text": "        # Is it the document start?"}, {"satd_id": 23565237, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " In the flow context, indentation is ignored. We make the scanner less\n restrictive then specification requires.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [339, 340], "matched_text": "        # In the flow context, indentation is ignored. We make the scanner less"}, {"satd_id": 23565264, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Is it the document end?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [180], "matched_text": "        # Is it the document end?"}, {"satd_id": 23565274, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Instead of checking indentation, we check for document\n separators.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1261, 1262], "matched_text": "            # Instead of checking indentation, we check for document"}, {"satd_id": 23565277, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Block context needs additional checks.\n (Do we really need them? They will be catched by the parser\n anyway.)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [569, 570, 571], "matched_text": "            # Block context needs additional checks."}, {"satd_id": 23565278, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Determine the indentation level and go to the first non-empty line.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [998], "matched_text": "        # Determine the indentation level and go to the first non-empty line."}, {"satd_id": 23565290, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Compare the current indentation and column. It may add some tokens\n and decrease the current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [161, 162], "matched_text": "        # Compare the current indentation and column. It may add some tokens"}, {"satd_id": 23565296, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Past indentation levels.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [78], "matched_text": "        # Past indentation levels."}, {"satd_id": 23565302, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Check if we need to increase indentation.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [351], "matched_text": "        # Check if we need to increase indentation."}, {"satd_id": 23565308, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Can a simple key start at the current position? A simple key may\n start:\n - at the beginning of the line, not counting indentation spaces\n       (in block context),\n - after '{', '[', ',' (in the flow context),\n - after '?', ':', '-' (in the block context).\n In the block context, this flag also signifies if a block collection\n may start at the current position.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [93, 94, 95, 96, 97, 98, 99, 100], "matched_text": "        # Can a simple key start at the current position? A simple key may"}, {"satd_id": 23565322, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " Add DOCUMENT-START or DOCUMENT-END.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [418], "matched_text": "        # Add DOCUMENT-START or DOCUMENT-END."}, {"satd_id": 23565324, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " We allow zero indentation for scalars, but then we need to check for\n document separators at the beginning of the line.\nif indent == 0:\n    indent = 1", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1285, 1286, 1287, 1288], "matched_text": "        # We allow zero indentation for scalars, but then we need to check for"}, {"satd_id": 23565328, "satd_repo": 42763345, "satd_sha": "f50032a46d3850231c86ba429aa9dc114dcb4ece", "satd_text": " See the specification for details.\n Note that we loose indentation rules for quoted scalars. Quoted\n scalars don't need to adhere indentation because \" and ' clearly\n mark the beginning and the end of them. Therefore we are less\n restrictive then the specification requires. We only need to check\n that document separators are not included in scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1141, 1142, 1143, 1144, 1145, 1146], "matched_text": "        # See the specification for details."}, {"satd_id": 23565341, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Drop the DOCUMENT-END event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [36], "matched_text": "        # Drop the DOCUMENT-END event."}, {"satd_id": 23565344, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565344, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565348, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Drop the DOCUMENT-START event.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [30], "matched_text": "        # Drop the DOCUMENT-START event."}, {"satd_id": 23565351, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/composer.py", "lines": [21], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565351, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " If there are more documents available?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [32], "matched_text": "        # If there are more documents available?"}, {"satd_id": 23565353, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Construct and return the next document.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/constructor.py", "lines": [36], "matched_text": "        # Construct and return the next document."}, {"satd_id": 23565357, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Note: we do not check for duplicate keys, because it's too\n CPU-expensive.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/constructor.py", "lines": [331, 332], "matched_text": "        # Note: we do not check for duplicate keys, because it's too"}, {"satd_id": 23565358, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": "if self.analysis.multiline and split    \\\n        and (not self.style or self.style in '\\'\\\"'):\n    self.write_indent()", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [510, 511, 512], "matched_text": "        #if self.analysis.multiline and split    \\"}, {"satd_id": 23565359, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Check document indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [640], "matched_text": "        # Check document indicators."}, {"satd_id": 23565383, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Formatting details.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [81], "matched_text": "        # Formatting details."}, {"satd_id": 23565387, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Emitter expects events obeying the following grammar:\n stream ::= STREAM-START document* STREAM-END\n document ::= DOCUMENT-START node DOCUMENT-END\n node ::= SCALAR | sequence | mapping\n sequence ::= SEQUENCE-START node* SEQUENCE-END\n mapping ::= MAPPING-START (node node)* MAPPING-END", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/emitter.py", "lines": [2, 3, 4, 5, 6, 7], "matched_text": "# Emitter expects events obeying the following grammar:"}, {"satd_id": 23565402, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Characteristics of the last emitted character:\n  - current position.\n  - is it a whitespace?\n  - is it an indention character\n    (indentation space, '-', '?', or ':')?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [71, 72, 73, 74, 75], "matched_text": "        # Characteristics of the last emitted character:"}, {"satd_id": 23565412, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Leading and trailing whitespace are bad for plain scalars. We also\n do not want to mess with leading whitespaces for block scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [777, 778], "matched_text": "        # Leading and trailing whitespace are bad for plain scalars. We also"}, {"satd_id": 23565417, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " The current indentation level and the stack of previous indents.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/emitter.py", "lines": [58], "matched_text": "        # The current indentation level and the stack of previous indents."}, {"satd_id": 23565424, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END\n implicit_document ::= block_node DOCUMENT-END*\n explicit_document ::= DIRECTIVE* DOCUMENT-START block_node? DOCUMENT-END*", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [120, 121, 122], "matched_text": "    # stream    ::= STREAM-START implicit_document? explicit_document* STREAM-END"}, {"satd_id": 23565441, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Parse any extra document end indicators.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [158], "matched_text": "        # Parse any extra document end indicators."}, {"satd_id": 23565442, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Parse the document end.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/parser.py", "lines": [189], "matched_text": "        # Parse the document end."}, {"satd_id": 23565445, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Yeah, it's ugly and slow.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/reader.py", "lines": [92], "matched_text": "    # Yeah, it's ugly and slow."}, {"satd_id": 23565472, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Note: the order of the following checks is NOT significant.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [188], "matched_text": "        # Note: the order of the following checks is NOT significant."}, {"satd_id": 23565473, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " See the specification for details.\n The specification is really confusing about tabs in plain scalars.\n We just forbid them completely. Do not use tabs in YAML!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1323, 1324, 1325], "matched_text": "        # See the specification for details."}, {"satd_id": 23565483, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " The current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [75], "matched_text": "        # The current indentation level."}, {"satd_id": 23565486, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Remove entries that are no longer possible simple keys. According to\n the YAML specification, simple keys\n - should be limited to a single line,\n - should be no longer than 1024 characters.\n Disabling this procedure will allow simple keys of any length and\n height (may cause problems if indentation is broken though).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [277, 278, 279, 280, 281, 282], "matched_text": "        # Remove entries that are no longer possible simple keys. According to"}, {"satd_id": 23565506, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Indentation functions.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [324], "matched_text": "    # Indentation functions."}, {"satd_id": 23565507, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " We ignore spaces, line breaks and comments.\n If we find a line break in the block context, we set the flag\n `allow_simple_key` on.\n The byte order mark is stripped if it's the first character in the\n stream. We do not yet support BOM inside the stream as the\n specification requires. Any such mark will be considered as a part\n of the document.\n\n TODO: We need to make tab handling rules more sane. A good rule is\n   Tabs cannot precede tokens\n   BLOCK-SEQUENCE-START, BLOCK-MAPPING-START, BLOCK-END,\n   KEY(block), VALUE(block), BLOCK-ENTRY\n So the checking code is\n   if <TAB>:\n       self.allow_simple_keys = False\n We also need to add the check for `allow_simple_keys == True` to\n `unwind_indent` before issuing BLOCK-END.\n Scanners for block, flow, and plain scalars need to be modified.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "matched_text": "        # We ignore spaces, line breaks and comments."}, {"satd_id": 23565508, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Is it the document start?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [176], "matched_text": "        # Is it the document start?"}, {"satd_id": 23565515, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " In the flow context, indentation is ignored. We make the scanner less\n restrictive then specification requires.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [339, 340], "matched_text": "        # In the flow context, indentation is ignored. We make the scanner less"}, {"satd_id": 23565542, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Is it the document end?", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [180], "matched_text": "        # Is it the document end?"}, {"satd_id": 23565552, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Instead of checking indentation, we check for document\n separators.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1261, 1262], "matched_text": "            # Instead of checking indentation, we check for document"}, {"satd_id": 23565555, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Block context needs additional checks.\n (Do we really need them? They will be catched by the parser\n anyway.)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [569, 570, 571], "matched_text": "            # Block context needs additional checks."}, {"satd_id": 23565556, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Determine the indentation level and go to the first non-empty line.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [998], "matched_text": "        # Determine the indentation level and go to the first non-empty line."}, {"satd_id": 23565568, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Compare the current indentation and column. It may add some tokens\n and decrease the current indentation level.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [161, 162], "matched_text": "        # Compare the current indentation and column. It may add some tokens"}, {"satd_id": 23565574, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Past indentation levels.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [78], "matched_text": "        # Past indentation levels."}, {"satd_id": 23565580, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Check if we need to increase indentation.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [351], "matched_text": "        # Check if we need to increase indentation."}, {"satd_id": 23565586, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Can a simple key start at the current position? A simple key may\n start:\n - at the beginning of the line, not counting indentation spaces\n       (in block context),\n - after '{', '[', ',' (in the flow context),\n - after '?', ':', '-' (in the block context).\n In the block context, this flag also signifies if a block collection\n may start at the current position.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [93, 94, 95, 96, 97, 98, 99, 100], "matched_text": "        # Can a simple key start at the current position? A simple key may"}, {"satd_id": 23565600, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " Add DOCUMENT-START or DOCUMENT-END.", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "src/madpack/yaml/scanner.py", "lines": [418], "matched_text": "        # Add DOCUMENT-START or DOCUMENT-END."}, {"satd_id": 23565602, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " We allow zero indentation for scalars, but then we need to check for\n document separators at the beginning of the line.\nif indent == 0:\n    indent = 1", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1285, 1286, 1287, 1288], "matched_text": "        # We allow zero indentation for scalars, but then we need to check for"}, {"satd_id": 23565606, "satd_repo": 42763345, "satd_sha": "a5da78cd746356f9813caea5351fad2d147af27e", "satd_text": " See the specification for details.\n Note that we loose indentation rules for quoted scalars. Quoted\n scalars don't need to adhere indentation because \" and ' clearly\n mark the beginning and the end of them. Therefore we are less\n restrictive then the specification requires. We only need to check\n that document separators are not included in scalars.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/yaml/scanner.py", "lines": [1141, 1142, 1143, 1144, 1145, 1146], "matched_text": "        # See the specification for details."}, {"satd_id": 23565617, "satd_repo": 42763345, "satd_sha": "1c3497724c8f67ddb6c0ef02ba504f7cbf151f15", "satd_text": "*\n *\n * @file GPArmadilloGlue.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to use the system-provided version of LAPACK and BLAS\n * (because these are probably tuned and optimized). One option would be to\n * dynamically load the core library on OR in RTLD_DEEPBIND to the second\n * argument [2]. Unfortunately, this is also a bad idea because, due to the GCC\n * C++ ABI, there would be ugly side-effects on C++ semanticss [3].\n *\n * The solution that we use is to dynamically load armadillo at runtime and OR\n * in RTLD_DEEPBIND to the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.) To make this work, the\n * core library calls madlib_arma_<LAPACK-function>, which is defined in the\n * connector library (i.e., here). The connector library looks up\n * <LAPACK-function> with dlsym() within libarmadillo.so and its dependencies\n * (i.e., LAPACK/BLAS).\n * \n * The RTLD_DEEPBIND ensures that all calls into the external LAPACK library\n * will not call back into the main image in case when symbols with the same\n * name exist there. (E.g., dgesvd calls dlange, which would exists both in the\n * postgres binary and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n * [3] http://gcc.gnu.org/faq.html#dso\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/dbconnector/GPArmadilloGlue.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565633, "satd_repo": 42763345, "satd_sha": "672b8ee64a0d30f3b84a59f467389a0f5fc48a5c", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPArmadilloGlue.cpp", "lines": [122, 123], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565633, "satd_repo": 42763345, "satd_sha": "672b8ee64a0d30f3b84a59f467389a0f5fc48a5c", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [58, 59], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565655, "satd_repo": 42763345, "satd_sha": "672b8ee64a0d30f3b84a59f467389a0f5fc48a5c", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPArmadilloGlue.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565655, "satd_repo": 42763345, "satd_sha": "672b8ee64a0d30f3b84a59f467389a0f5fc48a5c", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565658, "satd_repo": 42763345, "satd_sha": "672b8ee64a0d30f3b84a59f467389a0f5fc48a5c", "satd_text": " FIXME: Default case", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAbstractValue.cpp", "lines": [62], "matched_text": "            // FIXME: Default case"}, {"satd_id": 23565663, "satd_repo": 42763345, "satd_sha": "667fdff01d443c36780208505e2ee6c9cc7e0ba7", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPArmadilloGlue.cpp", "lines": [122, 123], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565663, "satd_repo": 42763345, "satd_sha": "667fdff01d443c36780208505e2ee6c9cc7e0ba7", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [58, 59], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23565685, "satd_repo": 42763345, "satd_sha": "667fdff01d443c36780208505e2ee6c9cc7e0ba7", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPArmadilloGlue.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565685, "satd_repo": 42763345, "satd_sha": "667fdff01d443c36780208505e2ee6c9cc7e0ba7", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23565688, "satd_repo": 42763345, "satd_sha": "667fdff01d443c36780208505e2ee6c9cc7e0ba7", "satd_text": " FIXME: Default case", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAbstractValue.cpp", "lines": [62], "matched_text": "            // FIXME: Default case"}, {"satd_id": 23565706, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: Think whether we need to use a safe conversion idiom like\n http://www.artima.com/cppsource/safebool.html", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_impl.hpp", "lines": [10, 11], "matched_text": "// FIXME: Think whether we need to use a safe conversion idiom like"}, {"satd_id": 23565715, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: This could be more efficient, operator->() creates AnyValue\n which is then deleted again", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_proto.hpp", "lines": [40, 41], "matched_text": "            // FIXME: This could be more efficient, operator->() creates AnyValue"}, {"satd_id": 23565719, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: Necessary to test: if (mDelegate)?", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/dbal/AnyValue_proto.hpp", "lines": [111], "matched_text": "        // FIXME: Necessary to test: if (mDelegate)?"}, {"satd_id": 23565721, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: Null!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_proto.hpp", "lines": [128], "matched_text": "        // FIXME: Null!"}, {"satd_id": 23565731, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: We might \"own\" the cloned memory handle, so we should release it.\n This is not a problem for PostgreSQL, but we need to implement reference\n counting. Either based on shared_ptr or our own.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Array.hpp", "lines": [69, 70, 71], "matched_text": "    // FIXME: We might \"own\" the cloned memory handle, so we should release it."}, {"satd_id": 23565743, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: We might want to add detailed error messages when converting immutable\n into mutable type. Right now, the standard error msg will be displayed.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/ConcreteValue_impl.hpp", "lines": [103, 104], "matched_text": "// FIXME: We might want to add detailed error messages when converting immutable"}, {"satd_id": 23565785, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": "*\n     * @internal This function accesses internal elements of arma::mat.\n     *      While these elements are all declared as public, this is not\n     *      entirely clean.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Vector_const.hpp", "lines": [105, 106, 107, 108, 109], "matched_text": "    /**"}, {"satd_id": 23565830, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " if there is an explicit argument, try to match the\n optional's string arguments to only this", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [1829, 1830], "matched_text": "                # if there is an explicit argument, try to match the"}, {"satd_id": 23565836, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " ===============\n Formatting Help\n ===============", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [164, 165, 166], "matched_text": "# ==============="}, {"satd_id": 23565876, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " ===============================\n Section and indentation methods\n ===============================", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [204, 205, 206], "matched_text": "    # ==============================="}, {"satd_id": 23565895, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " short action name; start on the same line and pad two spaces", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [519], "matched_text": "        # short action name; start on the same line and pad two spaces"}, {"satd_id": 23565919, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " clean up separators for mutually exclusive groups", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [487], "matched_text": "        # clean up separators for mutually exclusive groups"}, {"satd_id": 23565992, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " format the indented section", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [225], "matched_text": "            # format the indented section"}, {"satd_id": 23565999, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " =====================================\n Command line argument parsing methods\n =====================================", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [1699, 1700, 1701], "matched_text": "    # ====================================="}, {"satd_id": 23566152, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " Import commonly used names into the modules namespace", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/common.hpp", "lines": [17], "matched_text": "// Import commonly used names into the modules namespace"}, {"satd_id": 23566184, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " Arguments from SQL call. Immutable values passed by reference should be\n instantiated from the respective <tt>_const</tt> class. Otherwise, the\n abstraction layer will perform a deep copy (i.e., waste unnecessary\n processor cycles).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [155, 156, 157, 158], "matched_text": "    // Arguments from SQL call. Immutable values passed by reference should be"}, {"satd_id": 23566186, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [203, 204], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23566227, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: Harden the code. pinv can throw an exception if \n matrix is ill-formed", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [488, 489], "matched_text": "    // FIXME: Harden the code. pinv can throw an exception if "}, {"satd_id": 23566248, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/dbconnector/GPCompatibility.cpp", "lines": [35], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23566248, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGCompatibility.cpp", "lines": [39], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23566256, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [58, 59], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23566259, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/GPMain.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23566266, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: we cannot write namespace linux for some reason", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/linux/modules/declarations.cpp", "lines": [27], "matched_text": "// FIXME: we cannot write namespace linux for some reason"}, {"satd_id": 23566283, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": "\n     * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n     * our own message. After unwinding the C++ stack, the PostgreSQL\n     * exception will be re-thrown into the PostgreSQL C code.\n     *\n     * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n     * per se, but it does not hurt to keep the exception mechanisms clearly\n     * separated.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [97, 98, 99, 100, 101, 102, 103, 104, 105], "matched_text": "    /*"}, {"satd_id": 23566284, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " Probably not necessary but we clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGAllocator.cpp", "lines": [90], "matched_text": "        // Probably not necessary but we clean up after ourselves"}, {"satd_id": 23566309, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/dbconnector/GPCompatibility.cpp", "lines": [35], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23566309, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGCompatibility.cpp", "lines": [39], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23566352, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": "*\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGNewDelete.cpp", "lines": [52, 53, 54, 55, 56], "matched_text": "/**"}, {"satd_id": 23566353, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": "\n * The default behavior of\n *\n *   void *operator new[](std::size_t inSize) throw (std::bad_alloc)\n *   void *operator new[](std::size_t, const std::nothrow_t&) throw()\n *   void operator delete[](void *inPtr) throw()\n *   void operator delete[](void *inPtr, const std::nothrow_t&) throw()\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGNewDelete.cpp", "lines": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "matched_text": "/*"}, {"satd_id": 23566358, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " Don't ereport errors. We set typmod < 0, and this should not cause\n an error because compound types in another compund can never be\n transient. (I think)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGToDatumConverter.cpp", "lines": [51, 52, 53], "matched_text": "        // Don't ereport errors. We set typmod < 0, and this should not cause"}, {"satd_id": 23566361, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: We copy memory here!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGToDatumConverter.cpp", "lines": [159], "matched_text": "        // FIXME: We copy memory here!"}, {"satd_id": 23566363, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGToDatumConverter.cpp", "lines": [29], "matched_text": "    // FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23566375, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/dbconnector/PGValue.cpp", "lines": [40, 41, 42, 43, 44, 45], "matched_text": "    // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23566397, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " The error function is in C99 and TR1, but not in the official C++ Standard\n (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [60, 61], "matched_text": "// The error function is in C99 and TR1, but not in the official C++ Standard"}, {"satd_id": 23566403, "satd_repo": 42763345, "satd_sha": "bdcf11d7cc17895c3300352cb14c94220536f115", "satd_text": " The error function is in C99 and TR1, but not in the official C++ Standard\n (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [60, 61], "matched_text": "// The error function is in C99 and TR1, but not in the official C++ Standard"}, {"satd_id": 23566435, "satd_repo": 42763345, "satd_sha": "c5938b007c4e5e9561e2e0e705ec03a07dbc0b8b", "satd_text": "\nThis module provides c implementations for several postgres array operations.\n\nThere is a 3 tier structure to each function calls. This is done to take advantage of some common type\nchecking. All the functions are classified into 4 types based on the input/output types:\n\nfunction(array,array)->array (calls: General_2Array_to_Array)\nfunction(array,scalar)->array (calls: General_Array_to_Array)\nfunction(array,array)->scalar (calls: General_2Array_to_Element)\nfunction(array,scalar)->scalar (calls: General_Array_to_Element)\n\nAssuming that this input is flexible enough for some new function, implementer needs to provide 2 functions. First is the top level function\nthat is being exposed to SQL and takes the necessary parameters. This function makes a call to one of the 4 intermediate functions, passing pointer to the low level function (or functions) as the argument. In case of the single function, this low level function, it will specify the operations to be executed against each cell in the array. If two functions are to be passed the second is the finalization function that takes the result of the execution on each cell and produces final result. In case not final functions is necessary a generic 'noop_finalize' can be used - which does nothing to the intermediate result.\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array-ops/src/pg_gp/array-ops.c", "lines": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "matched_text": "/*"}, {"satd_id": 23566466, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " if there is an explicit argument, try to match the\n optional's string arguments to only this", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [1829, 1830], "matched_text": "                # if there is an explicit argument, try to match the"}, {"satd_id": 23566472, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " ===============\n Formatting Help\n ===============", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [164, 165, 166], "matched_text": "# ==============="}, {"satd_id": 23566512, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " ===============================\n Section and indentation methods\n ===============================", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [204, 205, 206], "matched_text": "    # ==============================="}, {"satd_id": 23566531, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " short action name; start on the same line and pad two spaces", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [519], "matched_text": "        # short action name; start on the same line and pad two spaces"}, {"satd_id": 23566555, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " clean up separators for mutually exclusive groups", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [487], "matched_text": "        # clean up separators for mutually exclusive groups"}, {"satd_id": 23566628, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " format the indented section", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [225], "matched_text": "            # format the indented section"}, {"satd_id": 23566635, "satd_repo": 42763345, "satd_sha": "8cd77e9e24d3ba3ae7e2af457bfd706fa4074d50", "satd_text": " =====================================\n Command line argument parsing methods\n =====================================", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/madpack/argparse.py", "lines": [1699, 1700, 1701], "matched_text": "    # ====================================="}, {"satd_id": 23566665, "satd_repo": 42763345, "satd_sha": "a03efc4796efa1bf41d4585b989f3a7996062c85", "satd_text": "\nThis module provides c implementations for several postgres array operations.\n\nThere is a 3 tier structure to each function calls. This is done to take advantage of some common type\nchecking. All the functions are classified into 4 types based on the input/output types:\n\nfunction(array,array)->array (calls: General_2Array_to_Array)\nfunction(array,scalar)->array (calls: General_Array_to_Array)\nfunction(array,array)->scalar (calls: General_2Array_to_Element)\nfunction(array,scalar)->scalar (calls: General_Array_to_Element)\n\nAssuming that this input is flexible enough for some new function, implementer needs to provide 2 functions. First is the top level function\nthat is being exposed to SQL and takes the necessary parameters. This function makes a call to one of the 4 intermediate functions, passing pointer to the low level function (or functions) as the argument. In case of the single function, this low level function, it will specify the operations to be executed against each cell in the array. If two functions are to be passed the second is the finalization function that takes the result of the execution on each cell and produces final result. In case not final functions is necessary a generic 'noop_finalize' can be used - which does nothing to the intermediate result.\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array-ops/src/pg_gp/array-ops.c", "lines": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "matched_text": "/*"}, {"satd_id": 23566782, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Think whether we need to use a safe conversion idiom like\n http://www.artima.com/cppsource/safebool.html", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_impl.hpp", "lines": [10, 11], "matched_text": "// FIXME: Think whether we need to use a safe conversion idiom like"}, {"satd_id": 23566791, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: This could be more efficient, operator->() creates AnyValue\n which is then deleted again", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_proto.hpp", "lines": [40, 41], "matched_text": "            // FIXME: This could be more efficient, operator->() creates AnyValue"}, {"satd_id": 23566795, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Necessary to test: if (mDelegate)?", "satd_label": "Test-SATD", "satd_label_short": "tes", "file": "src/dbal/AnyValue_proto.hpp", "lines": [111], "matched_text": "        // FIXME: Necessary to test: if (mDelegate)?"}, {"satd_id": 23566797, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Null!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/AnyValue_proto.hpp", "lines": [128], "matched_text": "        // FIXME: Null!"}, {"satd_id": 23566807, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: We might \"own\" the cloned memory handle, so we should release it.\n This is not a problem for PostgreSQL, but we need to implement reference\n counting. Either based on shared_ptr or our own.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Array.hpp", "lines": [69, 70, 71], "matched_text": "    // FIXME: We might \"own\" the cloned memory handle, so we should release it."}, {"satd_id": 23566819, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: We might want to add detailed error messages when converting immutable\n into mutable type. Right now, the standard error msg will be displayed.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/ConcreteValue_impl.hpp", "lines": [103, 104], "matched_text": "// FIXME: We might want to add detailed error messages when converting immutable"}, {"satd_id": 23566861, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": "*\n     * @internal This function accesses internal elements of arma::mat.\n     *      While these elements are all declared as public, this is not\n     *      entirely clean.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/dbal/Vector_const.hpp", "lines": [105, 106, 107, 108, 109], "matched_text": "    /**"}, {"satd_id": 23566885, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Returning the result set from Python code means that values\n pass through Python (and there is a potential loss of precision by\n conversion)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/extra/regress.py", "lines": [121, 122, 123], "matched_text": "    # FIXME: Returning the result set from Python code means that values"}, {"satd_id": 23566890, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " Import commonly used names into the modules namespace", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/common.hpp", "lines": [17], "matched_text": "// Import commonly used names into the modules namespace"}, {"satd_id": 23566907, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " The error function is in C99 and TR1, but not in the official C++ Standard\n (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/prob/student.cpp", "lines": [60, 61], "matched_text": "// The error function is in C99 and TR1, but not in the official C++ Standard"}, {"satd_id": 23566944, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " Arguments from SQL call. Immutable values passed by reference should be\n instantiated from the respective <tt>_const</tt> class. Otherwise, the\n abstraction layer will perform a deep copy (i.e., waste unnecessary\n processor cycles).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [155, 156, 157, 158], "matched_text": "    // Arguments from SQL call. Immutable values passed by reference should be"}, {"satd_id": 23566946, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/linear.cpp", "lines": [196, 197], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23566985, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Harden the code. pinv can throw an exception if \n matrix is ill-formed", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/modules/regress/logistic.cpp", "lines": [474, 475], "matched_text": "    // FIXME: Harden the code. pinv can throw an exception if "}, {"satd_id": 23567005, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/compatibility.cpp", "lines": [36], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567005, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/compatibility.cpp", "lines": [41], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567013, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/main.cpp", "lines": [62, 63], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23567016, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/linux/main.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23567024, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: we cannot write namespace linux for some reason", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/linux/declarations.cpp", "lines": [27], "matched_text": "// FIXME: we cannot write namespace linux for some reason"}, {"satd_id": 23567044, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": "\n     * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n     * our own message. After unwinding the C++ stack, the PostgreSQL\n     * exception will be re-thrown into the PostgreSQL C code.\n     *\n     * Throwing C++ exceptions inside a PG_CATCH block is not problematic\n     * per se, but it does not hurt to keep the exception mechanisms clearly\n     * separated.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGAllocator.cpp", "lines": [99, 100, 101, 102, 103, 104, 105, 106, 107], "matched_text": "    /*"}, {"satd_id": 23567045, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " Probably not necessary but we clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGAllocator.cpp", "lines": [92], "matched_text": "        // Probably not necessary but we clean up after ourselves"}, {"satd_id": 23567077, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " Don't ereport errors. We set typmod < 0, and this should not cause\n an error because compound types in another compund can never be\n transient. (I think)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGToDatumConverter.cpp", "lines": [53, 54, 55], "matched_text": "        // Don't ereport errors. We set typmod < 0, and this should not cause"}, {"satd_id": 23567079, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: We copy memory here!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGToDatumConverter.cpp", "lines": [161], "matched_text": "        // FIXME: We copy memory here!"}, {"satd_id": 23567081, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGToDatumConverter.cpp", "lines": [31], "matched_text": "    // FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23567095, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/PGValue.cpp", "lines": [42, 43, 44, 45, 46, 47], "matched_text": "    // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23567105, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/greenplum/compatibility.cpp", "lines": [36], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567105, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/compatibility.cpp", "lines": [41], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567146, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": "*\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/operatorNewDelete.cpp", "lines": [52, 53, 54, 55, 56], "matched_text": "/**"}, {"satd_id": 23567147, "satd_repo": 42763345, "satd_sha": "c3faa027e062f5b4ea94874378656383380501ee", "satd_text": "\n * The default behavior of\n *\n *   void *operator new[](std::size_t inSize) throw (std::bad_alloc)\n *   void *operator new[](std::size_t, const std::nothrow_t&) throw()\n *   void operator delete[](void *inPtr) throw()\n *   void operator delete[](void *inPtr, const std::nothrow_t&) throw()\n *\n * is to call the non-array variants (18.4.1.2). Hence no need to override.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "src/ports/postgres/operatorNewDelete.cpp", "lines": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "matched_text": "/*"}, {"satd_id": 23567170, "satd_repo": 42763345, "satd_sha": "b02db736b9eca622862fe78a60c405b07feaed14", "satd_text": " FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs\n depend on LAPACK/BLAS", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/greenplum/linux/main.cpp", "lines": [62, 63], "matched_text": "    // FIXME: Think again about RTLD_GLOBAL and what happens if other UDFs"}, {"satd_id": 23567179, "satd_repo": 42763345, "satd_sha": "d4cb292f72ede573edc2a280a0279927ea985402", "satd_text": " FIXME: we cannot write namespace linux for some reason", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/linux/declarations.cpp", "lines": [27], "matched_text": "// FIXME: we cannot write namespace linux for some reason"}, {"satd_id": 23567184, "satd_repo": 42763345, "satd_sha": "2564d237ca63c74e77ce54227ca697ee086ad328", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/greenplum/compatibility.cpp", "lines": [36], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567184, "satd_repo": 42763345, "satd_sha": "2564d237ca63c74e77ce54227ca697ee086ad328", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/compatibility.cpp", "lines": [41], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567191, "satd_repo": 42763345, "satd_sha": "2564d237ca63c74e77ce54227ca697ee086ad328", "satd_text": "*\n *\n * @file main.cpp\n *\n * Greenplum <= 4.1 statically links to CLAPACK and BLAS. However, it only\n * contains a subset of these libraries (unused symbols are removed from its\n * postgres binary). This causes major headache when writing compiled UDFs that\n * itself rely on these third-party libraries but need a superset of what is\n * contained in GPDB.\n * \n * Reason: When GPDB loads the shared library containing the compiled UDF with\n * dlopen, each used symbols is bound to the definition that was loaded\n * first [1].\n *\n * Example: For some functions used by MADlib (such as dlange, which is called\n * from dgesvd, which is called from arma::pinv) the definition first loaded is\n * in the GPDB binary, for some other function (say, dgesvd, which is not\n * contained in the GPDB image) this would be /usr/lib/liblapack.so. Clearly,\n * mixing implementations from potentially different versions of a third-party\n * library almost certainly calls for trouble.\n *\n * In MADlib, we want to dynamically link to the system-provided version of\n * LAPACK and BLAS (because these are probably tuned and optimized). Hence, we\n * have only a lazy link to armadillo and then call dlload explicitly with\n * the RTLD_DEEPBIND option [2] in the second argument. (BLAS and possibly ATLAS\n * will be loaded as depedencies with the same settings.)\n * \n * This ensures that all calls into the external LAPACK library will not call\n * back into the main image in case when symbols with the same name exist there.\n * (E.g., dgesvd calls dlange, which would exists both in the postgres binary\n * and in the external LAPACK.)\n *\n * [1] POSIX standard on dlopen:\n *     http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlopen.html\n * [2] man dlopen on Linux (since glibc 2.3.4)\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/greenplum/linux/main.cpp", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "matched_text": "/* ----------------------------------------------------------------------- *//**"}, {"satd_id": 23567214, "satd_repo": 42763345, "satd_sha": "06b916beef5074b5f32962b4f9328cfb08fc3be1", "satd_text": " number of times a word is assigned topic j in this document", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "methods/plda/src/pg_gp/plda_support.c", "lines": [150], "matched_text": "\t\t// number of times a word is assigned topic j in this document"}, {"satd_id": 23567230, "satd_repo": 42763345, "satd_sha": "06b916beef5074b5f32962b4f9328cfb08fc3be1", "satd_text": " the topic probability for current word, proportional to \n   fraction of times word is assigned topic j\n x fraction of times a word is assigned topic j in current doc", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "methods/plda/src/pg_gp/plda_support.c", "lines": [157, 158, 159], "matched_text": "\t\t// the topic probability for current word, proportional to "}, {"satd_id": 23567238, "satd_repo": 42763345, "satd_sha": "06b916beef5074b5f32962b4f9328cfb08fc3be1", "satd_text": "*\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/gp_sfv.c", "lines": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "matched_text": "/**"}, {"satd_id": 23567240, "satd_repo": 42763345, "satd_sha": "06b916beef5074b5f32962b4f9328cfb08fc3be1", "satd_text": "*\n * \tgp_extract_feature_histogram\n * \tApproach:\n * \t  Definitions:\n * \t   Feature Vector:\n * \t    A feature vector is a list of words, generally all of the possible \n *          choices of words. In other words, a feature vector is a dictionary \n *          and might have cardinality of 20,000 or so.\n *\n * \t   Document:\n * \t    A document, here identifed using a list of words. Generally a \n *          document will consist of a set of words contained in the feature \n *          vector, but sometimes a document will contain words that are not \n *          in the feature vector.\n *\n * \t   Sparse Feature Vector (SFV):\n * \t    An SFV is an array of attributes defined for each feature found \n *          in a document. For example, you might define an SFV where each \n *          attribute is a count of the number of instances of a feature is \n *          found in the document, with one entry per feature found in the \n *          document.\n *\n * \tExample:\n * \t  Say we have a document defined as follows:\n * \t    document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\n *                       \"some\",\"repeat\",\"repeat\"}\n * \t  And say we have a feature vector as follows:\n * \t    features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\n *                      \"with\",\"some\",\"repeat\",\"word1\",\"word2\",\"word3\"}\n *\n * \t  Now we'd like to create the SFV for document1. We can number each \n *        feature starting at 1, so that feature(1) = foo, feature(2) = bar \n *        and so on. The SFV of document1 would then be:\n * \t    sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t  Note that the position in the SFV array is the number of the feature \n *        vector and the attribute is the count of the number of features \n *        found in each position.\n *\n *     We would like to store the SFV in a terse representation that fits \n *     in a small amount of memory. We also want to be able to compare the \n *     number of instances where the SFV of one document intersects another. \n *     This routine uses the Sparse Vector datatype to store the SFV.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/gp_sfv.c", "lines": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "matched_text": "/**"}, {"satd_id": 23567242, "satd_repo": 42763345, "satd_sha": "ee31bf1afe8063b481196ab56523a4bdd305e0e4", "satd_text": " The error function is in C99 and TR1, but not in the official C++ Standard\n (before C++0x). We therefore use the Boost implementation", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "modules/prob/student.cpp", "lines": [60, 61], "matched_text": "// The error function is in C99 and TR1, but not in the official C++ Standard"}, {"satd_id": 23567251, "satd_repo": 42763345, "satd_sha": "2e03f4048ba74fe3891bf08bd5df8ac64e384819", "satd_text": "*\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/gp_sfv.c", "lines": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "matched_text": "/**"}, {"satd_id": 23567253, "satd_repo": 42763345, "satd_sha": "2e03f4048ba74fe3891bf08bd5df8ac64e384819", "satd_text": "*\n * \tgp_extract_feature_histogram\n * \tApproach:\n * \t  Definitions:\n * \t   Feature Vector:\n * \t    A feature vector is a list of words, generally all of the possible \n *          choices of words. In other words, a feature vector is a dictionary \n *          and might have cardinality of 20,000 or so.\n *\n * \t   Document:\n * \t    A document, here identifed using a list of words. Generally a \n *          document will consist of a set of words contained in the feature \n *          vector, but sometimes a document will contain words that are not \n *          in the feature vector.\n *\n * \t   Sparse Feature Vector (SFV):\n * \t    An SFV is an array of attributes defined for each feature found \n *          in a document. For example, you might define an SFV where each \n *          attribute is a count of the number of instances of a feature is \n *          found in the document, with one entry per feature found in the \n *          document.\n *\n * \tExample:\n * \t  Say we have a document defined as follows:\n * \t    document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\n *                       \"some\",\"repeat\",\"repeat\"}\n * \t  And say we have a feature vector as follows:\n * \t    features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\n *                      \"with\",\"some\",\"repeat\",\"word1\",\"word2\",\"word3\"}\n *\n * \t  Now we'd like to create the SFV for document1. We can number each \n *        feature starting at 1, so that feature(1) = foo, feature(2) = bar \n *        and so on. The SFV of document1 would then be:\n * \t    sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t  Note that the position in the SFV array is the number of the feature \n *        vector and the attribute is the count of the number of features \n *        found in each position.\n *\n *     We would like to store the SFV in a terse representation that fits \n *     in a small amount of memory. We also want to be able to compare the \n *     number of instances where the SFV of one document intersects another. \n *     This routine uses the Sparse Vector datatype to store the SFV.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/svec/src/pg_gp/gp_sfv.c", "lines": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "matched_text": "/**"}, {"satd_id": 23567257, "satd_repo": 42763345, "satd_sha": "13dd416d07573d148438b7eaee137131b4bc820e", "satd_text": " FIXME: Returning the result set from Python code means that values\n pass through Python (and there is a potential loss of precision by\n conversion)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "test/regress.py", "lines": [121, 122, 123], "matched_text": "    # FIXME: Returning the result set from Python code means that values"}, {"satd_id": 23567271, "satd_repo": 42763345, "satd_sha": "3b9577d932b97478ec17951111149dfc8fe6a806", "satd_text": " number of times a word is assigned topic j in this document", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "methods/plda/plda_support.c", "lines": [150], "matched_text": "\t\t// number of times a word is assigned topic j in this document"}, {"satd_id": 23567287, "satd_repo": 42763345, "satd_sha": "3b9577d932b97478ec17951111149dfc8fe6a806", "satd_text": " the topic probability for current word, proportional to \n   fraction of times word is assigned topic j\n x fraction of times a word is assigned topic j in current doc", "satd_label": "Documentation-SATD", "satd_label_short": "doc", "file": "methods/plda/plda_support.c", "lines": [157, 158, 159], "matched_text": "\t\t// the topic probability for current word, proportional to "}, {"satd_id": 23567297, "satd_repo": 42763345, "satd_sha": "d6f8518ed6ee711ccdae2736caf096952b45058b", "satd_text": "\nThis module provides c implementations for several postgres array operations.\n\nThere is a 3 tier structure to each function calls. This is done to take advantage of some common type\nchecking. All the functions are classified into 4 types based on the input/output types:\n\nfunction(array,array)->array (calls: General_2Array_to_Array)\nfunction(array,scalar)->array (calls: General_Array_to_Array)\nfunction(array,array)->scalar (calls: General_2Array_to_Element)\nfunction(array,scalar)->scalar (calls: General_Array_to_Element)\n\nAssuming that this input is flexible enough for some new function, implementer needs to provide 2 functions. First is the top level function\nthat is being exposed to SQL and takes the necessary parameters. This function makes a call to one of the 4 intermediate functions, passing pointer to the low level function (or functions) as the argument. In case of the single function, this low level function, it will specify the operations to be executed against each cell in the array. If two functions are to be passed the second is the finalization function that takes the result of the execution on each cell and produces final result. In case not final functions is necessary a generic 'noop_finalize' can be used - which does nothing to the intermediate result.\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/array-ops/src/pg_gp/array-ops.c", "lines": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "matched_text": "/*"}, {"satd_id": 23567330, "satd_repo": 42763345, "satd_sha": "3e264ce0e8aae32626da009b092f5cf50e9d31cf", "satd_text": "*\n * This is the main online support vector regression learning algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta, slambda, and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the naive \n * user would probably be daunted with the prospect of having to specify them.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "matched_text": "/**"}, {"satd_id": 23567347, "satd_repo": 42763345, "satd_sha": "3e264ce0e8aae32626da009b092f5cf50e9d31cf", "satd_text": "*\n * This is the main online support vector classification algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the \n * naive user would probably be daunted with the prospect of having to \n * specify them. \n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "matched_text": "/**"}, {"satd_id": 23567360, "satd_repo": 42763345, "satd_sha": "0ace02849966c4072214de8dd1e2b1c57fbf54ae", "satd_text": "*\n * This is the main online support vector regression learning algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta, slambda, and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the naive \n * user would probably be daunted with the prospect of having to specify them.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "matched_text": "/**"}, {"satd_id": 23567377, "satd_repo": 42763345, "satd_sha": "0ace02849966c4072214de8dd1e2b1c57fbf54ae", "satd_text": "*\n * This is the main online support vector classification algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the \n * naive user would probably be daunted with the prospect of having to \n * specify them. \n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "matched_text": "/**"}, {"satd_id": 23567386, "satd_repo": 42763345, "satd_sha": "6a0a54ee8f0bca0ebb4fa9f013c6accf21689ae8", "satd_text": "*\n * This is the main online support vector classification algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the \n * naive user would probably be daunted with the prospect of having to \n * specify them. \n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "matched_text": "/**"}, {"satd_id": 23567392, "satd_repo": 42763345, "satd_sha": "e4792fb54047dec1c12d8ab2e3e3f22a37a1f581", "satd_text": "*\n * This is the main online support vector regression learning algorithm. \n * The function updates the support vector model as it processes each new \n * training example.\n * This function is wrapped in an aggregate function to process all the \n * training examples stored in a table.  \n * The learning parameters (eta, slambda, and nu) are hardcoded at the moment. \n * We may want to make them input parameters at some stage, although the naive \n * user would probably be daunted with the prospect of having to specify them.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/pg_gp/online_sv.c", "lines": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "matched_text": "/**"}, {"satd_id": 23567431, "satd_repo": 42763345, "satd_sha": "f62b119dabe274f4c232c43690d65d38f66ddc50", "satd_text": " according to postgres' libpq/md5.c, need 33 bytes to hold \n null-terminated md5 string", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [311, 312], "matched_text": "    // according to postgres' libpq/md5.c, need 33 bytes to hold "}, {"satd_id": 23567454, "satd_repo": 42763345, "satd_sha": "dd6ddcac8f7fd658643a5dfce401c3ce96bcf03f", "satd_text": " according to postgres' libpq/md5.c, need 33 bytes to hold \n null-terminated md5 string", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [311, 312], "matched_text": "    // according to postgres' libpq/md5.c, need 33 bytes to hold "}, {"satd_id": 23567481, "satd_repo": 42763345, "satd_sha": "227731c93363747a2787e03322aa4ef0332aabe9", "satd_text": " this is just to prevent \"uninitialized variable\" warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/compatibility.cpp", "lines": [47], "matched_text": "\t/* this is just to prevent \"uninitialized variable\" warnings */"}, {"satd_id": 23567514, "satd_repo": 42763345, "satd_sha": "f88b8366e7d53ef8398ddf266d6e4e55f27d699b", "satd_text": " FIXME: Harden the code. pinv can throw an exception if \n matrix is ill-formed", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "modules/regress/logistic.cpp", "lines": [477, 478], "matched_text": "    // FIXME: Harden the code. pinv can throw an exception if "}, {"satd_id": 23567569, "satd_repo": 42763345, "satd_sha": "a5d377d20762ce905bd53fbcd746f7aea9d01332", "satd_text": "*\n     * @internal This function accesses internal elements of arma::mat.\n     *      While these elements are all declared as public, this is not\n     *      entirely clean.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "dbal/Vector_const.hpp", "lines": [104, 105, 106, 107, 108], "matched_text": "    /**"}, {"satd_id": 23567579, "satd_repo": 42763345, "satd_sha": "a5d377d20762ce905bd53fbcd746f7aea9d01332", "satd_text": " FIXME: We might want to add detailed error messages when converting immutable\n into mutable type. Right now, the standard error msg will be displayed.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "dbal/ConcreteValue_impl.hpp", "lines": [92, 93], "matched_text": "// FIXME: We might want to add detailed error messages when converting immutable"}, {"satd_id": 23567596, "satd_repo": 42763345, "satd_sha": "a5d377d20762ce905bd53fbcd746f7aea9d01332", "satd_text": " Arguments from SQL call. Immutable values passed by reference should be\n instantiated from the respective <tt>_const</tt> class. Otherwise, the\n abstraction layer will perform a deep copy (i.e., waste unnecessary\n processor cycles).", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "modules/regress/linear.cpp", "lines": [156, 157, 158, 159], "matched_text": "    // Arguments from SQL call. Immutable values passed by reference should be"}, {"satd_id": 23567606, "satd_repo": 42763345, "satd_sha": "e610ec9e0b3148f26337f992ce2dd67d367354aa", "satd_text": "\n     * PostgreSQL error messages can be stacked. So, it doesn't hurt to add\n     * our own message. After unwinding the C++ stack, the PostgreSQL\n     * exception will be re-thrown into the PostgreSQL C code.\n     *\n     * Throwing C++ exceptions inside a PG_CATCH block is not problematic by\n     * per se, but it does not hurt to keep the exception mechanisms clearly\n     * isolated.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGAllocator.cpp", "lines": [98, 99, 100, 101, 102, 103, 104, 105, 106], "matched_text": "    /*"}, {"satd_id": 23567608, "satd_repo": 42763345, "satd_sha": "e610ec9e0b3148f26337f992ce2dd67d367354aa", "satd_text": " Probably not necessary but we clean up after ourselves", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGAllocator.cpp", "lines": [91], "matched_text": "        // Probably not necessary but we clean up after ourselves"}, {"satd_id": 23567620, "satd_repo": 42763345, "satd_sha": "e610ec9e0b3148f26337f992ce2dd67d367354aa", "satd_text": "*\n * Same as above, except that it is called by a placement version of a\n * new-expression when a C++ program prefers a null pointer result as an error\n * indication, instead of a bad_alloc exception.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/main.cpp", "lines": [64, 65, 66, 67, 68], "matched_text": "/**"}, {"satd_id": 23567621, "satd_repo": 42763345, "satd_sha": "e610ec9e0b3148f26337f992ce2dd67d367354aa", "satd_text": "\n * The default behavior of\n *\n *   void *operator new[](std::size_t inSize) throw (std::bad_alloc)\n *   void *operator new[](std::size_t, const std::nothrow_t&) throw()\n *   void operator delete[](void *inPtr) throw()\n *   void operator delete[](void *inPtr, const std::nothrow_t&) throw()\n *\n * is to call the non-array variants (\u00a718.4.1.2). Hence no need to override.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/main.cpp", "lines": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "matched_text": "/*"}, {"satd_id": 23567672, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " Arguments from SQL call. Values passed by reference should be declared\n constant if the database prohibits modification. Otherwise, the\n abstraction will perform a deep copy (i.e., waste unnecessary processor\n cycles). It is generally a good idea to explicitly declare all function\n arguments constant, except those that we deliberatly want to modify\n in-place.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "modules/regress/linear.cpp", "lines": [97, 98, 99, 100, 101, 102], "matched_text": "    // Arguments from SQL call. Values passed by reference should be declared"}, {"satd_id": 23567675, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " Vector of coefficients: For efficiency reasons, we want to return this\n by reference, so we need to bind to db memory", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "modules/regress/linear.cpp", "lines": [134, 135], "matched_text": "    // Vector of coefficients: For efficiency reasons, we want to return this"}, {"satd_id": 23567705, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGToDatumConverter.cpp", "lines": [31], "matched_text": "    // FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23567706, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " FIXME: We copy memory here!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGToDatumConverter.cpp", "lines": [161], "matched_text": "        // FIXME: We copy memory here!"}, {"satd_id": 23567722, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGToDatumConverter.cpp", "lines": [31], "matched_text": "    // FIXME: (Or Note:) get_call_result_type is tagged as expensive in funcapi.c"}, {"satd_id": 23567723, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " FIXME: We copy memory here!", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGToDatumConverter.cpp", "lines": [161], "matched_text": "        // FIXME: We copy memory here!"}, {"satd_id": 23567724, "satd_repo": 42763345, "satd_sha": "cc0aafdaf2d39f10ae6fa416c4cac2d0a0d64bb3", "satd_text": " If we are called as an aggregate function, the first argument is the\n transition state. In that case, we are free to modify the data.\n In fact, for performance reasons, we *should* even do all modifications\n in-place. In all other cases, directly modifying memory is dangerous.\n See warning at:\n http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-BASETYPE", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "ports/postgres/PGValue.cpp", "lines": [41, 42, 43, 44, 45, 46], "matched_text": "    // If we are called as an aggregate function, the first argument is the"}, {"satd_id": 23567731, "satd_repo": 42763345, "satd_sha": "54be37def262ac48e2f3f55b036a7530d7eb632c", "satd_text": "\n@addtogroup sketches\n@todo\n- Provide a relatively portable SQL-only implementation of CountMin.  (FM bit manipulation won't port well regardless).\n- Provide a python wrapper to the CountMin sketch output, and write scalar functions in python.\n\n\n@bug\n- <i>Equality-Testing Corner Case:</i>\nFor hashing, we convert values into text using the type's text output routine.\nIn general this should work fine, but there is the possibility that two\ndifferent values in the domain could have the same textual representation.\nIn these corner cases we will see incorrect counts for those values.\nThe proper way to do this is not to use the \"outfunc\", but rather to look up the\ntype-specific hash function as is done internally for hashjoin, hash indexes,\netc.  The basic pattern for looking up the hash function in Postgres\ninternals is something like the following:\n@code\nget_sort_group_operators(dtype, false, true, false, &ltOpr, &eqOpr, &gtOpr);\nsuccess = get_op_hash_functions(eqOpr, result, NULL));\n@endcode\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/sketch_support.c", "lines": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "matched_text": "/*"}, {"satd_id": 23567751, "satd_repo": 42763345, "satd_sha": "b320b3ebdb6d9ddffff6c256a6a00918af49b780", "satd_text": " do top 1 calculation here\nfor(kk = 0; kk < topk; kk++) { // TODO: handle k > 1 dimenstions", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/viterbi-crf/src/pg_gp/topk_array.c", "lines": [180, 181], "matched_text": "        // do top 1 calculation here"}, {"satd_id": 23567800, "satd_repo": 42763345, "satd_sha": "7005f791f0a4bde6a95d1df6fa93e889612702bf", "satd_text": " No longer used; formerly in Namelist ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/f2c.h", "lines": [164], "matched_text": "/*typedef long int Long;*/\t/* No longer used; formerly in Namelist */"}, {"satd_id": 23567815, "satd_repo": 42763345, "satd_sha": "d75ad1aa0b0e195db20f2d3c61ccd3ab01e6c374", "satd_text": " do top 1 calculation here\nfor(kk = 0; kk < topk; kk++) { // TODO: handle k > 1 dimenstions", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/viterbi-crf/src/pg_gp/topk_array.c", "lines": [180, 181], "matched_text": "        // do top 1 calculation here"}, {"satd_id": 23567864, "satd_repo": 42763345, "satd_sha": "32516da6d711f77fdc2a7e84ba4f33e0fe227cf3", "satd_text": " No longer used; formerly in Namelist ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/f2c.h", "lines": [164], "matched_text": "/*typedef long int Long;*/\t/* No longer used; formerly in Namelist */"}, {"satd_id": 23567897, "satd_repo": 42763345, "satd_sha": "76eff21c165ea1e9d77e0d047c3ae97a754851f8", "satd_text": " No longer used; formerly in Namelist ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/f2c.h", "lines": [164], "matched_text": "/*typedef long int Long;*/\t/* No longer used; formerly in Namelist */"}, {"satd_id": 23567927, "satd_repo": 42763345, "satd_sha": "3fee5375dbf636f5dec3090ab1aadffeb8a3fc55", "satd_text": "\n     * initialize mfvtransval, using palloc0 to zero it out.\n     * if typlen is positive (fixed), size chosen large enough to hold\n     * one 3x the length (on the theory that 2^8=256 takes 3 chars as a string).\n     * Else we'll do a conservative estimate of 8 bytes (=24 chars), and repalloc as needed.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [173, 174, 175, 176, 177, 178], "matched_text": "    /*"}, {"satd_id": 23567943, "satd_repo": 42763345, "satd_sha": "e8037a4f6388590c34bea2e1e5ba86691f8ad9d5", "satd_text": "\n     * initialize mfvtransval, using palloc0 to zero it out.\n     * if typlen is positive (fixed), size chosen large enough to hold\n     * one 3x the length (on the theory that 2^8=256 takes 3 chars as a string).\n     * Else we'll do a conservative estimate of 8 bytes (=24 chars), and repalloc as needed.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [173, 174, 175, 176, 177, 178], "matched_text": "    /*"}, {"satd_id": 23567959, "satd_repo": 42763345, "satd_sha": "655b0e122078e58fa92bd7fee7267e8884aaf4c6", "satd_text": "\n     * initialize mfvtransval, using palloc0 to zero it out.\n     * if typlen is positive (fixed), size chosen large enough to hold\n     * one 3x the length (on the theory that 2^8=256 takes 3 chars as a string).\n     * Else we'll do a conservative estimate of 8 bytes (=24 chars), and repalloc as needed.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/pg_gp/mfvsketch.c", "lines": [173, 174, 175, 176, 177, 178], "matched_text": "    /*"}, {"satd_id": 23567962, "satd_repo": 42763345, "satd_sha": "dd02e9564c892f14d763dc23a4d86b2e930481a5", "satd_text": " FIXME: Remove if no longer necessary. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [45], "matched_text": "\t/* FIXME: Remove if no longer necessary. */"}, {"satd_id": 23567965, "satd_repo": 42763345, "satd_sha": "8343c30a9af9907480dbd2cb5b540054b52a4083", "satd_text": "! @addtogroup sketches \n *\n * @about\n * There is a large body of research on small-space \"sketch\" techniques (sometimes called \"synopsis data structures\") for approximating properties of large data sets in a single pass.  Some of that work was targeted at stream or network processing, but it's equally applicable to large stored datasets.  Sketches are particularly useful for profiling multiple columns of a large table in a single pass.  This module currently implements user-defined aggregates for three main sketch methods:\n *  - <i>Flajolet-Martin (FM)</i> sketches (http://algo.inria.fr/flajolet/Publications/FlMa85.pdf) for approximately counting the number of distinct values in a set.\n *  - <i>Count-Min (CM)</i> sketches (http://dimacs.rutgers.edu/~graham/pubs/papers/cmencyc.pdf), which can be layered with scalar functions to approximate a number of descriptive statistics including\n *    - number of occurrences of a given value in a set\n *    - number of occurrences in a set that fall in a range of values (*)\n *    - order statistics including median and centiles (*)\n *    - histograms: both equi-width and equi-depth (*)\n *  - <i>Most Frequent Value (MFV)</i> sketches are basically a variant of Count-Min sketches that can generate a histogram for the most frequent values in a set. (**)\n *\n * \\par\n *  <i>Note:</i> Features marked with a single star (*) only work for discrete types that can be cast to int8.  Features marked with a double star (**) do not perform aggregation in parallel.\n *\n *\n * @prereq\n * None.  Because sketches are essentially a high-performance compression technique, they were custom-coded for efficiency in C for PostgreSQL/Greenplum.\n *\n * @usage\n * The sketch method consists of a number of SQL user-defined functions (UDFs) and user-defined aggregates (UDAs), documented within each individual method.\n *\n * @todo\n * - Provide a relatively portable SQL-only implementation of CountMin.  (FM bit manipulation won't port well regardless).\n * - Provide a python wrapper to the CountMin sketch output, and write scalar functions in python.\n *\n *\n * \\bug\n * - <i>Equality-Testing Issue:</i>\n * We do a lot of hashing in the sketch methods.  To provide canonical input to the\n * outfunc.  In some corner cases the ascii output may not respect the\n * equality/inequality that SQL intends.\n * The proper way to do this is not to use the outfunc, but rather to look up the\n * type-specific hash function as is done internally for hashjoin, hash indexes,\n * etc.  The basic pattern for looking up the hash function in Postgres\n * internals is something like the following:\n * <c>\n * get_sort_group_operators(dtype, false, true, false, &ltOpr, &eqOpr, &gtOpr);\n * success = get_op_hash_functions(eqOpr, result, NULL));\n * </c>\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/sketch_support.c", "lines": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "matched_text": " /*! @addtogroup sketches "}, {"satd_id": 23567985, "satd_repo": 42763345, "satd_sha": "8cd941c9d45fd802b3f1ea77b715eeb8fefac382", "satd_text": "! @addtogroup sketches \n *\n * @about\n * There is a large body of research on small-space \"sketch\" techniques (sometimes called \"synopsis data structures\") for approximating properties of large data sets in a single pass.  Some of that work was targeted at stream or network processing, but it's equally applicable to large stored datasets.  Sketches are particularly useful for profiling multiple columns of a large table in a single pass.  This module currently implements user-defined aggregates for three main sketch methods:\n *  - <i>Flajolet-Martin (FM)</i> sketches (http://algo.inria.fr/flajolet/Publications/FlMa85.pdf) for approximately counting the number of distinct values in a set.\n *  - <i>Count-Min (CM)</i> sketches (http://dimacs.rutgers.edu/~graham/pubs/papers/cmencyc.pdf), which can be layered with scalar functions to approximate a number of descriptive statistics including\n *    - number of occurrences of a given value in a set\n *    - number of occurrences in a set that fall in a range of values (*)\n *    - order statistics including median and centiles (*)\n *    - histograms: both equi-width and equi-depth (*)\n *  - <i>Most Frequent Value (MFV)</i> sketches are basically a variant of Count-Min sketches that can generate a histogram for the most frequent values in a set. (**)\n *\n * \\par\n *  <i>Note:</i> Features marked with a single star (*) only work for discrete types that can be cast to int8.  Features marked with a double star (**) do not perform aggregation in parallel.\n *\n *\n * @prereq\n * None.  Because sketches are essentially a high-performance compression technique, they were custom-coded for efficiency in C for PostgreSQL/Greenplum.\n *\n * @usage\n * The sketch method consists of a number of SQL user-defined functions (UDFs) and user-defined aggregates (UDAs), documented within each individual method.\n *\n * @todo\n * - Provide a relatively portable SQL-only implementation of CountMin.  (FM bit manipulation won't port well regardless).\n * - Provide a python wrapper to the CountMin sketch output, and write scalar functions in python.\n *\n *\n * \\bug\n * - <i>Equality-Testing Issue:</i>\n * We do a lot of hashing in the sketch methods.  To provide canonical input to the\n * outfunc.  In some corner cases the ascii output may not respect the\n * equality/inequality that SQL intends.\n * The proper way to do this is not to use the outfunc, but rather to look up the\n * type-specific hash function as is done internally for hashjoin, hash indexes,\n * etc.  The basic pattern for looking up the hash function in Postgres\n * internals is something like the following:\n * <c>\n * get_sort_group_operators(dtype, false, true, false, &ltOpr, &eqOpr, &gtOpr);\n * success = get_op_hash_functions(eqOpr, result, NULL));\n * </c>\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/sketch_support.c", "lines": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "matched_text": " /*! @addtogroup sketches "}, {"satd_id": 23567988, "satd_repo": 42763345, "satd_sha": "d33a6b43f2b9265da8f5317e8c471a7f9b2dfb18", "satd_text": " FIXME: Make class variables ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.ll", "lines": [52], "matched_text": "\t/* FIXME: Make class variables */"}, {"satd_id": 23568013, "satd_repo": 42763345, "satd_sha": "ef2c010211435a9db4fcdf70b86bbdb29d25096b", "satd_text": "*\n * Note the order of computation:\n * \n * FIXME: Several assumptions about this struct are hard coded (e.g., number of\n * elements)\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [592, 593, 594, 595, 596, 597], "matched_text": "/**"}, {"satd_id": 23568017, "satd_repo": 42763345, "satd_sha": "ef2c010211435a9db4fcdf70b86bbdb29d25096b", "satd_text": " FIXME: This only partially checks the input for correctness\n (Of course, unless of bugs in the code, these conditions should never be\n true.)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [909, 910, 911], "matched_text": "    // FIXME: This only partially checks the input for correctness"}, {"satd_id": 23568072, "satd_repo": 42763345, "satd_sha": "aafb7f6e4edf4d7c20784cee2e5d6cbf5a353904", "satd_text": "*\n * Note the order of computation:\n * \n * FIXME: Several assumptions about this struct are hard coded (e.g., number of\n * elements)\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [592, 593, 594, 595, 596, 597], "matched_text": "/**"}, {"satd_id": 23568076, "satd_repo": 42763345, "satd_sha": "aafb7f6e4edf4d7c20784cee2e5d6cbf5a353904", "satd_text": " FIXME: This only partially checks the input for correctness\n (Of course, unless of bugs in the code, these conditions should never be\n true.)", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [909, 910, 911], "matched_text": "    // FIXME: This only partially checks the input for correctness"}, {"satd_id": 23568108, "satd_repo": 42763345, "satd_sha": "66c6a3907b8a35392a033c6b87541c31307bc361", "satd_text": " Currently, we are only computing coefficients. Therefore, the following\n two lines are not needed.\n *state.sumy += z * sqrt(a);\n *state.sumy2 += z * z * a;", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [904, 905, 906, 907], "matched_text": "    // Currently, we are only computing coefficients. Therefore, the following"}, {"satd_id": 23568110, "satd_repo": 42763345, "satd_sha": "66c6a3907b8a35392a033c6b87541c31307bc361", "satd_text": " FIXME: y has different signs than in Minka (2003). Where is the bug?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [810], "matched_text": "    // FIXME: y has different signs than in Minka (2003). Where is the bug?"}, {"satd_id": 23568110, "satd_repo": 42763345, "satd_sha": "66c6a3907b8a35392a033c6b87541c31307bc361", "satd_text": " FIXME: y has different signs than in Minka (2003). Where is the bug?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [895], "matched_text": "    // FIXME: y has different signs than in Minka (2003). Where is the bug?"}, {"satd_id": 23568119, "satd_repo": 42763345, "satd_sha": "8ac223ce1b85101f2f9702eb1fdcfd3c66a44949", "satd_text": " Currently, we are only computing coefficients. Therefore, the following\n two lines are not needed.\n *state.sumy += z * sqrt(a);\n *state.sumy2 += z * z * a;", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [904, 905, 906, 907], "matched_text": "    // Currently, we are only computing coefficients. Therefore, the following"}, {"satd_id": 23568121, "satd_repo": 42763345, "satd_sha": "8ac223ce1b85101f2f9702eb1fdcfd3c66a44949", "satd_text": " FIXME: y has different signs than in Minka (2003). Where is the bug?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [810], "matched_text": "    // FIXME: y has different signs than in Minka (2003). Where is the bug?"}, {"satd_id": 23568121, "satd_repo": 42763345, "satd_sha": "8ac223ce1b85101f2f9702eb1fdcfd3c66a44949", "satd_text": " FIXME: y has different signs than in Minka (2003). Where is the bug?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [895], "matched_text": "    // FIXME: y has different signs than in Minka (2003). Where is the bug?"}, {"satd_id": 23568171, "satd_repo": 42763345, "satd_sha": "567df04a29a4b19820b9fffd2bbaa39c9c6dc7e2", "satd_text": " FIXME: We should not disable warning. Problem, however: asprintf ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [23], "matched_text": "\t/* FIXME: We should not disable warning. Problem, however: asprintf */"}, {"satd_id": 23568183, "satd_repo": 42763345, "satd_sha": "567df04a29a4b19820b9fffd2bbaa39c9c6dc7e2", "satd_text": " In the parser, we need to call the lexer and therefore need the\n\t\t * lexer class declaration. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [37, 38], "matched_text": "\t\t/* In the parser, we need to call the lexer and therefore need the"}, {"satd_id": 23568189, "satd_repo": 42763345, "satd_sha": "567df04a29a4b19820b9fffd2bbaa39c9c6dc7e2", "satd_text": " Declare that an argument declared by the braced-code `argument-declaration'\n * is an additional yyparse argument. The `argument-declaration' is used when\n * declaring functions or prototypes. The last identifier in\n * `argument-declaration' must be the argument name. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [110, 111, 112, 113], "matched_text": "/* Declare that an argument declared by the braced-code `argument-declaration'"}, {"satd_id": 23568191, "satd_repo": 42763345, "satd_sha": "567df04a29a4b19820b9fffd2bbaa39c9c6dc7e2", "satd_text": " Declare that the braced-code argument-declaration is an additional yylex\n * argument declaration. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [116, 117], "matched_text": "/* Declare that the braced-code argument-declaration is an additional yylex"}, {"satd_id": 23568210, "satd_repo": 42763345, "satd_sha": "7db10a9a24dabe888609454e41a9c55261b1037a", "satd_text": " yylloc is declared by macro YY_DECL ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.ll", "lines": [53], "matched_text": "\t/* yylloc is declared by macro YY_DECL */"}, {"satd_id": 23568227, "satd_repo": 42763345, "satd_sha": "7db10a9a24dabe888609454e41a9c55261b1037a", "satd_text": " FIXME: We should not disable warning. Problem, however: asprintf ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [23], "matched_text": "\t/* FIXME: We should not disable warning. Problem, however: asprintf */"}, {"satd_id": 23568239, "satd_repo": 42763345, "satd_sha": "7db10a9a24dabe888609454e41a9c55261b1037a", "satd_text": " In the parser, we need to call the lexer and therefore need the\n\t\t * lexer class declaration. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [37, 38], "matched_text": "\t\t/* In the parser, we need to call the lexer and therefore need the"}, {"satd_id": 23568245, "satd_repo": 42763345, "satd_sha": "7db10a9a24dabe888609454e41a9c55261b1037a", "satd_text": " Declare that an argument declared by the braced-code `argument-declaration'\n * is an additional yyparse argument. The `argument-declaration' is used when\n * declaring functions or prototypes. The last identifier in\n * `argument-declaration' must be the argument name. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [110, 111, 112, 113], "matched_text": "/* Declare that an argument declared by the braced-code `argument-declaration'"}, {"satd_id": 23568247, "satd_repo": 42763345, "satd_sha": "7db10a9a24dabe888609454e41a9c55261b1037a", "satd_text": " Declare that the braced-code argument-declaration is an additional yylex\n * argument declaration. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "doc/etc/sql.yy", "lines": [116, 117], "matched_text": "/* Declare that the braced-code argument-declaration is an additional yylex"}, {"satd_id": 23568275, "satd_repo": 42763345, "satd_sha": "207337747ce609fdc1fa16e25099d381f5f96f3e", "satd_text": "! \\defgroup kernel-machines\n\n\\par About\n\n    Support vector machines (SVMs) and related kernel methods have been one of \n    the most popular and well-studied machine learning techniques of the \n    past 15 years, with an amazing number of innovations and applications.\n\n    In a nutshell, an SVM model f(x) takes the form of\n\\code\n        f(x) = sum_i alpha_i k(x_i,x),\n\\endcode\n    where each alpha_i is a real number, each x_i is a data point from the\n    training set (called a support vector), and k(.,.) is a kernel function \n    that measures how `similar' two objects are. In regression, f(x) is the \n    regression function we seek. In classification, f(x) serves as the \n    decision boundary; so for example in binary classification, the predictor \n    can output class 1 for object x if f(x) >= 0, and class 2 otherwise.\n\n    In the case when the kernel function k(.,.) is the standard inner product \n    on vectors, f(x) is just an alternative way of writing a linear function\n\\code\n        f'(x) = <w,x>,\n\\endcode\n    where w is a weight vector having the same dimension as x. One of the \n    key points of SVMs is that we can use more fancy kernel functions to \n    efficiently learn linear models in high-dimensional feature spaces, \n    since k(x_i,x_j) can be understood as an inner product in the feature\n    space:\n\\code\n        k(x_i,x_j) = <phi(x_i),phi(x_j)>,\n\\endcode\n    where phi(x) projects x into a (possibly infinite-dimensional) feature\n    space.\n\n    There are many algorithms for learning kernel machines. This module \n    implements the class of online learning with kernels algorithms \n    described in \\n\n\n      - Jyrki Kivinen, Alexander J. Smola and Robert C. Williamson, \\n\n        Online Learning with Kernels, IEEE Transactions on Signal Processing, 52(8), 2165-2176, 2004.\\n\n\n    See also the book \\n\n  \n      - Bernhard Scholkopf and Alexander J. Smola, Learning with Kernels: \\n\n        Support Vector Machines, Regularization, Optimization, and Beyond, \n        MIT Press, 2002 \\n\n \n    for much more details.\n\n    The implementation follows the original description in the Kivinen et al \n    paper faithfully, except that we only update the support vector model \n    when we make a significant error. The original algorithms update the \n    support vector model at every step, even when no error was made, in the \n    name of regularisation. For practical purposes, and this is verified \n    empirically to a certain degree, updating only when necessary is both \n    faster and better from a learning-theoretic point of view, at least in \n    the i.i.d. setting.\n\n    Methods for classification, regression and novelty detection are \n    available. Multiple instances of the algorithms can be executed \n    in parallel on different subsets of the training data. The resultant\n    support vector models can then be combined using standard techniques\n    like averaging or majority voting.\n\n    Training data points are accessed via a table or a view. The support\n    vector models can also be stored in tables for fast execution.\n\n\n\\par Prerequisites\n\n    - None at this point. Will need to install the Greenplum sparse vector \n      SVEC datatype eventually.\n\n\\par Usage/API\n\n   - Input preparation: Insert the training data into a table that has \n     the following fields:\n\\code    \n        (       id    INT,       -- point ID\n                ind   FLOAT8[],  -- data point\n                label FLOAT8     -- label of data point\n    \t)\n\\endcode    \n     Learning is done by running an aggregate function (see below) through \n     the training data stored in the created table/view.\n     Note: The label field is not required for novelty detection.\n    \n   - Here are the main learning functions\\n\n     -  Online regression learning is achieved through the following aggregate\n        function\n        \\code\n        MADLIB_SCHEMA.online_sv_reg_agg(x float8[], y float8),\n        \\endcode\n\twhere x is a data point and y its regression value. The function\n\treturns a model_rec data type. (More on that later.) \\n\n     -  Online classification learning is achieved through the following\n        aggregate function\n        \\code\n        MADLIB_SCHEMA.online_sv_cl_agg(x float8[], y float8),\n        \\endcode\n        where x is a data point and y its class (usually +1 or -1). The \n\tfunction returns a model_rec data type.\\n\n     -  Online novelty detection is achieved through the following \n        aggregate function\n        \\code\n        MADLIB_SCHEMA.online_sv_nd_agg(x float8[]),\n        \\endcode\n        where x is a data point. Note that novelty detection is an unsupervised\n        learning technique, so no label is required. The function returns a\n        model_rec data type.\n\n     \n  - The model_rec data type contains the following two fields\n\\code\n        weights     FLOAT8[],   -- the weight of the support vectors\n        individuals FLOAT8[][]  -- the array of support vectors\n\\endcode\n     as well as other information obtained through the learning process\n     like cumulative error, margin achieved, etc.\n\n  - Here are some subsidiary functions\n     - We can unnest the support vectors in a model_rec and store them in\n       the sv_model table using the function\n       \\code\n       MADLIB_SCHEMA.storeModel(model_name text),\n       \\endcode \n       where model_name is the name of the model stored temporarily in the\n       sv_results table. (FIX ME: Make storeModel() take a model_rec as \n       input.)\\n\n     - Having stored a model, we can use the following function to make\n       predictions on new test data points:\n       \\code\n       MADLIB_SCHEMA.svs_predict(model_name text, x float8[]),\n       \\endcode\n       where model_name is the name of the model stored and x is a data point.\\n\n     - The following function\n       \\code\n       MADLIB_SCHEMA.svs_predict(model_name text, n int, x float8[])\n       \\endcode\n       is used to combine the results of multiple support vector models\n       learned in parallel.\n\n\\par Examples\n\n   - Example usage for regression:\\n\n     We can randomly generate 1000 5-dimensional data labelled by the simple\n     target function \n\\code\n     t(x) = if x[5] = 10 then 50 else if x[5] = -10 then 50 else 0;\n\\endcode\n     and store that in the MADLIB_SCHEMA.sv_train_data table as follows:\n\\code\n       testdb=# select MADLIB_SCHEMA.generateRegData(1000, 5);\n\\endcode\n     We can now learn a regression model and store the result into the \n     MADLIB_SCHEMA.sv_results table by executing the following ('myexp' \n     is the name under which we store the model).\n\\code\n       testdb=# insert into MADLIB_SCHEMA.sv_results \n                   (select 'myexp', MADLIB_SCHEMA.online_sv_reg_agg(ind, label) from MADLIB_SCHEMA.sv_train_data);\n\\endcode\n     For convenience, we can store the 'myexp' model in the table \n     MADLIB_SCHEMA.sv_model and start using it to predict the labels of\n     new data points like as follows:\n\\code\n       testdb=# select MADLIB_SCHEMA.storeModel('myexp');\n       testdb=# select MADLIB_SCHEMA.svs_predict('myexp', '{1,2,4,20,10}');\n       testdb=# select MADLIB_SCHEMA.svs_predict('myexp', '{1,2,4,20,-10}');\n\\endcode\n     To learn multiple support vector models, replace the learning step above by \n\\code\n       testdb=# insert into MADLIB_SCHEMA.sv_results \n                   (select 'myexp' || gp_segment_id, MADLIB_SCHEMA.online_sv_reg_agg(ind, label) from MADLIB_SCHEMA.sv_train_data group by gp_segment_id);\n\\endcode\n     The resultant models can be stored in a table and used for prediction as\n     follows:\n\\code\n       testdb=# select MADLIB_SCHEMA.storeModel('myexp', n); -- n is the number of segments\n       testdb=# select * from MADLIB_SCHEMA.svs_predict_combo('myexp', n, '{1,2,4,20,10}');\n\\endcode\n\n   - Example usage for classification:\n\\code \n       testdb=# select MADLIB_SCHEMA.generateClData(2000, 5);\n       testdb=# insert into MADLIB_SCHEMA.sv_results \n                   (select 'myexpc', MADLIB_SCHEMA.online_sv_cl_agg(ind, label) from MADLIB_SCHEMA.sv_train_data);\n       testdb=# select MADLIB_SCHEMA.storeModel('myexpc');\n       testdb=# select MADLIB_SCHEMA.svs_predict('myexpc', '{10,-2,4,20,10}');\n\\endcode   \n     To learn multiple support vector models, replace the above by \n\\code\n       testdb=# insert into MADLIB_SCHEMA.sv_results \n                   (select 'myexpc' || gp_segment_id, MADLIB_SCHEMA.online_sv_cl_agg(ind, label) from MADLIB_SCHEMA.sv_train_data group by gp_segment_id);\n       testdb=# select MADLIB_SCHEMA.storeModel('myexpc', n); -- n is the number of segments\n       testdb=# select * from MADLIB_SCHEMA.svs_predict_combo('myexpc', n, '{10,-2,4,20,10}');\n\\endcode\n\n   - Example usage for novelty detection:\n\\code\n       testdb=# select MADLIB_SCHEMA.generateNdData(100, 2);\n       testdb=# insert into MADLIB_SCHEMA.sv_results (select 'myexpnd', MADLIB_SCHEMA.online_sv_nd_agg(ind) from MADLIB_SCHEMA.sv_train_data);\n       testdb=# select MADLIB_SCHEMA.storeModel('myexpnd');\n       testdb=# select MADLIB_SCHEMA.svs_predict('myexpnd', '{10,-10}');  \n       testdb=# select MADLIB_SCHEMA.svs_predict('myexpnd', '{-1,-1}');  \n\\endcode\n\n\n\\par To Do\n\n    - Add support for sparse vectors (now it's only array of float8s).\n\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/kernel-machines/src/extended_sql/pg_gp/README.c", "lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "matched_text": "/*! \\defgroup kernel-machines"}, {"satd_id": 23568278, "satd_repo": 42763345, "satd_sha": "207337747ce609fdc1fa16e25099d381f5f96f3e", "satd_text": "*< This is unused at the moment ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [340], "matched_text": "\tint4 vl_len_;   /**< This is unused at the moment */"}, {"satd_id": 23568287, "satd_repo": 42763345, "satd_sha": "207337747ce609fdc1fa16e25099d381f5f96f3e", "satd_text": "! \\defgroup sparse_vectors\n\n\\par About\n\nThis module implements a sparse vector data type named \"svec\", which \ngives compressed storage of sparse vectors with many duplicate elements.\n\nWhen we use arrays of floating point numbers for various calculations, \n    we will sometimes have long runs of zeros (or some other default value). \n    This is common in applications like scientific computing, \n    retail optimization, and text processing. Each floating point number takes \n    8 bytes of storage in memory and/or disk, so saving those zeros is often \n    worthwhile. There are also many computations that can benefit from skipping\n    over the zeros.\n\n    To focus the discussion, consider, for example, the following \n    array of doubles stored as a Postgres/GP \"float8[]\" data type:\n\n\\code\n      '{0, 33,...40,000 zeros..., 12, 22 }'::float8[].\n\\endcode\n\n    This array would occupy slightly more than 320KB of memory/disk, most of \n    it zeros. Even if we were to exploit the null bitmap and store the zeros \n    as nulls, we would still end up with a 5KB null bitmap, which is still \n    not nearly as memory efficient as we'd like. Also, as we perform various \n    operations on the array, we'll often be doing work on 40,000 fields that \n    would turn out not to be important. \n\n    To solve the problems associated with the processing of sparse vectors \n    discussed above, we adopt a simple Run Length Encoding (RLE) scheme to \n    represent sparse vectors as pairs of count-value arrays. So, for example, \n    the array above would be represented as follows\n\n\\code\n      '{1,1,40000,1,1}:{0,33,0,12,22}'::svec,\n\\endcode\n\n    which says there is 1 occurrence of 0, followed by 1 occurrence of 33, \n    followed by 40,000 occurrences of 0, etc. In contrast to the naive \n    representations, we only need 5 integers and 5 floating point numbers\n    to store the array. Further, it is easy to implement vector operations \n    that can take advantage of the RLE representation to make computations \n    faster. The module provides a library of such functions.\n\n    The current version only supports sparse vectors of float8\n    values. Future versions will support other base types.\n\n\n\\par Usage\n\n    We can input an array directly as an svec as follows: \n\\code   \n    testdb=# select '{1,1,40000,1,1}:{0,33,0,12,22}'::svec.\n\\endcode\n    We can also cast an array into an svec:\n\\code\n    testdb=# select ('{0,33,...40,000 zeros...,12,22}'::float8[])::svec.\n\\endcode\n    We can use operations with svec type like <, >, *, **, /, =, +, SUM, etc, \n    and they have meanings associated with typical vector operations. For \n    example, the plus (+) operator adds each of the terms of two vectors having\n    the same dimension together. \n\\code\n    testdb=# select ('{0,1,5}'::float8[]::svec + '{4,3,2}'::float8[]::svec)::float8[];\n     float8  \n    ---------\n     {4,4,7}\n\\endcode\n\n    Without the casting into float8[] at the end, we get:\n\\code\n    testdb=# select '{0,1,5}'::float8[]::svec + '{4,3,2}'::float8[]::svec;\n     ?column?  \n    ----------\n    {2,1}:{4,7}    \t    \t\n\\endcode\n\n    A dot product (%*%) between the two vectors will result in a scalar \n    result of type float8. The dot product should be (0*4 + 1*3 + 5*2) = 13, \n    like this:\n\\code\n    testdb=# select '{0,1,5}'::float8[]::svec %*% '{4,3,2}'::float8[]::svec;\n     ?column? \n    ----------\n        13\n\\endcode\n\n    Special vector aggregate functions are also available. SUM is self \n    explanatory. VEC_COUNT_NONZERO evaluates the count of non-zero terms \n    in each column found in a set of n-dimensional svecs and returns an \n    svec with the counts. For instance, if we have the vectors {0,1,5},\n    {10,0,3},{0,0,3},{0,1,0}, then executing the VEC_COUNT_NONZERO() aggregate\n    function would result in {1,2,3}:\n\n\\code\n    testdb=# create table list (a svec);\n    testdb=# insert into list values ('{0,1,5}'::float8[]), ('{10,0,3}'::float8[]), ('{0,0,3}'::float8[]),('{0,1,0}'::float8[]);\n \n    testdb=# select VEC_COUNT_NONZERO(a)::float8[] from list;\n    vec_count_nonzero \n    -----------------\n        {1,2,3}\n\\endcode\n\n    We do not use null bitmaps in the svec data type. A null value in an svec \n    is represented explicitly as an NVP (No Value Present) value. For example, \n    we have:\n\\code\n    testdb=# select '{1,2,3}:{4,null,5}'::svec;\n          svec        \n    -------------------\n     {1,2,3}:{4,NVP,5}\n\n    testdb=# select '{1,2,3}:{4,null,5}'::svec + '{2,2,2}:{8,9,10}'::svec; \n             ?column?         \n     --------------------------\n      {1,2,1,2}:{12,NVP,14,15}\n\\endcode\n\n    An element of an svec can be accessed using the svec_proj() function,\n    which takes an svec and the index of the element desired.\n\\code\n    testdb=# select svec_proj('{1,2,3}:{4,5,6}'::svec, 1) + svec_proj('{4,5,6}:{1,2,3}'::svec, 15);     \n     ?column? \n    ----------\n        7\n\\endcode\n\n    A subvector of an svec can be accessed using the svec_subvec() function,\n    which takes an svec and the start and end index of the subvector desired.\n\\code\n    testdb=# select svec_subvec('{2,4,6}:{1,3,5}'::svec, 2, 11);\n       svec_subvec   \n    ----------------- \n     {1,4,5}:{1,3,5}\n\\endcode\n\n    The elements/subvector of an svec can be changed using the function \n    svec_change(). It takes three arguments: an m-dimensional svec sv1, a\n    start index j, and an n-dimensional svec sv2 such that j + n - 1 <= m,\n    and returns an svec like sv1 but with the subvector sv1[j:j+n-1] \n    replaced by sv2. An example follows:\n\\code\n    testdb=# select svec_change('{1,2,3}:{4,5,6}'::svec,3,'{2}:{3}'::svec);\n         svec_change     \n    ---------------------\n     {1,1,2,2}:{4,5,3,6}\n\\endcode\n\n    There are also higher-order functions for processing svecs. For example,\n    the following is the corresponding function for lapply() in R.\n\\code\n    testdb=# select svec_lapply('sqrt', '{1,2,3}:{4,5,6}'::svec);\n                      svec_lapply                  \n    -----------------------------------------------\n     {1,2,3}:{2,2.23606797749979,2.44948974278318}\n\\endcode\n\n    The full list of functions available for operating on svecs are available\n    in gp_svec.sql.\n\n\\par A More Extensive Example\n\n    For a text classification example, let's assume we have a dictionary \n    composed of words in a text array:\n\\code\n    testdb=# create table features (a text[][]) distributed randomly;\n    testdb=# insert into features values \n                ('{am,before,being,bothered,corpus,document,i,in,is,me,\n                   never,now,one,really,second,the,third,this,until}');\n\\endcode\n    We have a set of documents, each represented as an array of words:\n\\code\n    testdb=# create table documents(a int,b text[]);\n    testdb=# insert into documents values\n                (1,'{this,is,one,document,in,the,corpus}'),\n                (2,'{i,am,the,second,document,in,the,corpus}'),\n                (3,'{being,third,never,really,bothered,me,until,now}'),\n                (4,'{the,document,before,me,is,the,third,document}');\n\\endcode\n\n    Now we have a dictionary and some documents, we would like to do some \n    document categorization using vector arithmetic on word counts and \n    proportions of dictionary words in each document.\n\n    To start this process, we'll need to find the dictionary words in each \n    document. We'll prepare what is called a Sparse Feature Vector or SFV \n    for each document. An SFV is a vector of dimension N, where N is the \n    number of dictionary words, and in each cell of an SFV is a count of \n    each dictionary word in the document.\n\n    Inside the sparse vector library, we have a function that will create \n    an SFV from a document, so we can just do this:\n\\code\n    testdb=# select gp_extract_feature_histogram((select a from features limit 1),b)::float8[] \n             from documents;\n\n          gp_extract_feature_histogram             \n    -----------------------------------------\n     {0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,1,0}\n     {0,0,1,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1}\n     {1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0}\n     {0,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,0,0}\n\\endcode\n    Note that the output of gp_extract_feature_histogram() is an svec for each \n    document containing the count of each of the dictionary words in the \n    ordinal positions of the dictionary. This can more easily be understood \n    by lining up the feature vector and text like this:\n\\code\n    testdb=# select gp_extract_feature_histogram((select a from features limit 1),b)::float8[]\n                    , b \n             from documents;\n\n          gp_extract_feature_histogram       |                        b                         \n    -----------------------------------------+--------------------------------------------------\n     {1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0} | {i,am,the,second,document,in,the,corpus}\n     {0,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,0,0} | {the,document,before,me,is,the,third,document}\n     {0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,1,0} | {this,is,one,document,in,the,corpus}\n     {0,0,1,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1} | {being,third,never,really,bothered,me,until,now}\n\n    testdb=# select * from features;\n                                                   \ta                                                    \n    --------------------------------------------------------------------------------------------------------\n    {am,before,being,bothered,corpus,document,i,in,is,me,never,now,one,really,second,the,third,this,until}\n\\endcode\n\n    Now when we look at the document \"i am the second document in the corpus\", \n    its SFV is {1,3*0,1,1,1,1,6*0,1,2}. The word \"am\" is the first ordinate in \n    the dictionary and there is 1 instance of it in the SFV. The word \"before\" \n    has no instances in the document, so its value is \"0\" and so on.\n\n    The function gp_extract_feature_histogram() is optimized for speed -- in \n    essence a single routine version of a hash join -- and can process large \n    numbers of documents into their SFVs in parallel at high speed.\n\n    The rest of the categorization process is all vector math. The actual \n    count is hardly ever used.  Instead, it's turned into a weight. The most \n    common weight is called tf/idf for Term Frequency / Inverse Document \n    Frequency. The calculation for a given term in a given document is \n\\code\n    {#Times in document} * log {#Documents / #Documents the term appears in}.\n\\endcode\n    For instance, the term \"document\" in document A would have weight \n    1 * log (4/3). In document D, it would have weight 2 * log (4/3).\n    Terms that appear in every document would have tf/idf weight 0, since \n    log (4/4) = log(1) = 0. (Our example has no term like that.) That \n    usually sends a lot of values to 0.\n\n    For this part of the processing, we'll need to have a sparse vector of \n    the dictionary dimension (19) with the values \n\\code\n    log(#documents/#Documents each term appears in). \n\\endcode\n    There will be one such vector for the whole list of documents (aka the \n    \"corpus\"). The #documents is just a count of all of the documents, in \n    this case 4, but there is one divisor for each dictionary word and its \n    value is the count of all the times that word appears in the document. \n    This single vector for the whole corpus can then be scalar product \n    multiplied by each document SFV to produce the Term Frequency/Inverse \n    Document Frequency weights.\n\n    This can be done as follows:\n\\code\n    testdb=# create table corpus as \n                (select a,gp_extract_feature_histogram((select a from features limit 1),b) sfv \n             from documents);\n    testdb=# select a docnum, (sfv * logidf) tf_idf \n             from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n                   from corpus) foo, corpus order by docnum;\n\n    docnum |                tf_idf                                     \n    -------+----------------------------------------------------------------------\n         1 | {4,1,1,1,2,3,1,2,1,1,1,1}:{0,0.69,0.28,0,0.69,0,1.38,0,0.28,0,1.38,0}\n         2 | {1,3,1,1,1,1,6,1,1,3}:{1.38,0,0.69,0.28,1.38,0.69,0,1.38,0.57,0}\n         3 | {2,2,5,1,2,1,1,2,1,1,1}:{0,1.38,0,0.69,1.38,0,1.38,0,0.69,0,1.38}\n         4 | {1,1,3,1,2,2,5,1,1,2}:{0,1.38,0,0.57,0,0.69,0,0.57,0.69,0}\n\\endcode\n\n    We can now get the \"angular distance\" between one document and the rest \n    of the documents using the ACOS of the dot product of the document vectors:\n\\code\n    testdb=# create table weights as \n                (select a docnum, (sfv * logidf) tf_idf \n                 from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n                       from corpus) foo, corpus order by docnum) \n             distributed randomly ;\n\\endcode\n    The following calculates the angular distance between the first document \n    and each of the other documents:\n\\code\n    testdb=# select docnum,\n                    180.*(ACOS(dmin(1.,(tf_idf%*%testdoc)/(l2norm(tf_idf)*l2norm(testdoc))))/3.141592654) angular_distance \n             from weights,(select tf_idf testdoc from weights where docnum = 1 LIMIT 1) foo \n             order by 1;\n\n    docnum | angular_distance \n   --------+------------------\n         1 |                0\n         2 | 78.8235846096986\n         3 | 89.9999999882484\n         4 | 80.0232034288617\n\\endcode\n    We can see that the angular distance between document 1 and itself \n    is 0 degrees and between document 1 and 3 is 90 degrees because they \n    share no features at all. The angular distance can now be plugged into\n    machine learning algorithms that rely on a distance measure between\n    data points.\n\n    Other extensive examples of svecs usage can be found in the k-means\n    module.\n\n\\par Todo\n\n    - Support for other base types.\n\n    - Indexing on svecs. This requires indexing capability on arrays,\n      which is currently unsupported in GP.  \n\n\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "matched_text": "/*! \\defgroup sparse_vectors"}, {"satd_id": 23568317, "satd_repo": 42763345, "satd_sha": "207337747ce609fdc1fa16e25099d381f5f96f3e", "satd_text": "\n\t\t * If the left argument is {1}:{0}, this is the first call to \n\t\t * the routine, and we need a zero vector for the beginning \n\t\t * of the accumulation of the correct dimension.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/operators.c", "lines": [557, 558, 559, 560, 561], "matched_text": "\t\t/*"}, {"satd_id": 23568427, "satd_repo": 42763345, "satd_sha": "207337747ce609fdc1fa16e25099d381f5f96f3e", "satd_text": "\n\t\t * If the left argument is {1}:{0}, this is the first call to \n\t\t * the routine, and we need a zero vector for the beginning \n\t\t * of the accumulation of the correct dimension.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/operators.c", "lines": [557, 558, 559, 560, 561], "matched_text": "\t\t/*"}, {"satd_id": 23568519, "satd_repo": 42763345, "satd_sha": "ff0cdc5940d4e37b110145a6312973b3cad9a9fb", "satd_text": "*< This is unused at the moment ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [362], "matched_text": "\tint4 vl_len_;   /**< This is unused at the moment */"}, {"satd_id": 23568520, "satd_repo": 42763345, "satd_sha": "ff0cdc5940d4e37b110145a6312973b3cad9a9fb", "satd_text": "! \\defgroup sparse_vectors\n\n\\par About\n\nThis module implements a sparse vector data type named \"svec\", which \ngives compressed storage of sparse vectors with many duplicate elements.\n\nWhen we use arrays of floating point numbers for various calculations, \n    we will sometimes have long runs of zeros (or some other default value). \n    This is common in applications like scientific computing, \n    retail optimization, and text processing. Each floating point number takes \n    8 bytes of storage in memory and/or disk, so saving those zeros is often \n    worthwhile. There are also many computations that can benefit from skipping\n    over the zeros.\n\n    To focus the discussion, consider, for example, the following \n    array of doubles stored as a Postgres/GP \"float8[]\" data type:\n\n\\code\n      '{0, 33,...40,000 zeros..., 12, 22 }'::float8[].\n\\endcode\n\n    This array would occupy slightly more than 320KB of memory/disk, most of \n    it zeros. Even if we were to exploit the null bitmap and store the zeros \n    as nulls, we would still end up with a 5KB null bitmap, which is still \n    not nearly as memory efficient as we'd like. Also, as we perform various \n    operations on the array, we'll often be doing work on 40,000 fields that \n    would turn out not to be important. \n\n    To solve the problems associated with the processing of sparse vectors \n    discussed above, we adopt a simple Run Length Encoding (RLE) scheme to \n    represent sparse vectors as pairs of count-value arrays. So, for example, \n    the array above would be represented as follows\n\n\\code\n      '{1,1,40000,1,1}:{0,33,0,12,22}'::svec,\n\\endcode\n\n    which says there is 1 occurrence of 0, followed by 1 occurrence of 33, \n    followed by 40,000 occurrences of 0, etc. In contrast to the naive \n    representations, we only need 5 integers and 5 floating point numbers\n    to store the array. Further, it is easy to implement vector operations \n    that can take advantage of the RLE representation to make computations \n    faster. The module provides a library of such functions.\n\n\\par Prerequisites\n\n    -# Greenplum Database 3.3 or higher\n    -# A C compiler\n\n\\par Installation\n\n    -# Make sure the Greenplum binary distribution is in the path.\n    -# On a command line, execute the following to compile the library.\n\n\\code\n       \t   make install\n\\endcode\n\n    -# Install the function and type definitions with \n\n\\code\n           psql -d <your_db_name> -f gp_svec.sql\n\\endcode\n\n    -# <Optional> Run tests with \n\n\\code\n           psql -d <your_db_name> -af gp_svec_test.sql | diff - test_output\n\\endcode\n\n\\par Todo\n\n    - The current implementation only supports sparse vectors of float8\n      values. Future versions will support other base types.\n\n    - Indexing on svecs. This requires indexing capability on arrays,\n      which is currently unsupported in GP.  \n\n\\par Usage\n\n    We can input an array directly as an svec as follows: \n\\code   \n    testdb=# select '{1,1,40000,1,1}:{0,33,0,12,22}'::svec.\n\\endcode\n    We can also cast an array into an svec:\n\\code\n    testdb=# select ('{0,33,...40,000 zeros...,12,22}'::float8[])::svec.\n\\endcode\n    We can use operations with svec type like <, >, *, **, /, =, +, SUM, etc, \n    and they have meanings associated with typical vector operations. For \n    example, the plus (+) operator adds each of the terms of two vectors having\n    the same dimension together. \n\\code\n    testdb=# select ('{0,1,5}'::float8[]::svec + '{4,3,2}'::float8[]::svec)::float8[];\n     float8  \n    ---------\n     {4,4,7}\n\\endcode\n\n    Without the casting into float8[] at the end, we get:\n\\code\n    testdb=# select '{0,1,5}'::float8[]::svec + '{4,3,2}'::float8[]::svec;\n     ?column?  \n    ----------\n    {2,1}:{4,7}    \t    \t\n\\endcode\n\n    A dot product (%*%) between the two vectors will result in a scalar \n    result of type float8. The dot product should be (0*4 + 1*3 + 5*2) = 13, \n    like this:\n\\code\n    testdb=# select '{0,1,5}'::float8[]::svec %*% '{4,3,2}'::float8[]::svec;\n     ?column? \n    ----------\n        13\n\\endcode\n\n    Special vector aggregate functions are also available. SUM is self \n    explanatory. VEC_COUNT_NONZERO evaluates the count of non-zero terms \n    in each column found in a set of n-dimensional svecs and returns an \n    svec with the counts. For instance, if we have the vectors {0,1,5},\n    {10,0,3},{0,0,3},{0,1,0}, then executing the VEC_COUNT_NONZERO() aggregate\n    function would result in {1,2,3}:\n\n\\code\n    testdb=# create table list (a svec);\n    testdb=# insert into list values ('{0,1,5}'::float8[]), ('{10,0,3}'::float8[]), ('{0,0,3}'::float8[]),('{0,1,0}'::float8[]);\n \n    testdb=# select VEC_COUNT_NONZERO(a)::float8[] from list;\n    vec_count_nonzero \n    -----------------\n        {1,2,3}\n\\endcode\n\n    We do not use null bitmaps in the svec data type. A null value in an svec \n    is represented explicitly as an NVP (No Value Present) value. For example, \n    we have:\n\\code\n    testdb=# select '{1,2,3}:{4,null,5}'::svec;\n          svec        \n    -------------------\n     {1,2,3}:{4,NVP,5}\n\n    testdb=# select '{1,2,3}:{4,null,5}'::svec + '{2,2,2}:{8,9,10}'::svec; \n             ?column?         \n     --------------------------\n      {1,2,1,2}:{12,NVP,14,15}\n\\endcode\n\n    An element of an svec can be accessed using the svec_proj() function,\n    which takes an svec and the index of the element desired.\n\\code\n    testdb=# select svec_proj('{1,2,3}:{4,5,6}'::svec, 1) + svec_proj('{4,5,6}:{1,2,3}'::svec, 15);     \n     ?column? \n    ----------\n        7\n\\endcode\n\n    A subvector of an svec can be accessed using the svec_subvec() function,\n    which takes an svec and the start and end index of the subvector desired.\n\\code\n    testdb=# select svec_subvec('{2,4,6}:{1,3,5}'::svec, 2, 11);\n       svec_subvec   \n    ----------------- \n     {1,4,5}:{1,3,5}\n\\endcode\n\n    The elements/subvector of an svec can be changed using the function \n    svec_change(). It takes three arguments: an m-dimensional svec sv1, a\n    start index j, and an n-dimensional svec sv2 such that j + n - 1 <= m,\n    and returns an svec like sv1 but with the subvector sv1[j:j+n-1] \n    replaced by sv2. An example follows:\n\\code\n    testdb=# select svec_change('{1,2,3}:{4,5,6}'::svec,3,'{2}:{3}'::svec);\n         svec_change     \n    ---------------------\n     {1,1,2,2}:{4,5,3,6}\n\\endcode\n\n    There are also higher-order functions for processing svecs. For example,\n    the following is the corresponding function for lapply() in R.\n\\code\n    testdb=# select svec_lapply('sqrt', '{1,2,3}:{4,5,6}'::svec);\n                      svec_lapply                  \n    -----------------------------------------------\n     {1,2,3}:{2,2.23606797749979,2.44948974278318}\n\\endcode\n\n    The full list of functions available for operating on svecs are available\n    in gp_svec.sql.\n\n\\par A More Extensive Example\n\n    For a text classification example, let's assume we have a dictionary \n    composed of words in a text array:\n\\code\n    testdb=# create table features (a text[][]) distributed randomly;\n    testdb=# insert into features values \n                ('{am,before,being,bothered,corpus,document,i,in,is,me,\n                   never,now,one,really,second,the,third,this,until}');\n\\endcode\n    We have a set of documents, each represented as an array of words:\n\\code\n    testdb=# create table documents(a int,b text[]);\n    testdb=# insert into documents values\n                (1,'{this,is,one,document,in,the,corpus}'),\n                (2,'{i,am,the,second,document,in,the,corpus}'),\n                (3,'{being,third,never,really,bothered,me,until,now}'),\n                (4,'{the,document,before,me,is,the,third,document}');\n\\endcode\n\n    Now we have a dictionary and some documents, we would like to do some \n    document categorization using vector arithmetic on word counts and \n    proportions of dictionary words in each document.\n\n    To start this process, we'll need to find the dictionary words in each \n    document. We'll prepare what is called a Sparse Feature Vector or SFV \n    for each document. An SFV is a vector of dimension N, where N is the \n    number of dictionary words, and in each cell of an SFV is a count of \n    each dictionary word in the document.\n\n    Inside the sparse vector library, we have a function that will create \n    an SFV from a document, so we can just do this:\n\\code\n    testdb=# select gp_extract_feature_histogram((select a from features limit 1),b)::float8[] \n             from documents;\n\n          gp_extract_feature_histogram             \n    -----------------------------------------\n     {0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,1,0}\n     {0,0,1,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1}\n     {1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0}\n     {0,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,0,0}\n\\endcode\n    Note that the output of gp_extract_feature_histogram() is an svec for each \n    document containing the count of each of the dictionary words in the \n    ordinal positions of the dictionary. This can more easily be understood \n    by lining up the feature vector and text like this:\n\\code\n    testdb=# select gp_extract_feature_histogram((select a from features limit 1),b)::float8[]\n                    , b \n             from documents;\n\n          gp_extract_feature_histogram       |                        b                         \n    -----------------------------------------+--------------------------------------------------\n     {1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0} | {i,am,the,second,document,in,the,corpus}\n     {0,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,0,0} | {the,document,before,me,is,the,third,document}\n     {0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,1,0} | {this,is,one,document,in,the,corpus}\n     {0,0,1,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1} | {being,third,never,really,bothered,me,until,now}\n\n    testdb=# select * from features;\n                                                   \ta                                                    \n    --------------------------------------------------------------------------------------------------------\n    {am,before,being,bothered,corpus,document,i,in,is,me,never,now,one,really,second,the,third,this,until}\n\\endcode\n\n    Now when we look at the document \"i am the second document in the corpus\", \n    its SFV is {1,3*0,1,1,1,1,6*0,1,2}. The word \"am\" is the first ordinate in \n    the dictionary and there is 1 instance of it in the SFV. The word \"before\" \n    has no instances in the document, so its value is \"0\" and so on.\n\n    The function gp_extract_feature_histogram() is optimized for speed -- in \n    essence a single routine version of a hash join -- and can process large \n    numbers of documents into their SFVs in parallel at high speed.\n\n    The rest of the categorization process is all vector math. The actual \n    count is hardly ever used.  Instead, it's turned into a weight. The most \n    common weight is called tf/idf for Term Frequency / Inverse Document \n    Frequency. The calculation for a given term in a given document is \n\\code\n    {#Times in document} * log {#Documents / #Documents the term appears in}.\n\\endcode\n    For instance, the term \"document\" in document A would have weight \n    1 * log (4/3). In document D, it would have weight 2 * log (4/3).\n    Terms that appear in every document would have tf/idf weight 0, since \n    log (4/4) = log(1) = 0. (Our example has no term like that.) That \n    usually sends a lot of values to 0.\n\n    For this part of the processing, we'll need to have a sparse vector of \n    the dictionary dimension (19) with the values \n\\code\n    log(#documents/#Documents each term appears in). \n\\endcode\n    There will be one such vector for the whole list of documents (aka the \n    \"corpus\"). The #documents is just a count of all of the documents, in \n    this case 4, but there is one divisor for each dictionary word and its \n    value is the count of all the times that word appears in the document. \n    This single vector for the whole corpus can then be scalar product \n    multiplied by each document SFV to produce the Term Frequency/Inverse \n    Document Frequency weights.\n\n    This can be done as follows:\n\\code\n    testdb=# create table corpus as \n                (select a,gp_extract_feature_histogram((select a from features limit 1),b) sfv \n             from documents);\n    testdb=# select a docnum, (sfv * logidf) tf_idf \n             from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n                   from corpus) foo, corpus order by docnum;\n\n    docnum |                tf_idf                                     \n    -------+----------------------------------------------------------------------\n         1 | {4,1,1,1,2,3,1,2,1,1,1,1}:{0,0.69,0.28,0,0.69,0,1.38,0,0.28,0,1.38,0}\n         2 | {1,3,1,1,1,1,6,1,1,3}:{1.38,0,0.69,0.28,1.38,0.69,0,1.38,0.57,0}\n         3 | {2,2,5,1,2,1,1,2,1,1,1}:{0,1.38,0,0.69,1.38,0,1.38,0,0.69,0,1.38}\n         4 | {1,1,3,1,2,2,5,1,1,2}:{0,1.38,0,0.57,0,0.69,0,0.57,0.69,0}\n\\endcode\n\n    We can now get the \"angular distance\" between one document and the rest \n    of the documents using the ACOS of the dot product of the document vectors:\n\\code\n    testdb=# create table weights as \n                (select a docnum, (sfv * logidf) tf_idf \n                 from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n                       from corpus) foo, corpus order by docnum) \n             distributed randomly ;\n\\endcode\n    The following calculates the angular distance between the first document \n    and each of the other documents:\n\\code\n    testdb=# select docnum,\n                    180.*(ACOS(dmin(1.,(tf_idf%*%testdoc)/(l2norm(tf_idf)*l2norm(testdoc))))/3.141592654) angular_distance \n             from weights,(select tf_idf testdoc from weights where docnum = 1 LIMIT 1) foo \n             order by 1;\n\n    docnum | angular_distance \n   --------+------------------\n         1 |                0\n         2 | 78.8235846096986\n         3 | 89.9999999882484\n         4 | 80.0232034288617\n\\endcode\n    We can see that the angular distance between document 1 and itself \n    is 0 degrees and between document 1 and 3 is 90 degrees because they \n    share no features at all. The angular distance can now be plugged into\n    machine learning algorithms that rely on a distance measure between\n    data points.\n\n    Other extensive examples of svecs usage can be found in the k-means\n    module.\n\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "matched_text": "/*! \\defgroup sparse_vectors"}, {"satd_id": 23568526, "satd_repo": 42763345, "satd_sha": "f541fa36b863eb46fe63f0b1e59aca339a5bd9e0", "satd_text": "*< This is unused at the moment ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [336], "matched_text": "\tint4 vl_len_;   /**< This is unused at the moment */"}, {"satd_id": 23568531, "satd_repo": 42763345, "satd_sha": "f541fa36b863eb46fe63f0b1e59aca339a5bd9e0", "satd_text": "! \\defgroup sparse_vectors\n\nThis module implements a sparse vector data type named \"svec\", which \ngives compressed storage of duplicate elements.\n\n\\par About:\n\nWhen we use arrays of floating point numbers for various calculations, \n    we will sometimes have long runs of zeros (or some other default value). \n    This is common in many kinds of applications such as scientific computing, \n    retail optimization, and text processing. Each floating point number takes \n    8 bytes of storage in memory and/or disk, so saving those zeros is often \n    worthwhile. There are also many computations that can benefit from skipping\n    over the zeros.\n\n    To make the discussion more concrete, consider, for example, the following \n    array of doubles stored as a Postgres/GP \"float8[]\" data type:\n\n      '{0, 33,...40,000 zeros..., 12, 22 }'::float8[].\n\n    This array would occupy slightly more than 320KB of memory/disk, most of \n    it zeros. Even if we store the zeros as nulls, we would still end up with\n    a 5KB null bitmap, which is still not nearly as memory efficient as we'd \n    like. Also, as we perform various operations on the array, we'll often be \n    doing work on 40,000 fields that turn out not to be important. \n\n    To solve the problems associated with the processing of sparse arrays, we \n    adopt a simple Run Length Encoding (RLE) scheme to represent sparse arrays \n    as pairs of count-value arrays. So, for example, the array above would be \n    represented as follows\n\n        '{1,1,40000,1,1}:{0,33,0,12,22}'::svec,\n\n    which says there is 1 occurrence of 0, followed by 1 occurrence of 33, \n    followed by 40,000 occurrences of 0, etc. In contrast to the naive \n    representations, we only need 5 integers and 5 floating point numbers\n    to store the array. It is also easy to implement vector operations \n    that can take advantage of the RLE representation to make computations \n    faster.\n\n\\par Prerequisites\n\n    1. Greenplum Database 3.3 or higher\n    2. A C compiler\n\n\\par Installation\n\n    1. Make sure the Greenplum binary distribution is in the path.\n    2. On a command line, execute the following to compile the library.\n\n       \t   make install\n\n    3. Install the function and type definitions with \n\n           psql -d <your_db_name> -f gp_svec.sql\n\n    4. <Optional> Run tests with \n\n           psql -d <your_db_name> -af gp_svec_test.sql | diff - test_output\n\n\\par Todo\n\n    - The current implementation only supports sparse vectors of float8\n      values. Future versions will support other base types.\n\n    - Indexing on svecs. This requires indexing capability on arrays,\n      which is currently unsupported in GP.  \n\n\\par Usage\n\n    We can input an array directly as an svec as follows: \n   \n        testdb=# select '{1,1,40000,1,1}:{0,33,0,12,22}'::svec.\n\n    We can also cast an array into an svec:\n\n\ttestdb=# select ('{0,33,...40,000 zeros...,12,22}'::float8[])::svec.\n\n    We can use operations with svec type like <, >, *, **, /, =, +, SUM, etc, \n    and they have meanings associated with typical vector operations. For \n    example, the plus (+) operator adds each of the terms of two vectors having\n    the same dimension together. \n\n\ttestdb=# select ('{0,1,5}'::float8[]::svec + \n\t\t \t '{4,3,2}'::float8[]::svec)::float8[];\n \tfloat8  \n\t---------\n \t{4,4,7}\n\n    Without the casting into float8[] at the end, we get:\n\n        testdb=# select '{0,1,5}'::float8[]::svec + '{4,3,2}'::float8[]::svec;\n \t?column?  \n\t----------\n \t{2,1}:{4,7}    \t    \t\n\n    A dot product (%*%) between the two vectors will result in a scalar \n    result of type float8. The dot product should be (0*4 + 1*3 + 5*2) = 13, \n    like this:\n\n\ttestdb=# select '{0,1,5}'::float8[]::svec %*% '{4,3,2}'::float8[]::svec;\n \t?column? \n\t----------\n       \t13\n\n    Special vector aggregate functions are also available. SUM is self \n    explanatory. VEC_COUNT_NONZERO evaluates the count of non-zero terms \n    in each column found in a set of n-dimensional svecs and returns an \n    svec with the counts. For instance, if we have the vectors {0,1,5},\n    {10,0,3},{0,0,3},{0,1,0}, then executing the VEC_COUNT_NONZERO() aggregate\n    function would result in {1,2,3}:\n\n\ttestdb=# create table list (a svec);\n\tCREATE TABLE\n\ttestdb=# insert into list values \n\t\t \t('{0,1,5}'::float8[]), ('{10,0,3}'::float8[]),\n\t\t\t('{0,0,3}'::float8[]),('{0,1,0}'::float8[]);\n\tINSERT 0 4\n\ttestdb=# select VEC_COUNT_NONZERO(a)::float8[] from list;\n \tvec_count_nonzero \n\t-----------------\n \t{1,2,3}\n\n    We do not use null bitmaps in the svec data type. A null value in an svec \n    is represented explicitly as an NVP (No Value Present) value. For example, \n    we have:\n\n    \ttestdb=# select '{1,2,3}:{4,null,5}'::svec;\n\t      svec        \n\t-------------------\n \t {1,2,3}:{4,NVP,5}\n\n\ttestdb=# select '{1,2,3}:{4,null,5}'::svec + '{2,2,2}:{8,9,10}'::svec; \n\t         ?column?         \n \t--------------------------\n \t {1,2,1,2}:{12,NVP,14,15}\n\n    An element of an svec can be accessed using the svec_proj() function,\n    which takes an svec and the index of the element desired.\n\n        testdb=# select svec_proj('{1,2,3}:{4,5,6}'::svec, 1) + \n\t\t \tsvec_proj('{4,5,6}:{1,2,3}'::svec, 15);\t \n         ?column? \n\t----------\n                7\n\n    A subvector of an svec can be accessed using the svec_subvec() function,\n    which takes an svec and the start and end index of the subvector desired.\n\n        testdb=# select svec_subvec('{2,4,6}:{1,3,5}'::svec, 2, 11);\n\t   svec_subvec   \n\t----------------- \n\t {1,4,5}:{1,3,5}\n\n    The elements/subvector of an svec can be changed using the function \n    svec_change(). It takes three arguments: an m-dimensional svec sv1, a\n    start index j, and an n-dimensional svec sv2 such that j + n - 1 <= m,\n    and returns an svec like sv1 but with the subvector sv1[j:j+n-1] \n    replaced by sv2. An example follows:\n\n        testdb=# select svec_change('{1,2,3}:{4,5,6}'::svec,3,'{2}:{3}'::svec);\n\t     svec_change     \n\t---------------------\n\t {1,1,2,2}:{4,5,3,6}\n\n    There are also higher-order functions for processing svecs. For example,\n    the following is the corresponding function for lapply() in R.\n\n        testdb=# select svec_lapply('sqrt', '{1,2,3}:{4,5,6}'::svec);\n\t                  svec_lapply                  \n\t-----------------------------------------------\n\t {1,2,3}:{2,2.23606797749979,2.44948974278318}\n\n    The full list of functions available for operating on svecs are available\n    in gp_svec.sql.\n\n\\par A More Extensive Example\n\n    For a text classification example, let's assume we have a dictionary \n    composed of words in a text array:\n\n        testdb=# create table features (a text[][]) distributed randomly;\n\ttestdb=# insert into features values \n\t\t    ('{am,before,being,bothered,corpus,document,i,in,is,me,\n\t\t       never,now,one,really,second,the,third,this,until}');\n\n    We have a set of documents, each represented as an array of words:\n\n\ttestdb=# create table documents(a int,b text[]);\n\tCREATE TABLE\n\ttestdb=# insert into documents values\n\t\t \t(1,'{this,is,one,document,in,the,corpus}'),\n\t\t        (2,'{i,am,the,second,document,in,the,corpus}'),\n\t\t        (3,'{being,third,never,really,bothered,me,until,now}'),\n\t\t        (4,'{the,document,before,me,is,the,third,document}');\n\n    Now we have a dictionary and some documents, we would like to do some \n    document categorization using vector arithmetic on word counts and \n    proportions of dictionary words in each document.\n\n    To start this process, we'll need to find the dictionary words in each \n    document. We'll prepare what is called a Sparse Feature Vector or SFV \n    for each document. An SFV is a vector of dimension N, where N is the \n    number of dictionary words, and in each cell of an SFV is a count of \n    each dictionary word in the document.\n\n    Inside the sparse vector library, we have a function that will create \n    an SFV from a document, so we can just do this:\n\n\ttestdb=# select gp_extract_feature_histogram(\n\t\t  \t      (select a from features limit 1),b)::float8[] \n\t         from documents;\n\n             \tgp_extract_feature_histogram             \n\t-----------------------------------------\n \t{0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,1,0}\n \t{0,0,1,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1}\n \t{1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0}\n \t{0,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,0,0}\n\n    Note that the output of gp_extract_feature_histogram() is an svec for each \n    document containing the count of each of the dictionary words in the \n    ordinal positions of the dictionary. This can more easily be understood \n    by lining up the feature vector and text like this:\n\n\ttestdb=# select gp_extract_feature_histogram(\n\t\t\t\t(select a from features limit 1),b)::float8[]\n                        , b \n                 from documents;\n\n\ttestdb=# select * from features;\n\n    Now when we look at the document \"i am the second document in the corpus\", \n    its SFV is {1,3*0,1,1,1,1,6*0,1,2}. The word \"am\" is the first ordinate in \n    the dictionary and there is 1 instance of it in the SFV. The word \"before\" \n    has no instances in the document, so its value is \"0\" and so on.\n\n    The function gp_extract_feature_histogram() is optimized for speed -- in \n    essence a single routine version of a hash join, and can process large \n    numbers of documents into their SFVs in parallel at high speed.\n\n    The rest of the categorization process is all vector math. The actual \n    count is hardly ever used.  Instead, it's turned into a weight. The most \n    common weight is called tf/idf for Term Frequency / Inverse Document \n    Frequency. The calculation for a given term in a given document is \n\n      {#Times in document} * log {#Documents / #Documents the term appears in}.\n\n    For instance, the term \"document\" in document A would have weight \n    1 * log (4/3). In document D, it would have weight 2 * log (4/3).\n    Terms that appear in every document would have tf/idf weight 0, since \n    log (4/4) = log(1) = 0. (Our example has no term like that.) That \n    usually sends a lot of values to 0.\n\n    For this part of the processing, we'll need to have a sparse vector of \n    the dictionary dimension (19) with the values \n\n    \t(log(#documents/#Documents each term appears in). \n\n    There will be one such vector for the whole list of documents (aka the \n    \"corpus\"). The #documents is just a count of all of the documents, in \n    this case 4, but there is one divisor for each dictionary word and its \n    value is the count of all the times that word appears in the document. \n    This single vector for the whole corpus can then be scalar product \n    multiplied by each document SFV to produce the Term Frequency/Inverse \n    Document Frequency.\n\n    This can be done as follows:\n\n\ttestdb=# create table corpus as \n\t\t   (select a,gp_extract_feature_histogram(\n\t\t      (select a from features limit 1),b) sfv from documents);\n\ttestdb=# select a docnum, (sfv * logidf) tf_idf \n\t\t from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n\t\t       from corpus) foo, corpus order by docnum;\n\n  docnum |                tf_idf                                     \n  -------+---------------------------------------------------------------\n       1 | {4,1,1,1,2,3,1,2,1,1,1,1}:{0,0.69,0.28,0,0.69,0,1.38,0,0.28,0,1.38,0}\n       2 | {1,3,1,1,1,1,6,1,1,3}:{1.38,0,0.69,0.28,1.38,0.69,0,1.38,0.57,0}\n       3 | {2,2,5,1,2,1,1,2,1,1,1}:{0,1.38,0,0.69,1.38,0,1.38,0,0.69,0,1.38}\n       4 | {1,1,3,1,2,2,5,1,1,2}:{0,1.38,0,0.57,0,0.69,0,0.57,0.69,0}\n\n    We can now get the \"angular distance\" between one document and the rest \n    of the documents using the ACOS of the dot product of the document vectors:\n\n\ttestdb=# create table weights as \n\t\t    (select a docnum, (sfv * logidf) tf_idf \n\t\t     from (select log(count(sfv)/vec_count_nonzero(sfv)) logidf \n\t\t     \t   from corpus) foo, corpus order by docnum) \n\t         distributed randomly ;\n\n    The following calculates the angular distance between the first document \n    and each of the other documents:\n\n\ttestdb=# select docnum,180.*(ACOS(dmin(1.,(tf_idf%*%testdoc)/(l2norm(tf_idf)*l2norm(testdoc))))/3.141592654) angular_distance \n\t\t from weights,(select tf_idf testdoc from weights where docnum = 1 LIMIT 1) foo \n\t\t order by 1;\n\n \tdocnum | angular_distance \n       --------+------------------\n             1 |                0\n             2 | 78.8235846096986\n             3 | 89.9999999882484\n             4 | 80.0232034288617\n\n    We can see that the angular distance between document 1 and itself \n    is 0 degrees and between document 1 and 3 is 90 degrees because they \n    share no features at all. The angular distance can now be plugged into\n    machine learning algorithms that rely on a distance measure between\n    points.\n\n    Other extensive examples of svecs usage can be found in the k-means\n    module.\n\n\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/src/pg_gp/sparse_vector.h", "lines": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "matched_text": "/*! \\defgroup sparse_vectors"}, {"satd_id": 23568720, "satd_repo": 42763345, "satd_sha": "7266a48937d8a9589724bf0d54f1c0ec6f46e24b", "satd_text": " cleanup the string", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "madpy/madpack/migrations.py", "lines": [100], "matched_text": "            # cleanup the string"}, {"satd_id": 23568722, "satd_repo": 42763345, "satd_sha": "5dbe3db4f145d91ce531dd56016edb62bcc235f4", "satd_text": "\n * Sometimes we wish to store an uncompressed array inside a SparseDataStruct;\n * instead of storing an array of ones [1,1,..,1,1] in the index field, which\n * is wasteful, we choose to use index->data == NULL to represent this special \n * case. \n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/SparseData.h", "lines": [57, 58, 59, 60, 61, 62], "matched_text": "/*"}, {"satd_id": 23568730, "satd_repo": 42763345, "satd_sha": "4ed64c542246e6a88995b3b93fa45784c756c84f", "satd_text": "\n\t\t * If the left argument is {1}:{0}, this is the first call to \n\t\t * the routine, and we need a zero vector for the beginning \n\t\t * of the accumulation of the correct dimension.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [500, 501, 502, 503, 504], "matched_text": "\t\t/*"}, {"satd_id": 23568764, "satd_repo": 42763345, "satd_sha": "31ba57ddc15b9a6a7a6d8573deb5822f517859fd", "satd_text": "\n\t\t * If the left argument is a scalar, this is almost certainly \n\t\t * the first call to the routine, and we need a zero vector \n\t\t * for the beginning of the accumulation of the correct \n\t\t * dimension.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [509, 510, 511, 512, 513, 514], "matched_text": "\t\t/*"}, {"satd_id": 23568802, "satd_repo": 42763345, "satd_sha": "aa2cd0b690e0dc67f8911afd3c4f2cb7ba1a6ca6", "satd_text": "!\n * \\param hashval the MD5 hashe value that we take 16 bits at a time\n * \\param sketch the cmsketch\n * \\param initial the initialized return value\n * \\param lambdaptr the function to invoke on each 16 bits\n/*!\n * destructive increment lambda for hash_counters_iterate.  \n * transval and return val not of particular interest here.\n * \\param i which row to update\n * \\param col which column to update\n * \\param sketch the sketch\n * \\param transval we don't need transval here, but its part of the \n * lambda interface for hash_counters_iterate\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23568814, "satd_repo": 42763345, "satd_sha": "1bb4dac7c923bd35a026e1b53397adf2596fecf8", "satd_text": " clean up the config.mk    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "madpy/madpack/mkmethods.py", "lines": [32], "matched_text": "# clean up the config.mk    "}, {"satd_id": 23568877, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "doc/etc/developer.doxyfile", "lines": [453], "matched_text": "# The GENERATE_TODOLIST tag can be used to enable (YES) or "}, {"satd_id": 23568877, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "doc/etc/developer.doxyfile", "lines": [457], "matched_text": "GENERATE_TODOLIST      = YES"}, {"satd_id": 23568877, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/SparseData.c", "lines": [280], "matched_text": "//TODO"}, {"satd_id": 23568877, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [82], "matched_text": " * TODO:"}, {"satd_id": 23568877, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [493], "matched_text": " * TODO"}, {"satd_id": 23568960, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": " 64-bit special value ranges ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/float_specials.h", "lines": [55], "matched_text": "/* 64-bit special value ranges */"}, {"satd_id": 23568964, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n\t * On saving the state between calls:\n\t *\n\t * We want to create the hash table one time for each feature set and use it for\n\t * all subsequent calls to this routine for efficiency.  However, if another query\n\t * executor calls this routine, we don't want the hash table to be left over\n\t * from the previous query.\n\t *\n\t * We know that after each query is executed, the backend associated with the query\n\t * is sometimes re-used, so this will leave statically allocated elements around for\n\t * reuse, which we can not tolerate.\n\t *\n\t * However, if we use palloc then the allocations within the default memory context\n\t * should be cleared between queries, which allows us to allocate using palloc and\n\t * be confident that we won't be sharing those memory allocations between calls.\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "matched_text": "\t/*"}, {"satd_id": 23568973, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "Need to use malloc so that hdestroy() can be called.\nUse malloc because pallocs are cleaned up between queries", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [198, 199], "matched_text": "\t\tordinals    = (int *)malloc(sizeof(int)*num_features); //Need to use malloc so that hdestroy() can be called."}, {"satd_id": 23568976, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "matched_text": "/*"}, {"satd_id": 23568977, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n * \tgp_extract_feature_histogram\n * \tBy: Luke Lonergan, November 2009, Greenplum Inc.\n * \tCredits:\n * \t\tThis was motivated by discussions with Brian Dolan at FIM / MySpace\n *\n * \tApproach:\n * \t\tDefinitions:\n * \t\t  Feature Vector:\n * \t\t  A feature vector is a list of words, generally all of the possible choices of words.\n * \t\t  In other words, a feature vector is a dictionary and might have cardinality of 20,000 or so.\n *\n * \t\t  document:\n * \t\t  A document, here identifed using a list of words. Generally a document will consist of a\n * \t\t  set of words contained in the feature vector, but sometimes a document will contain words\n * \t\t  that are not in the feature vector.\n *\n * \t\t  Sparse Feature Vector (SFV):\n * \t\t  An SFV is an array of attributes defined for each feature found in a document.  For example,\n * \t\t  you might define an SFV where each attribute is a count of the number of instances of a\n * \t\t  feature is found in the document, with one entry per feature found in the document.\n *\n * \t\t  Example:\n * \t\t    Say we have a document defined as follows:\n * \t\t      document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\"some\",\"repeat\",\"repeat\"}\n * \t\t    And say we have a feature vector as follows:\n * \t\t      features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\"with\",\"some\",\"repeat\",\n * \t\t                  \"word1\",\"word2\",\"word3\"}\n *\n * \t\t    Now we'd like to create the SFV for document1.  We can number each feature starting at 1, so\n * \t\t    that feature(1) = foo, feature(2) = bar and so on.  The SFV of document1 would then be:\n * \t\t      sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t\t    Note that the position in the SFV array is the number of the feature vector and the attribute\n * \t\t    is the count of the number of features found in each position.\n *\n * \t\t  We would like to store the SFV in a terse representation that fits in a small amount of memory.\n * \t\t  We also want to be able to compare the number of instances where the SFV of one document intersects\n * \t\t  another.  This routine uses the Sparse Vector datatype to store the SFV.\n *\n * \tLicense: Use of this code is restricted to those with explicit authorization from Greenplum.\n * \t\t All rights to this code are asserted.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "matched_text": "/*"}, {"satd_id": 23568985, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n * Aggregate function svec_pivot takes its float8 argument and appends it\n * to the state variable (an svec) to produce the concatenated return variable.\n * The StringInfo variables within the state variable svec are used in a way\n * that minimizes the number of memory re-allocations.\n *\n * Note that the first time this is called, the state variable should be null.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108], "matched_text": "/*"}, {"satd_id": 23568994, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n\t\t\t * If the left argument is a scalar, this is almost certainly the\n\t\t\t * first call to the routine, and we need a zero vector for the\n\t\t\t * beginning of the accumulation of the correct dimension.\n\t\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [472, 473, 474, 475, 476], "matched_text": "\t\t\t/*"}, {"satd_id": 23569020, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n\t * Allocate memory for the temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1297, 1298, 1299], "matched_text": "\t/*"}, {"satd_id": 23569035, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n\t * Free temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1337, 1338, 1339], "matched_text": "\t/*"}, {"satd_id": 23569044, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": " do when there is no more left ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [483], "matched_text": "                /* do when there is no more left */"}, {"satd_id": 23569047, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n * TODO\n *\n * \"R\" basic matrix routines\n * \tFrom: file:///opt/local/var/macports/software/R/2.6.2_0/opt/local/lib/R/doc/manual/R-intro.html\n * \t\tThe function crossprod() forms \u201ccrossproducts\u201d, meaning that crossprod(X, y) is the\n * \t\tsame as t(X) %*% y but the operation is more efficient. If the second argument to\n * \t\tcrossprod() is omitted it is taken to be the same as the first.\n *\n * \t\tThe meaning of diag() depends on its argument. diag(v), where v is a vector, gives\n * \t\ta diagonal matrix with elements of the vector as the diagonal entries. On the other\n * \t\thand diag(M), where M is a matrix, gives the vector of main diagonal entries of M.\n * \t\tThis is the same convention as that used for diag() in Matlab. Also, somewhat\n * \t\tconfusingly, if k is a single numeric value then diag(k) is the k by k identity matrix!\n *\n * \t\t5.7.2 Linear equations and inversion\n *\n * \t\tSolving linear equations is the inverse of matrix multiplication. When after\n *      \t\t> b <- A %*% x\n *      \tonly A and b are given, the vector x is the solution of that linear equation system. In R,\n *           \t\t> solve(A,b)\n *           \tsolves the system, returning x (up to some accuracy loss). Note that in linear algebra,\n *           \tformally x = A^{-1} %*% b where A^{-1} denotes the inverse of A, which can be computed by\n *              solve(A) but rarely is needed. Numerically, it is both inefficient and potentially unstable\n *              to compute x <- solve(A) %*% b instead of solve(A,b).\n *\n *              The quadratic form x %*% A^{-1} %*% x which is used in multivariate computations, should\n *              be computed by something like16 x %*% solve(A,x), rather than computing the inverse of A.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "matched_text": "/*"}, {"satd_id": 23569065, "satd_repo": 42763345, "satd_sha": "405e7787520e83b3e624557d2e3c37790b2f0731", "satd_text": "\n\t\t * Trim the extra space off of the StringInfo dynamic strings\n\t\t * before serializing the SparseData\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [325, 326, 327, 328], "matched_text": "\t\t/*"}, {"satd_id": 23569088, "satd_repo": 42763345, "satd_sha": "86386abfe2661789596f50da4ebfd01f5b920259", "satd_text": " XXXX TODO: copy Config.yml to scripts when synthesizing script!\n XXXX TODO: sanity() method to compare scripts and DB.\n XXXX TODO: remove explicit use of \"madlib\" schema from method scripts\n XXXX TODO: multiple migrations for single version?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "madpy/madpack/migrations.py", "lines": [1, 2, 3, 4], "matched_text": "# XXXX TODO: copy Config.yml to scripts when synthesizing script!"}, {"satd_id": 23569154, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "doc/etc/developer.doxyfile", "lines": [453], "matched_text": "# The GENERATE_TODOLIST tag can be used to enable (YES) or "}, {"satd_id": 23569154, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "doc/etc/developer.doxyfile", "lines": [457], "matched_text": "GENERATE_TODOLIST      = YES"}, {"satd_id": 23569154, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/SparseData.c", "lines": [280], "matched_text": "//TODO"}, {"satd_id": 23569154, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [82], "matched_text": " * TODO:"}, {"satd_id": 23569154, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [484], "matched_text": " * TODO"}, {"satd_id": 23569237, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": " 64-bit special value ranges ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/float_specials.h", "lines": [55], "matched_text": "/* 64-bit special value ranges */"}, {"satd_id": 23569241, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n\t * On saving the state between calls:\n\t *\n\t * We want to create the hash table one time for each feature set and use it for\n\t * all subsequent calls to this routine for efficiency.  However, if another query\n\t * executor calls this routine, we don't want the hash table to be left over\n\t * from the previous query.\n\t *\n\t * We know that after each query is executed, the backend associated with the query\n\t * is sometimes re-used, so this will leave statically allocated elements around for\n\t * reuse, which we can not tolerate.\n\t *\n\t * However, if we use palloc then the allocations within the default memory context\n\t * should be cleared between queries, which allows us to allocate using palloc and\n\t * be confident that we won't be sharing those memory allocations between calls.\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "matched_text": "\t/*"}, {"satd_id": 23569250, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "Need to use malloc so that hdestroy() can be called.\nUse malloc because pallocs are cleaned up between queries", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [198, 199], "matched_text": "\t\tordinals    = (int *)malloc(sizeof(int)*num_features); //Need to use malloc so that hdestroy() can be called."}, {"satd_id": 23569253, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "matched_text": "/*"}, {"satd_id": 23569254, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n * \tgp_extract_feature_histogram\n * \tBy: Luke Lonergan, November 2009, Greenplum Inc.\n * \tCredits:\n * \t\tThis was motivated by discussions with Brian Dolan at FIM / MySpace\n *\n * \tApproach:\n * \t\tDefinitions:\n * \t\t  Feature Vector:\n * \t\t  A feature vector is a list of words, generally all of the possible choices of words.\n * \t\t  In other words, a feature vector is a dictionary and might have cardinality of 20,000 or so.\n *\n * \t\t  document:\n * \t\t  A document, here identifed using a list of words. Generally a document will consist of a\n * \t\t  set of words contained in the feature vector, but sometimes a document will contain words\n * \t\t  that are not in the feature vector.\n *\n * \t\t  Sparse Feature Vector (SFV):\n * \t\t  An SFV is an array of attributes defined for each feature found in a document.  For example,\n * \t\t  you might define an SFV where each attribute is a count of the number of instances of a\n * \t\t  feature is found in the document, with one entry per feature found in the document.\n *\n * \t\t  Example:\n * \t\t    Say we have a document defined as follows:\n * \t\t      document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\"some\",\"repeat\",\"repeat\"}\n * \t\t    And say we have a feature vector as follows:\n * \t\t      features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\"with\",\"some\",\"repeat\",\n * \t\t                  \"word1\",\"word2\",\"word3\"}\n *\n * \t\t    Now we'd like to create the SFV for document1.  We can number each feature starting at 1, so\n * \t\t    that feature(1) = foo, feature(2) = bar and so on.  The SFV of document1 would then be:\n * \t\t      sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t\t    Note that the position in the SFV array is the number of the feature vector and the attribute\n * \t\t    is the count of the number of features found in each position.\n *\n * \t\t  We would like to store the SFV in a terse representation that fits in a small amount of memory.\n * \t\t  We also want to be able to compare the number of instances where the SFV of one document intersects\n * \t\t  another.  This routine uses the Sparse Vector datatype to store the SFV.\n *\n * \tLicense: Use of this code is restricted to those with explicit authorization from Greenplum.\n * \t\t All rights to this code are asserted.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "matched_text": "/*"}, {"satd_id": 23569262, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n * Aggregate function svec_pivot takes its float8 argument and appends it\n * to the state variable (an svec) to produce the concatenated return variable.\n * The StringInfo variables within the state variable svec are used in a way\n * that minimizes the number of memory re-allocations.\n *\n * Note that the first time this is called, the state variable should be null.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100], "matched_text": "/*"}, {"satd_id": 23569271, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n\t\t\t * If the left argument is a scalar, this is almost certainly the\n\t\t\t * first call to the routine, and we need a zero vector for the\n\t\t\t * beginning of the accumulation of the correct dimension.\n\t\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [464, 465, 466, 467, 468], "matched_text": "\t\t\t/*"}, {"satd_id": 23569297, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n\t * Allocate memory for the temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1289, 1290, 1291], "matched_text": "\t/*"}, {"satd_id": 23569313, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n\t * Free temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1329, 1330, 1331], "matched_text": "\t/*"}, {"satd_id": 23569321, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": " do when there is no more left ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [474], "matched_text": "                /* do when there is no more left */"}, {"satd_id": 23569324, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n * TODO\n *\n * \"R\" basic matrix routines\n * \tFrom: file:///opt/local/var/macports/software/R/2.6.2_0/opt/local/lib/R/doc/manual/R-intro.html\n * \t\tThe function crossprod() forms \u201ccrossproducts\u201d, meaning that crossprod(X, y) is the\n * \t\tsame as t(X) %*% y but the operation is more efficient. If the second argument to\n * \t\tcrossprod() is omitted it is taken to be the same as the first.\n *\n * \t\tThe meaning of diag() depends on its argument. diag(v), where v is a vector, gives\n * \t\ta diagonal matrix with elements of the vector as the diagonal entries. On the other\n * \t\thand diag(M), where M is a matrix, gives the vector of main diagonal entries of M.\n * \t\tThis is the same convention as that used for diag() in Matlab. Also, somewhat\n * \t\tconfusingly, if k is a single numeric value then diag(k) is the k by k identity matrix!\n *\n * \t\t5.7.2 Linear equations and inversion\n *\n * \t\tSolving linear equations is the inverse of matrix multiplication. When after\n *      \t\t> b <- A %*% x\n *      \tonly A and b are given, the vector x is the solution of that linear equation system. In R,\n *           \t\t> solve(A,b)\n *           \tsolves the system, returning x (up to some accuracy loss). Note that in linear algebra,\n *           \tformally x = A^{-1} %*% b where A^{-1} denotes the inverse of A, which can be computed by\n *              solve(A) but rarely is needed. Numerically, it is both inefficient and potentially unstable\n *              to compute x <- solve(A) %*% b instead of solve(A,b).\n *\n *              The quadratic form x %*% A^{-1} %*% x which is used in multivariate computations, should\n *              be computed by something like16 x %*% solve(A,x), rather than computing the inverse of A.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "matched_text": "/*"}, {"satd_id": 23569342, "satd_repo": 42763345, "satd_sha": "280fb581937fc8b146672fb86e40b25f97d894b7", "satd_text": "\n\t\t * Trim the extra space off of the StringInfo dynamic strings\n\t\t * before serializing the SparseData\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [316, 317, 318, 319], "matched_text": "\t\t/*"}, {"satd_id": 23569382, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/SparseData.c", "lines": [280], "matched_text": "//TODO"}, {"satd_id": 23569382, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [82], "matched_text": " * TODO:"}, {"satd_id": 23569382, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [484], "matched_text": " * TODO"}, {"satd_id": 23569458, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": " 64-bit special value ranges ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/float_specials.h", "lines": [55], "matched_text": "/* 64-bit special value ranges */"}, {"satd_id": 23569462, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n\t * On saving the state between calls:\n\t *\n\t * We want to create the hash table one time for each feature set and use it for\n\t * all subsequent calls to this routine for efficiency.  However, if another query\n\t * executor calls this routine, we don't want the hash table to be left over\n\t * from the previous query.\n\t *\n\t * We know that after each query is executed, the backend associated with the query\n\t * is sometimes re-used, so this will leave statically allocated elements around for\n\t * reuse, which we can not tolerate.\n\t *\n\t * However, if we use palloc then the allocations within the default memory context\n\t * should be cleared between queries, which allows us to allocate using palloc and\n\t * be confident that we won't be sharing those memory allocations between calls.\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "matched_text": "\t/*"}, {"satd_id": 23569471, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "Need to use malloc so that hdestroy() can be called.\nUse malloc because pallocs are cleaned up between queries", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [198, 199], "matched_text": "\t\tordinals    = (int *)malloc(sizeof(int)*num_features); //Need to use malloc so that hdestroy() can be called."}, {"satd_id": 23569474, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "matched_text": "/*"}, {"satd_id": 23569475, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n * \tgp_extract_feature_histogram\n * \tBy: Luke Lonergan, November 2009, Greenplum Inc.\n * \tCredits:\n * \t\tThis was motivated by discussions with Brian Dolan at FIM / MySpace\n *\n * \tApproach:\n * \t\tDefinitions:\n * \t\t  Feature Vector:\n * \t\t  A feature vector is a list of words, generally all of the possible choices of words.\n * \t\t  In other words, a feature vector is a dictionary and might have cardinality of 20,000 or so.\n *\n * \t\t  document:\n * \t\t  A document, here identifed using a list of words. Generally a document will consist of a\n * \t\t  set of words contained in the feature vector, but sometimes a document will contain words\n * \t\t  that are not in the feature vector.\n *\n * \t\t  Sparse Feature Vector (SFV):\n * \t\t  An SFV is an array of attributes defined for each feature found in a document.  For example,\n * \t\t  you might define an SFV where each attribute is a count of the number of instances of a\n * \t\t  feature is found in the document, with one entry per feature found in the document.\n *\n * \t\t  Example:\n * \t\t    Say we have a document defined as follows:\n * \t\t      document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\"some\",\"repeat\",\"repeat\"}\n * \t\t    And say we have a feature vector as follows:\n * \t\t      features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\"with\",\"some\",\"repeat\",\n * \t\t                  \"word1\",\"word2\",\"word3\"}\n *\n * \t\t    Now we'd like to create the SFV for document1.  We can number each feature starting at 1, so\n * \t\t    that feature(1) = foo, feature(2) = bar and so on.  The SFV of document1 would then be:\n * \t\t      sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t\t    Note that the position in the SFV array is the number of the feature vector and the attribute\n * \t\t    is the count of the number of features found in each position.\n *\n * \t\t  We would like to store the SFV in a terse representation that fits in a small amount of memory.\n * \t\t  We also want to be able to compare the number of instances where the SFV of one document intersects\n * \t\t  another.  This routine uses the Sparse Vector datatype to store the SFV.\n *\n * \tLicense: Use of this code is restricted to those with explicit authorization from Greenplum.\n * \t\t All rights to this code are asserted.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "matched_text": "/*"}, {"satd_id": 23569483, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n * Aggregate function svec_pivot takes its float8 argument and appends it\n * to the state variable (an svec) to produce the concatenated return variable.\n * The StringInfo variables within the state variable svec are used in a way\n * that minimizes the number of memory re-allocations.\n *\n * Note that the first time this is called, the state variable should be null.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "matched_text": "/*"}, {"satd_id": 23569492, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n\t\t\t * If the left argument is a scalar, this is almost certainly the\n\t\t\t * first call to the routine, and we need a zero vector for the\n\t\t\t * beginning of the accumulation of the correct dimension.\n\t\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [418, 419, 420, 421, 422], "matched_text": "\t\t\t/*"}, {"satd_id": 23569518, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n\t * Allocate memory for the temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1243, 1244, 1245], "matched_text": "\t/*"}, {"satd_id": 23569534, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n\t * Free temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1283, 1284, 1285], "matched_text": "\t/*"}, {"satd_id": 23569542, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": " do when there is no more left ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [474], "matched_text": "                /* do when there is no more left */"}, {"satd_id": 23569545, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n * TODO\n *\n * \"R\" basic matrix routines\n * \tFrom: file:///opt/local/var/macports/software/R/2.6.2_0/opt/local/lib/R/doc/manual/R-intro.html\n * \t\tThe function crossprod() forms \u201ccrossproducts\u201d, meaning that crossprod(X, y) is the\n * \t\tsame as t(X) %*% y but the operation is more efficient. If the second argument to\n * \t\tcrossprod() is omitted it is taken to be the same as the first.\n *\n * \t\tThe meaning of diag() depends on its argument. diag(v), where v is a vector, gives\n * \t\ta diagonal matrix with elements of the vector as the diagonal entries. On the other\n * \t\thand diag(M), where M is a matrix, gives the vector of main diagonal entries of M.\n * \t\tThis is the same convention as that used for diag() in Matlab. Also, somewhat\n * \t\tconfusingly, if k is a single numeric value then diag(k) is the k by k identity matrix!\n *\n * \t\t5.7.2 Linear equations and inversion\n *\n * \t\tSolving linear equations is the inverse of matrix multiplication. When after\n *      \t\t> b <- A %*% x\n *      \tonly A and b are given, the vector x is the solution of that linear equation system. In R,\n *           \t\t> solve(A,b)\n *           \tsolves the system, returning x (up to some accuracy loss). Note that in linear algebra,\n *           \tformally x = A^{-1} %*% b where A^{-1} denotes the inverse of A, which can be computed by\n *              solve(A) but rarely is needed. Numerically, it is both inefficient and potentially unstable\n *              to compute x <- solve(A) %*% b instead of solve(A,b).\n *\n *              The quadratic form x %*% A^{-1} %*% x which is used in multivariate computations, should\n *              be computed by something like16 x %*% solve(A,x), rather than computing the inverse of A.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "matched_text": "/*"}, {"satd_id": 23569563, "satd_repo": 42763345, "satd_sha": "f782ac1d04aee0e485e8d764f87857c0b4812958", "satd_text": "\n\t\t * Trim the extra space off of the StringInfo dynamic strings\n\t\t * before serializing the SparseData\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [316, 317, 318, 319], "matched_text": "\t\t/*"}, {"satd_id": 23569619, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/SparseData.c", "lines": [280], "matched_text": "//TODO"}, {"satd_id": 23569619, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [82], "matched_text": " * TODO:"}, {"satd_id": 23569619, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "TODO", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [464], "matched_text": " * TODO"}, {"satd_id": 23569695, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": " 64-bit special value ranges ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/float_specials.h", "lines": [55], "matched_text": "/* 64-bit special value ranges */"}, {"satd_id": 23569699, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n\t * On saving the state between calls:\n\t *\n\t * We want to create the hash table one time for each feature set and use it for\n\t * all subsequent calls to this routine for efficiency.  However, if another query\n\t * executor calls this routine, we don't want the hash table to be left over\n\t * from the previous query.\n\t *\n\t * We know that after each query is executed, the backend associated with the query\n\t * is sometimes re-used, so this will leave statically allocated elements around for\n\t * reuse, which we can not tolerate.\n\t *\n\t * However, if we use palloc then the allocations within the default memory context\n\t * should be cleared between queries, which allows us to allocate using palloc and\n\t * be confident that we won't be sharing those memory allocations between calls.\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "matched_text": "\t/*"}, {"satd_id": 23569708, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "Need to use malloc so that hdestroy() can be called.\nUse malloc because pallocs are cleaned up between queries", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [198, 199], "matched_text": "\t\tordinals    = (int *)malloc(sizeof(int)*num_features); //Need to use malloc so that hdestroy() can be called."}, {"satd_id": 23569711, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n * Notes from Brian Dolan on how this feature vector is commonly used:\n *\n * The actual count is hardly ever used.  Insead, it's turned into a weight.  The most\n * common weight is called tf/idf for \"Term Frequency / Inverse Document Frequency\".\n * The calculation for a given term in a given document is:\n * \t{#Times in this document} * log {#Documents / #Documents  the term appears in}\n * For instance, the term \"document\" in document A would have weight 1 * log (4/3).  In\n * document D it would have weight 2 * log (4/3).\n * Terms that appear in every document would have tf/idf weight 0, since:\n * \tlog (4/4) = log(1) = 0.  (Our example has no term like that.) \n * That usually sends a lot of values to 0.\n *\n * In this function we're just calculating the term:\n * \tlog {#Documents / #Documents  the term appears in}\n * as an Svec.\n *\n * We'll need to have the following arguments:\n * \tSvec *count_corpus           //count of documents in which each feature is found\n * \tfloat8 *document_count      //count of all documents in corpus\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "matched_text": "/*"}, {"satd_id": 23569712, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n * \tgp_extract_feature_histogram\n * \tBy: Luke Lonergan, November 2009, Greenplum Inc.\n * \tCredits:\n * \t\tThis was motivated by discussions with Brian Dolan at FIM / MySpace\n *\n * \tApproach:\n * \t\tDefinitions:\n * \t\t  Feature Vector:\n * \t\t  A feature vector is a list of words, generally all of the possible choices of words.\n * \t\t  In other words, a feature vector is a dictionary and might have cardinality of 20,000 or so.\n *\n * \t\t  document:\n * \t\t  A document, here identifed using a list of words. Generally a document will consist of a\n * \t\t  set of words contained in the feature vector, but sometimes a document will contain words\n * \t\t  that are not in the feature vector.\n *\n * \t\t  Sparse Feature Vector (SFV):\n * \t\t  An SFV is an array of attributes defined for each feature found in a document.  For example,\n * \t\t  you might define an SFV where each attribute is a count of the number of instances of a\n * \t\t  feature is found in the document, with one entry per feature found in the document.\n *\n * \t\t  Example:\n * \t\t    Say we have a document defined as follows:\n * \t\t      document1 = {\"this\",\"is\",\"an\",\"example\",\"sentence\",\"with\",\"some\",\"some\",\"repeat\",\"repeat\"}\n * \t\t    And say we have a feature vector as follows:\n * \t\t      features = {\"foo\",\"bar\",\"this\",\"is\",\"an\",\"baz\",\"example\",\"sentence\",\"with\",\"some\",\"repeat\",\n * \t\t                  \"word1\",\"word2\",\"word3\"}\n *\n * \t\t    Now we'd like to create the SFV for document1.  We can number each feature starting at 1, so\n * \t\t    that feature(1) = foo, feature(2) = bar and so on.  The SFV of document1 would then be:\n * \t\t      sfv(document1,features) = {0,0,1,1,1,0,1,1,1,2,2,0,0,0}\n * \t\t    Note that the position in the SFV array is the number of the feature vector and the attribute\n * \t\t    is the count of the number of features found in each position.\n *\n * \t\t  We would like to store the SFV in a terse representation that fits in a small amount of memory.\n * \t\t  We also want to be able to compare the number of instances where the SFV of one document intersects\n * \t\t  another.  This routine uses the Sparse Vector datatype to store the SFV.\n *\n * \tLicense: Use of this code is restricted to those with explicit authorization from Greenplum.\n * \t\t All rights to this code are asserted.\n *\n * Function Signature is:\n *\n * Where:\n * \tfeatures:\t\ta text array of features (words)\n *\tdocument:\t\tthe document, tokenized into words\n *\n * Returns:\n * \tSFV of the document with counts of each feature, stored in a Sparse Vector (svec) datatype\n *\n * TODO:\n * \tUse the built-in hash table structure instead of hsearch()\n * \t\tThe problem with hsearch is that it's not safe to use more than\n * \t\tone per process.  That means we currently can't do more than one document\n * \t\tclassification per query slice or we'll get the wrong results.\n *\t[DONE] Implement a better scheme for detecting whether we're in a new query since\n *\twe created the hash table.\n *\t\tRight now we write a key into palloc'ed memory and check to see\n *\t\tif it's the same value on reentry to the classification routine.\n *\t\tThis is a hack and may fail in certain circumstances.\n *\t\tA better approach uses the gp_session_id and gp_command_count\n *\t\tto determine if we're in the same query as the last time we were\n *\t\tcalled.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/gp_sfv.c", "lines": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "matched_text": "/*"}, {"satd_id": 23569720, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n * Aggregate function svec_pivot takes its float8 argument and appends it\n * to the state variable (an svec) to produce the concatenated return variable.\n * The StringInfo variables within the state variable svec are used in a way\n * that minimizes the number of memory re-allocations.\n *\n * Note that the first time this is called, the state variable should be null.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "matched_text": "/*"}, {"satd_id": 23569729, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n\t\t\t * If the left argument is a scalar, this is almost certainly the\n\t\t\t * first call to the routine, and we need a zero vector for the\n\t\t\t * beginning of the accumulation of the correct dimension.\n\t\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [418, 419, 420, 421, 422], "matched_text": "\t\t\t/*"}, {"satd_id": 23569755, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n\t * Allocate memory for the temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1243, 1244, 1245], "matched_text": "\t/*"}, {"satd_id": 23569771, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n\t * Free temporary variables\n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/operators.c", "lines": [1283, 1284, 1285], "matched_text": "\t/*"}, {"satd_id": 23569777, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": " do when there is no more left ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [454], "matched_text": "                /* do when there is no more left */"}, {"satd_id": 23569780, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n * TODO\n *\n * \"R\" basic matrix routines\n * \tFrom: file:///opt/local/var/macports/software/R/2.6.2_0/opt/local/lib/R/doc/manual/R-intro.html\n * \t\tThe function crossprod() forms \u201ccrossproducts\u201d, meaning that crossprod(X, y) is the\n * \t\tsame as t(X) %*% y but the operation is more efficient. If the second argument to\n * \t\tcrossprod() is omitted it is taken to be the same as the first.\n *\n * \t\tThe meaning of diag() depends on its argument. diag(v), where v is a vector, gives\n * \t\ta diagonal matrix with elements of the vector as the diagonal entries. On the other\n * \t\thand diag(M), where M is a matrix, gives the vector of main diagonal entries of M.\n * \t\tThis is the same convention as that used for diag() in Matlab. Also, somewhat\n * \t\tconfusingly, if k is a single numeric value then diag(k) is the k by k identity matrix!\n *\n * \t\t5.7.2 Linear equations and inversion\n *\n * \t\tSolving linear equations is the inverse of matrix multiplication. When after\n *      \t\t> b <- A %*% x\n *      \tonly A and b are given, the vector x is the solution of that linear equation system. In R,\n *           \t\t> solve(A,b)\n *           \tsolves the system, returning x (up to some accuracy loss). Note that in linear algebra,\n *           \tformally x = A^{-1} %*% b where A^{-1} denotes the inverse of A, which can be computed by\n *              solve(A) but rarely is needed. Numerically, it is both inefficient and potentially unstable\n *              to compute x <- solve(A) %*% b instead of solve(A,b).\n *\n *              The quadratic form x %*% A^{-1} %*% x which is used in multivariate computations, should\n *              be computed by something like16 x %*% solve(A,x), rather than computing the inverse of A.\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "matched_text": "/*"}, {"satd_id": 23569796, "satd_repo": 42763345, "satd_sha": "9935fac4b9378bfcf7a280986fe8ee2117778c00", "satd_text": "\n\t\t * Trim the extra space off of the StringInfo dynamic strings\n\t\t * before serializing the SparseData\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sparse_vectors/sparse_vector.c", "lines": [296, 297, 298, 299], "matched_text": "\t\t/*"}, {"satd_id": 23569831, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": "\n\t\t * Calculate the accumulation value for the classifier\n\t\t *\n\t\t * The logical calculation is: \n\t\t *     product((class[i]+1)/(total_data[i]+attr_count))\n\t\t *\n\t\t * Instead of this calculation we calculate:\n\t\t *     sum(ln((class[i]+1)/(total_data[i]+attr_count)))\n\t\t *\n\t\t * The reason for this is to increase the numerical stability of\n\t\t * the algorithm.\n\t\t *\n\t\t * Since the ln(0) is undefined we want to increment the count \n\t\t * for all classes. \n\t\t *\n\t\t * This get's a bit more complicated for the denominator which\n\t\t * needs to know how many values there are for this attribute\n\t\t * so that we keep the total probability for the attribute = 1.\n\t\t * To handle this the aggregation function should be passed the\n\t\t * number of distinct values for the aggregate it is computing.\n\t\t *\n\t\t * If for some reason this value is not present, or < 1 then we\n\t\t * just switch to non-adjusted calculations.  In this case we \n\t\t * will simply skip over any row that has a 0 count on any \n\t\t * class_data index. (handled above)\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "matched_text": "\t\t/*"}, {"satd_id": 23569834, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " \n\t * When called correctly nb_classify should never fill in the state\n\t * tuple with any invalid values, but if a user is calling the\n\t * functions by hand for some reason then something may be funny \n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [434, 435, 436, 437, 438], "matched_text": "\t/* "}, {"satd_id": 23569855, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [416], "matched_text": "\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23569855, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [461], "matched_text": "\t\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23569855, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [465], "matched_text": "\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23569882, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " may need better lbound handling? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [191], "matched_text": "\tARR_LBOUND(result)[0] = 1;       /* may need better lbound handling? */"}, {"satd_id": 23569882, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " may need better lbound handling? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [191], "matched_text": "\tARR_LBOUND(result)[0] = 1;       /* may need better lbound handling? */"}, {"satd_id": 23569883, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " Otherwise we have a more complicated data reshuffle ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [96], "matched_text": "\t/* Otherwise we have a more complicated data reshuffle */"}, {"satd_id": 23569883, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " Otherwise we have a more complicated data reshuffle ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [96], "matched_text": "\t/* Otherwise we have a more complicated data reshuffle */"}, {"satd_id": 23569884, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " Completely useless code that fixes compiler warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [347], "matched_text": "\t\t\t\t/* Completely useless code that fixes compiler warnings */"}, {"satd_id": 23569884, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " Completely useless code that fixes compiler warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [347], "matched_text": "\t\t\t\t/* Completely useless code that fixes compiler warnings */"}, {"satd_id": 23569903, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": "\n * For unpivot to behave correctly it needs to be able to return multiple\n * columns of an anonymous type, which currently would generate the error:\n *  'function returning record called in context that cannot accept type record'\n * This should be fixable once we implement LATERAL and can then hopefully make\n * use of unpivot in a way that makes sense.\n *\n * In the meantime unnest can be used to mimic unpivot behavior via:\n *   SELECT unnest(ARRAY['label 1', 'label 2', ...]),\n *          unnest(ARRAY[1,2,...]);\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "matched_text": "/*"}, {"satd_id": 23569915, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " FIXME: The following function are Greenplum internal functions. We should\n * probably drop them in MADlib. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [23, 24], "matched_text": "/* FIXME: The following function are Greenplum internal functions. We should"}, {"satd_id": 23569924, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " Fixes complier warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [264], "matched_text": "\t\t\t\telsize = 0;  /* Fixes complier warnings */"}, {"satd_id": 23569926, "satd_repo": 42763345, "satd_sha": "c96352db2396bf640cde30406b5bcbe3fc3bf7f5", "satd_text": " \n\t\t * could probably be more efficient for fixed length arrays, but\n\t\t * they would still require adjustments for nulls.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [79, 80, 81, 82], "matched_text": "\t\t/* "}, {"satd_id": 23569965, "satd_repo": 42763345, "satd_sha": "a30d6ba30315db1896a0973e04c1b1463dc02962", "satd_text": " may need better lbound handling? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [191], "matched_text": "\tARR_LBOUND(result)[0] = 1;       /* may need better lbound handling? */"}, {"satd_id": 23569966, "satd_repo": 42763345, "satd_sha": "a30d6ba30315db1896a0973e04c1b1463dc02962", "satd_text": " Otherwise we have a more complicated data reshuffle ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [96], "matched_text": "\t/* Otherwise we have a more complicated data reshuffle */"}, {"satd_id": 23569967, "satd_repo": 42763345, "satd_sha": "a30d6ba30315db1896a0973e04c1b1463dc02962", "satd_text": " Completely useless code that fixes compiler warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/matrix.c", "lines": [347], "matched_text": "\t\t\t\t/* Completely useless code that fixes compiler warnings */"}, {"satd_id": 23569989, "satd_repo": 42763345, "satd_sha": "7d89a11c8d8375831a6e5d1d4c1ce296f685914f", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [416], "matched_text": "\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23569993, "satd_repo": 42763345, "satd_sha": "7d89a11c8d8375831a6e5d1d4c1ce296f685914f", "satd_text": " FIXME: The following function are Greenplum internal functions. We should\n * probably drop them in MADlib. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [23, 24], "matched_text": "/* FIXME: The following function are Greenplum internal functions. We should"}, {"satd_id": 23569999, "satd_repo": 42763345, "satd_sha": "17c1ee1de5622cf1c409bfc1f929511d67ad6ce8", "satd_text": "\n * For unpivot to behave correctly it needs to be able to return multiple\n * columns of an anonymous type, which currently would generate the error:\n *  'function returning record called in context that cannot accept type record'\n * This should be fixable once we implement LATERAL and can then hopefully make\n * use of unpivot in a way that makes sense.\n *\n * In the meantime unnest can be used to mimic unpivot behavior via:\n *   SELECT unnest(ARRAY['label 1', 'label 2', ...]),\n *          unnest(ARRAY[1,2,...]);\n *\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "matched_text": "/*"}, {"satd_id": 23570018, "satd_repo": 42763345, "satd_sha": "17c1ee1de5622cf1c409bfc1f929511d67ad6ce8", "satd_text": " Fixes complier warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [248], "matched_text": "\t\t\t\telsize = 0;  /* Fixes complier warnings */"}, {"satd_id": 23570020, "satd_repo": 42763345, "satd_sha": "17c1ee1de5622cf1c409bfc1f929511d67ad6ce8", "satd_text": " \n\t\t * could probably be more efficient for fixed length arrays, but\n\t\t * they would still require adjustments for nulls.\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/pivot.c", "lines": [63, 64, 65, 66], "matched_text": "\t\t/* "}, {"satd_id": 23570031, "satd_repo": 42763345, "satd_sha": "9f39cdcb5efef021ce6a54d4b2d3ecd00924fea2", "satd_text": "\n\t\t * Calculate the accumulation value for the classifier\n\t\t *\n\t\t * The logical calculation is: \n\t\t *     product((class[i]+1)/(total_data[i]+attr_count))\n\t\t *\n\t\t * Instead of this calculation we calculate:\n\t\t *     sum(ln((class[i]+1)/(total_data[i]+attr_count)))\n\t\t *\n\t\t * The reason for this is to increase the numerical stability of\n\t\t * the algorithm.\n\t\t *\n\t\t * Since the ln(0) is undefined we want to increment the count \n\t\t * for all classes. \n\t\t *\n\t\t * This get's a bit more complicated for the denominator which\n\t\t * needs to know how many values there are for this attribute\n\t\t * so that we keep the total probability for the attribute = 1.\n\t\t * To handle this the aggregation function should be passed the\n\t\t * number of distinct values for the aggregate it is computing.\n\t\t *\n\t\t * If for some reason this value is not present, or < 1 then we\n\t\t * just switch to non-adjusted calculations.  In this case we \n\t\t * will simply skip over any row that has a 0 count on any \n\t\t * class_data index. (handled above)\n\t\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "matched_text": "\t\t/*"}, {"satd_id": 23570034, "satd_repo": 42763345, "satd_sha": "9f39cdcb5efef021ce6a54d4b2d3ecd00924fea2", "satd_text": " \n\t * When called correctly nb_classify should never fill in the state\n\t * tuple with any invalid values, but if a user is calling the\n\t * functions by hand for some reason then something may be funny \n\t ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/bayes/src/extended_sql/pg_gp/bayes.c", "lines": [363, 364, 365, 366, 367], "matched_text": "\t/* "}, {"satd_id": 23570174, "satd_repo": 42763345, "satd_sha": "601dcc4c0bb73058d269b5c851fe52e2688d25d1", "satd_text": " Note: lgamma is not thread-safe! See man page. ", "satd_label": "Requirement-SATD", "satd_label_short": "req", "file": "methods/regress/src/pg_gp/student.c", "lines": [39], "matched_text": "\t/* Note: lgamma is not thread-safe! See man page. */"}, {"satd_id": 23570193, "satd_repo": 42763345, "satd_sha": "601dcc4c0bb73058d269b5c851fe52e2688d25d1", "satd_text": " PRECISION = precision of IEEE 754 double precision (80 bit), which is\n\t * PRECISION = 2^{-52}. This is the ratio of two consecutive numbers in\n\t * double precision floating-point arithmetic. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/student.c", "lines": [85, 86, 87], "matched_text": "\t/* PRECISION = precision of IEEE 754 double precision (80 bit), which is"}, {"satd_id": 23570270, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " Define this `volatile' if your compiler thinks\n * that floating point arithmetic obeys the associative\n * and distributive laws.  It will defeat some optimizations\n * (but probably not enough of them).\n *\n * #define VOLATILE volatile\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/cephes/mconf.h", "lines": [152, 153, 154, 155, 156, 157, 158], "matched_text": "/* Define this `volatile' if your compiler thinks"}, {"satd_id": 23570328, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " may need better lbound handling? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [178], "matched_text": "\tARR_LBOUND(result)[0] = 1;       /* may need better lbound handling? */"}, {"satd_id": 23570329, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " Otherwise we have a more complicated data reshuffle ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [84], "matched_text": "\t/* Otherwise we have a more complicated data reshuffle */"}, {"satd_id": 23570331, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " Completely useless code that fixes compiler warnings ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/matrix.c", "lines": [333], "matched_text": "\t\t\t\t/* Completely useless code that fixes compiler warnings */"}, {"satd_id": 23570384, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " redundant: Xty transposed ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [20], "matched_text": "\tArrayType\t*_Xty_t;\t/* redundant: Xty transposed */"}, {"satd_id": 23570391, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " We should be strict, but it doesn't hurt to be paranoid ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [51], "matched_text": "\t/* We should be strict, but it doesn't hurt to be paranoid */"}, {"satd_id": 23570391, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " We should be strict, but it doesn't hurt to be paranoid ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [163], "matched_text": "\t/* We should be strict, but it doesn't hurt to be paranoid */"}, {"satd_id": 23570402, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [416], "matched_text": "\t\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23570402, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " we clean up anything we allocated ourselves ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [420], "matched_text": "\t/* we clean up anything we allocated ourselves */"}, {"satd_id": 23570403, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " It is an error if the number of indepent variables is not constant ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [120], "matched_text": "\t/* It is an error if the number of indepent variables is not constant */"}, {"satd_id": 23570409, "satd_repo": 42763345, "satd_sha": "f4180724b8f12f3d39123c1f2fcd4e6df53f8028", "satd_text": " redundant: pseudo-inverse of XtX ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/regress/src/pg_gp/regress.c", "lines": [22], "matched_text": "\tArrayType\t*_XtX_inv;\t/* redundant: pseudo-inverse of XtX */"}, {"satd_id": 23570434, "satd_repo": 42763345, "satd_sha": "ba011eb7657a34e7b0ee8222ffc3992b12231230", "satd_text": "\n * the transition value struct for the cmsketch aggregate.  Holds the sketch counters\n * and a cache of handy metadata that we'll reuse across calls\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.h", "lines": [27, 28, 29, 30], "matched_text": "/*"}, {"satd_id": 23570448, "satd_repo": 42763345, "satd_sha": "ba011eb7657a34e7b0ee8222ffc3992b12231230", "satd_text": " \n         * initialize mfvtransval, using palloc0 to zero it out.\n         * if typlen is positive (fixed), size chosen large enough to hold \n         * one 3x the length (on the theory that 2^8=256 takes 3 chars as a string).\n         * Else we'll do a conservative estimate of 8 bytes (=24 chars), and repalloc as needed.\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/mfvsketch.c", "lines": [69, 70, 71, 72, 73, 74], "matched_text": "        /* "}, {"satd_id": 23570451, "satd_repo": 42763345, "satd_sha": "ba011eb7657a34e7b0ee8222ffc3992b12231230", "satd_text": "\n * scalar function taking an mfv sketch, returning an array of tuple types\n * for its most frequent values.  \n * XXX this code is under development and not working, should not be used.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/mfvsketch.c", "lines": [255, 256, 257, 258, 259], "matched_text": "/*"}, {"satd_id": 23570459, "satd_repo": 42763345, "satd_sha": "ba011eb7657a34e7b0ee8222ffc3992b12231230", "satd_text": "\n * scalar function taking an mfv sketch, returning a string with\n * of its most frequent values\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/mfvsketch.c", "lines": [210, 211, 212, 213], "matched_text": "/*"}, {"satd_id": 23570479, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": " XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [821], "matched_text": "\t/* XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? */"}, {"satd_id": 23570484, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n * scalar function taking an mfv sketch, returning an array\n * of its most frequent values\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [711, 712, 713, 714], "matched_text": "/*"}, {"satd_id": 23570501, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [150, 151, 152, 153], "matched_text": "    /*"}, {"satd_id": 23570501, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [296, 297, 298, 299], "matched_text": "   /*"}, {"satd_id": 23570513, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": " XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [821], "matched_text": "\t/* XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? */"}, {"satd_id": 23570518, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n * scalar function taking an mfv sketch, returning an array\n * of its most frequent values\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [711, 712, 713, 714], "matched_text": "/*"}, {"satd_id": 23570535, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [150, 151, 152, 153], "matched_text": "    /*"}, {"satd_id": 23570535, "satd_repo": 42763345, "satd_sha": "6b215e4a798b6e1f151bdef54d4d25d0d96f0333", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [296, 297, 298, 299], "matched_text": "   /*"}, {"satd_id": 23570545, "satd_repo": 42763345, "satd_sha": "48e87f59e93c861db30f8a812ea5aaebcb958180", "satd_text": "\n * scalar function taking an mfv sketch, returning an array\n * of its most frequent values\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [711, 712, 713, 714], "matched_text": "/*"}, {"satd_id": 23570551, "satd_repo": 42763345, "satd_sha": "48e87f59e93c861db30f8a812ea5aaebcb958180", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [150, 151, 152, 153], "matched_text": "    /*"}, {"satd_id": 23570551, "satd_repo": 42763345, "satd_sha": "48e87f59e93c861db30f8a812ea5aaebcb958180", "satd_text": "\n    * This function makes destructive updates to its arguments.\n    * Make sure it's being called in an agg context.\n    ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/src/extended_sql/pg_gp/countmin.c", "lines": [296, 297, 298, 299], "matched_text": "   /*"}, {"satd_id": 23570559, "satd_repo": 42763345, "satd_sha": "0b46d2354ca006696ddcfb41f7e38a39f8f17149", "satd_text": " XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "methods/sketch/postgresql/countmin.c", "lines": [690], "matched_text": "\t/* XXX Is it OK to go up to LONG_MAX?  Why LONG_MAX >> 1?? */"}, {"satd_id": 23570612, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": "\n * the transition value struct for the aggregate.  Holds the sketch counters\n * and a cache of handy metadata that we'll reuse across calls\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/postgresql/countmin.c", "lines": [60, 61, 62, 63], "matched_text": "/*"}, {"satd_id": 23570615, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": "\n * scalar function taking a sketch, min, max, and number of buckets.\n * produces an equi-width histogram of that many buckets\n * XXX NOTE would be easy to do an equi-depth histogram: just a bunch of centiles\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/postgresql/countmin.c", "lines": [478, 479, 480, 481, 482], "matched_text": "/*"}, {"satd_id": 23570621, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": "\n     * XXX WARNING: are there problems with unaligned access here?\n     * XXX I'm currently using copies rather than casting, which is inefficient,\n/* destructive increment lambda for hash_counters_iterate.  transval and return val not of particular interest here. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570628, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": "\n * a data structure to hold the constituent power-of-two ranges corresponding to\n * an arbitrary range.  E.g. 14-48 becomes [[14-15], [16-31], [32-47], [48-48]]\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/postgresql/countmin.c", "lines": [70, 71, 72, 73], "matched_text": "/*"}, {"satd_id": 23570629, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": " XXX Clean up below to pull string of type names ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/postgresql/countmin.c", "lines": [308], "matched_text": "        /* XXX Clean up below to pull string of type names */"}, {"satd_id": 23570630, "satd_repo": 42763345, "satd_sha": "0a318df314033b229676a335cb356cfc11e947db", "satd_text": "\n * for each row of the sketch, use the 16 bits starting at 2^i mod NUMCOUNTERS,\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/postgresql/countmin.c", "lines": [574, 575, 576], "matched_text": "/*"}, {"satd_id": 23570649, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " the transition value struct for the aggregate.  Holds the sketch counters\n and a cache of handy metadata that we'll reuse across calls", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [55, 56], "matched_text": "// the transition value struct for the aggregate.  Holds the sketch counters"}, {"satd_id": 23570656, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " scalar function taking a sketch, min, max, and number of buckets.\n produces an equi-width histogram of that many buckets\n XXX NOTE would be easy to do an equi-depth histogram: just a bunch of centiles", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [441, 442, 443], "matched_text": "// scalar function taking a sketch, min, max, and number of buckets."}, {"satd_id": 23570668, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " XXX would be nice to pfree the existing transblob, but pfree complains. ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [155], "matched_text": "        /* XXX would be nice to pfree the existing transblob, but pfree complains. */"}, {"satd_id": 23570676, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " a data structure to hold the constituent power-of-two ranges corresponding to\n an arbitrary range.  E.g. 14-48 becomes [[14-15], [16-31], [32-47], [48-48]]", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [63, 64], "matched_text": "// a data structure to hold the constituent power-of-two ranges corresponding to"}, {"satd_id": 23570679, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " \n * for each row of the sketch, use the 16 bits starting at 2^i mod NUMCOUNTERS, \n * and invoke the lambda on those 16 bits (which may destructively modify counters).\n", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [532, 533, 534], "matched_text": "/* "}, {"satd_id": 23570681, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " \n     * XXX WARNING: are there problems with unaligned access here? \n     * XXX I'm currently using copies rather than casting, which is inefficient, \n     * XXX but I was hoping memmove would deal with unaligned access in a portable way.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [542, 543, 544, 545, 546], "matched_text": "    /* "}, {"satd_id": 23570682, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " XXX Clean up below to pull string of type names", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [284], "matched_text": "        // XXX Clean up below to pull string of type names"}, {"satd_id": 23570683, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": " XXX Missing: most frequent values ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [506], "matched_text": "/* XXX Missing: most frequent values */"}, {"satd_id": 23570694, "satd_repo": 42763345, "satd_sha": "e03a0ac8dc5ab6717ef10fc11ef5bcb455abe09c", "satd_text": "\n * The POSTGRES code for md5 returns a bytea with a textual representation of the\n * md5 result.  We then convert it back into binary.\n * XXX The internal POSTGRES source code is actually converting from binary to the bytea\n *     so this is rather wasteful, but the internal code is marked static and unavailable here.\n * XXX In fact, the full cost right now is:\n * XXX -- outfunc converts internal type to CString\n * XXX -- here we convert CString to text, to call md5_bytea\n * XXX -- md5_bytea generates a byte array which it converts to hex text\n * XXX -- we then call binary_decode to convert back to the byte array.\n * XXX -- (alternatively we could call hex_to_bytes in sketch_support.c for the last step)\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "matched_text": "/*"}, {"satd_id": 23570696, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": " XXX ARITHMETIC ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [476], "matched_text": "        /* XXX ARITHMETIC */"}, {"satd_id": 23570710, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n     * char           typcategory;\n     * bool           typispreferred;\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [114, 115, 116, 117], "matched_text": "    /*"}, {"satd_id": 23570755, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n         * if this is the first call, initialize transval to hold a sortasort\n         * on the first call, we should have the empty string (if the agg was declared properly!)\n         * XXX is it better form to have the initial value be NULL??\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [109, 110, 111, 112, 113], "matched_text": "        /*"}, {"satd_id": 23570757, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n * initial size for a sortasort: we'll guess at 8 bytes per string.\n * sortasort will grow dynamically if we guessed too low\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [30, 31, 32, 33], "matched_text": "/*"}, {"satd_id": 23570765, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n             * XXXX would like to pfree the old transblob, but the memory allocator doesn't like it\n             * XXXX Meanwhile we know that this memory \"leak\" is of fixed size and will get\n             * XXXX deallocated \"soon\" when the memory context is destroyed.\n             ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [157, 158, 159, 160, 161], "matched_text": "            /*"}, {"satd_id": 23570771, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": " XXX THIS POINTER ARITHMETIC SHOULD BE HIDDEN BY A MACRO IN THE SORTASORT LIBRARY! ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [465], "matched_text": "        /* XXX THIS POINTER ARITHMETIC SHOULD BE HIDDEN BY A MACRO IN THE SORTASORT LIBRARY! */"}, {"satd_id": 23570777, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n             * we have room in sortabig\n             * one could imagine a more efficient (merge-based) sortasort merge,\n             * but for now we just copy the values from the smaller sortasort into\n             * the bigger one.\n             ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [373, 374, 375, 376, 377, 378], "matched_text": "            /*"}, {"satd_id": 23570788, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n         * if we've seen < MINVALS distinct values, place string into the sortasort\n         * XXXX Would be cleaner to try the sortasort insert and if it fails, then continue.\n         ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [130, 131, 132, 133], "matched_text": "        /*"}, {"satd_id": 23570789, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n     * 3rd argument: the Postgres hex text representation uses *two* 8-bit characters for each 8-bit byte.\n     * So the length of the digest is twice the length of a normal hash value.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [246, 247, 248, 249], "matched_text": "    /*"}, {"satd_id": 23570794, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": " could probably be more efficient doing this 32 or 64 bits at a time ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [429], "matched_text": "    /* could probably be more efficient doing this 32 or 64 bits at a time */"}, {"satd_id": 23570795, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n * Greenplum \"prefunc\": a function to merge 2 transvals computed at different machines.\n * For simple FM, this is trivial: just OR together the two arrays of bitmaps.\n * But we have to deal with cases where one or both transval is SMALL: i.e. it\n * holds a sortasort, not an FM sketch.\n *\n * XXX  TESTING: Ensure we exercise all branches!\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [326, 327, 328, 329, 330, 331, 332, 333], "matched_text": "/*"}, {"satd_id": 23570798, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n     * The POSTGRES code for md5 returns a bytea with a textual representation of the\n     * md5 result.  We then convert it back into binary.\n     * XXX The internal POSTGRES source code is actually converting from binary to the bytea\n     *     so this is rather wasteful, but the internal code is marked static and unavailable here.\n     * XXX In fact, the full cost right now is:\n     * XXX -- outfunc converts internal type to CString\n     * XXX -- here we convert CString to text, to call md5_bytea\n     * XXX -- md5_bytea generates a byte array which is converts to hex text\n     * XXX -- we then call hex_to_bytes to convert back to the byte array\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240], "matched_text": "    /*"}, {"satd_id": 23570809, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": "\n     * loop through the chunks of bits from right to left, counting zeros.\n     * stop when we hit a 1.\n     * XXX currently we look at CHAR_BIT (8) bits at a time\n     * which would seem to avoid any 32- vs. 64-bit concerns.\n     * might be worth tuning this up to do 32 bits at a time.\n     ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [36, 37, 38, 39, 40, 41, 42], "matched_text": "    /*"}, {"satd_id": 23570821, "satd_repo": 42763345, "satd_sha": "c53166399c90affd393020d0f077229ccde26b9d", "satd_text": " debugging utility to output strings in binary ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [210], "matched_text": "/* debugging utility to output strings in binary */"}, {"satd_id": 23570861, "satd_repo": 42763345, "satd_sha": "2d25d8853d79b19cac314e1447edf8e68237f2bf", "satd_text": " XXXX would like to pfree the old transblob, but the memory allocator doesn't like it\n XXXX Meanwhile we know that this memory \"leak\" is of fixed size and will get\n XXXX deallocated \"soon\" when the memory context is destroyed.\n \"catch up\" on the past as if we were doing FM from the beginning:\n Just for sanity, let's check.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570862, "satd_repo": 42763345, "satd_sha": "2d25d8853d79b19cac314e1447edf8e68237f2bf", "satd_text": " unsigned int hashes[MD5_HASHLEN_BITS/sizeof(unsigned int)];\n XXX In fact, the full cost right now is:\n XXX -- outfunc converts internal type to CString\n XXX -- here we convert CString to text, to call md5_bytea\n XXX -- md5_bytea generates a byte array which is converts to hex text\n XXX -- we then call hex_to_bytes to convert back to the byte array\n 3rd argument: the Postgres hex text representation uses two characters for each 32-bit integer.\n Each character is 8 bits.  So it uses 16 bits for each 32-bit integer.\n XXXXX HUH??? ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570863, "satd_repo": 42763345, "satd_sha": "2d25d8853d79b19cac314e1447edf8e68237f2bf", "satd_text": " XXXX Would be cleaner to try the sortasort insert and if it fails, then continue.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [110], "matched_text": "    // XXXX Would be cleaner to try the sortasort insert and if it fails, then continue."}, {"satd_id": 23570865, "satd_repo": 42763345, "satd_sha": "2d25d8853d79b19cac314e1447edf8e68237f2bf", "satd_text": " XXX should we pfree this string by hand???  What memory context are we in??\n on the first call, we should have the empty string (if the agg was declared properly!)\n XXX is it better form to have the initial value be NULL??", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570896, "satd_repo": 42763345, "satd_sha": "0569abaf532c3aa4c3ea576626cbd8da23f9cc05", "satd_text": " This is Postgres boilerplate for UDFs that modify the data in their own context.\n Such UDFs can only be correctly called in an agg context since regular scalar\n UDFs are essentially stateless across invocations.\n XXX POTENTIAL BUG HERE\n We are hashing based on the string produced by the type's outfunc.\n      This may not produce the right answer, if the outfunc doesn't produce\n      a distinct string for every distinct value.  \n XXX CHECK HOW HASH JOIN DOES THIS.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570897, "satd_repo": 42763345, "satd_sha": "0569abaf532c3aa4c3ea576626cbd8da23f9cc05", "satd_text": " The POSTGRES code for md5 returns a bytea with a textual representation of the \n md5 result.  We then convert it back into binary.\n XXX The internal POSTGRES source code is actually converting from binary to the bytea\n     so this is rather wasteful, but the internal code is marked static and unavailable here.\n XXXX Why does the 3rd argument work here?", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": false, "lines": false, "matched_text": null}, {"satd_id": 23570898, "satd_repo": 42763345, "satd_sha": "0569abaf532c3aa4c3ea576626cbd8da23f9cc05", "satd_text": " we have room in sortabig\n one could imagine a more efficient (merge-based) sortasort merge,\n but for now we just copy the values from the smaller sortasort into\n the bigger one.", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [270, 271, 272, 273], "matched_text": "      // we have room in sortabig"}, {"satd_id": 23570900, "satd_repo": 42763345, "satd_sha": "0569abaf532c3aa4c3ea576626cbd8da23f9cc05", "satd_text": " initial size for a sortasort: we'll guess at 8 bytes per string.\n sortasort will grow dynamically if we guessed too low", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [28, 29], "matched_text": "// initial size for a sortasort: we'll guess at 8 bytes per string."}, {"satd_id": 23570954, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": " XXX ARITHMETIC", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [406], "matched_text": "    // XXX ARITHMETIC"}, {"satd_id": 23570957, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": " char           typcategory;\n bool           typispreferred;", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/countmin.c", "lines": [110, 111], "matched_text": "  // char           typcategory;"}, {"satd_id": 23570979, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": " would be more efficient to merge sorted prefixes, but not worth it", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/fm.c", "lines": [243], "matched_text": "    // would be more efficient to merge sorted prefixes, but not worth it"}, {"satd_id": 23571040, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": " debugging utility to output strings in binary", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [163], "matched_text": "// debugging utility to output strings in binary"}, {"satd_id": 23571043, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": " \n * Simple linear function to find the rightmost one (# trailing zeros) in an unsigned int.\n * Based on \n * http://graphics.stanford.edu/~seander/bithacks.html#ZerosOnRightLinear\n * Look there for fancier ways to do this.\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [117, 118, 119, 120, 121, 122], "matched_text": "/* "}, {"satd_id": 23571045, "satd_repo": 42763345, "satd_sha": "b7507979bcdc3c013c1dcff314eb4704508cfa92", "satd_text": "\n * Given an array of n b-bit bitmaps, turn on the k'th most\n * significant bit of the j'th bitmap.\n * sketchsz_bits is the number of BITS per sketch (not bytes!!)\n * Both j and k are zero-indexed, BUT the bitmaps are indexed left-to-right,\n * whereas significant bits are (of course!) right-to-left within the bitmap.\n *\n * This function makes destructive updates; the caller should make sure to check\n * that we're being called in an agg context!\n ", "satd_label": "Code|Design-SATD", "satd_label_short": "CD", "file": "sketch/sketch_support.c", "lines": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "matched_text": "/*"}]